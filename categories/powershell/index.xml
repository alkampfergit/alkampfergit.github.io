<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>PowerShell on Codewrecks</title><link>https://www.codewrecks.com/categories/powershell/</link><description>Recent content in PowerShell on Codewrecks</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sat, 17 Apr 2021 08:00:00 +0200</lastBuildDate><atom:link href="https://www.codewrecks.com/categories/powershell/index.xml" rel="self" type="application/rss+xml"/><item><title>Return value in PowerShell, a typical error</title><link>https://www.codewrecks.com/post/general/powershell/powershell-return-value/</link><pubDate>Sat, 17 Apr 2021 08:00:00 +0200</pubDate><guid>https://www.codewrecks.com/post/general/powershell/powershell-return-value/</guid><description>&lt;p>When you create a function in PowerShell you need to remember that if you write output, this will &lt;a href="https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_return?view=powershell-7.1">be included in the returned value&lt;/a>. This means that &lt;strong>if you end your function with return $something you would not get only the content of the variable $something but every output that you did in the function&lt;/strong>.&lt;/p>
&lt;p>For this reason you need to be super careful not to use Write-Output, because all the output will be included in the returned value.&lt;/p></description></item><item><title>Pills: Invoke-WebRequest really Slow</title><link>https://www.codewrecks.com/post/azdo/pills/powershell-download/</link><pubDate>Tue, 03 Nov 2020 22:12:42 +0200</pubDate><guid>https://www.codewrecks.com/post/azdo/pills/powershell-download/</guid><description>&lt;p>There are times when using Invoke-WebRequest in PowerShell is really slow, especially compared to a direct download in a browser. The answer is as always on &lt;a href="https://stackoverflow.com/questions/28682642/powershell-why-is-using-invoke-webrequest-much-slower-than-a-browser-download">StackOverflow in this post&lt;/a> but for some reason approved answer is not my favorite.&lt;/p>
&lt;p>Approved solution uses WebClient, &lt;strong>it is perfectly valid, but other answer are more correct&lt;/strong> (and have more votes). In my opinion the real solution is disabling progress.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>$ProgressPreference = &lt;span style="color:#e6db74">&amp;#39;SilentlyContinue&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This usually is enough to speedup Invoke-WebRequest without changing every single call to use WebClient.&lt;/p></description></item></channel></rss>
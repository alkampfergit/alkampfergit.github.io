<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>github on Codewrecks</title><link>https://www.codewrecks.com/categories/github/</link><description>Recent content in github on Codewrecks</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 28 Aug 2021 08:00:00 +0200</lastBuildDate><atom:link href="https://www.codewrecks.com/categories/github/index.xml" rel="self" type="application/rss+xml"/><item><title>Analyze Python project with SonarCloud and GitHub</title><link>https://www.codewrecks.com/post/github/python-sonarcloud-actions/</link><pubDate>Sat, 28 Aug 2021 08:00:00 +0200</pubDate><guid>https://www.codewrecks.com/post/github/python-sonarcloud-actions/</guid><description>SonarCloud is free for Open Source projects, and for languages like Python, that does not need compilation, it can directly analyze the repository without any intervention from the author. This feature is automatically enabled when you setup your Project in SonarCloud and it determines that you have not compiled language.
Figure 1: Analysis configuration shows that in this project we have CI analysis
If you look at Figure you can see that in my situation I have a Continuous Integration based analysis and my automatic analysis is disabled.</description></item><item><title>Configure Codespaces for Python projects</title><link>https://www.codewrecks.com/post/github/codespaces-python/</link><pubDate>Thu, 26 Aug 2021 08:00:00 +0200</pubDate><guid>https://www.codewrecks.com/post/github/codespaces-python/</guid><description>One of the great advantage of Codespaces is the ability to preconfigure the environment so you do not need to waste time installing and configuring your toolchain. Python is a perfect example of this scenario, I&amp;rsquo;ve a small project to generate Git Graph Representation and since I&amp;rsquo;m not a full time Python developer, I&amp;rsquo;ve not it installed and perfectly configured in all of my environment. Also I primarily work on Windows, so Codespaces allows me to test everything on Linux with a single click.</description></item><item><title>Configure Codespaces for a real project</title><link>https://www.codewrecks.com/post/github/configuring-codespaces/</link><pubDate>Fri, 20 Aug 2021 08:00:00 +0200</pubDate><guid>https://www.codewrecks.com/post/github/configuring-codespaces/</guid><description>In previous post I explored the many advantages I&amp;rsquo;ve found using GitHub codespaces to author blog posts directly in a browser. That example was surely too simple, after all a hugo blog is just markdown, but nevertheless Codespaces allows me to configure my environment with great easy.
You can follow the guide on the official link but here is a quick summary on how I configured my codespaces for my blog.</description></item><item><title>Use GitHub codespaces to author blog post</title><link>https://www.codewrecks.com/post/github/codespaces-hugo/</link><pubDate>Thu, 19 Aug 2021 08:00:00 +0200</pubDate><guid>https://www.codewrecks.com/post/github/codespaces-hugo/</guid><description>The scenario I played a little bit with GitHub Codespaces when it was in preview, now it is time to try to use it real activities to understand scenarios where it can be useful.
To have a real test you need to setup a goal to verify if the tool is capable of reaching that goal, and if it is an advantage over existing tool. My first goal is being able to write Blog Post in hugo with GitHub Codespaces and being able to determine if it is more productive than running a standalone local version of Visual Studio code.</description></item><item><title>Sonar Cloud analysis in GitHub</title><link>https://www.codewrecks.com/post/github/github-sonar-cloud/</link><pubDate>Sat, 13 Mar 2021 08:00:00 +0200</pubDate><guid>https://www.codewrecks.com/post/github/github-sonar-cloud/</guid><description>Well, you know me, I like to have my code analyzed by SonarCloud when possible, and since it is free for open source, I always use Azure DevOps pipeline to automatically analyze code on each push. Now that GitHub actions are available, a good solution is to simply use GitHub actions to analyze code, without disturbing Azure DevOps.
Azure DevOps pipelines are, in my opinion, more mature than GitHub actions, but for small tasks, it is simpler to go with Actions.</description></item><item><title>Code scanning in GitHub</title><link>https://www.codewrecks.com/post/github/code-scanning/</link><pubDate>Sat, 03 Oct 2020 08:00:00 +0200</pubDate><guid>https://www.codewrecks.com/post/github/code-scanning/</guid><description>As you can read directly from GitHub blog post GitHub code scanning is now available and ready to use for your repositories.
To enable code scanning you can just go to the security tab of your repository and choose to enable code scanning.
Figure 1: Enable code scanning
You are presented with a list of Code Scanning tools at your disposal, clearly the first is CodeQL and it is automatically offered to you by GitHub, then you can find other tool available in the marketplace</description></item><item><title>Continuous Integration in GitHub Actions deploy in AzureDevops</title><link>https://www.codewrecks.com/post/old/2020/04/continuous-integration-in-github-actions-deploy-in-azuredevops/</link><pubDate>Sat, 04 Apr 2020 05:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2020/04/continuous-integration-in-github-actions-deploy-in-azuredevops/</guid><description>My dear friend Matteo just published an interesting article on integration between GitHub actions and Azure Devops Pipeline here. I have a different scenario where I’ve already published a GitHub release from a GitHub action, but I have nothing ready in GitHub to release in my machines.
While GitHub is really fantastic for source code and starts having a good support for CI with Actions, in the release part it still miss a solution.</description></item><item><title>Azure DevOps pipeline template for build and release NET core project</title><link>https://www.codewrecks.com/post/old/2020/03/azure-devops-pipeline-template-for-build-and-release-net-core-project/</link><pubDate>Sun, 29 Mar 2020 09:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2020/03/azure-devops-pipeline-template-for-build-and-release-net-core-project/</guid><description>Some days ago I’ve blogged on how to release projects on GitHub with actions, now it is time to understand how to do a similar thing in Azure DevOps to build / test / publish a.NET core library with nuget. The purpose is to create a generic template that can be reused on every general that needs to build an utility dll, run test and publish to a Nuget feed.</description></item><item><title>GitHub actions improvements</title><link>https://www.codewrecks.com/post/old/2020/03/github-actions-improvements/</link><pubDate>Thu, 12 Mar 2020 17:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2020/03/github-actions-improvements/</guid><description>GitHub actions is really new kid on the block and even if I still prefer Azure DevOps pipelines, because they are really more production ready, GitHub actions is rapidly evolving.
Figure 1 : GitHub actions now has a dedicated editor for actions to quickly include actions
As you can see in Figure 1 , when you edit workflow file in GitHub online editor you can simply browse all available actions.</description></item><item><title>Use latest OS image tag in GitHub actions</title><link>https://www.codewrecks.com/post/old/2020/03/use-latest-os-image-tag-in-github-actions/</link><pubDate>Sun, 08 Mar 2020 09:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2020/03/use-latest-os-image-tag-in-github-actions/</guid><description>I have a nice GH action that runs some build and test on my project, now I noticed that some of the latest runs have some problem.
Figure 1: My action that ran only one of the matrix combination
Action has two distinct run because it has a matrix, actually I want to run it against Linux and Windows operating systems, but it seems that it does not run anymore on Windows.</description></item><item><title>GitHub Actions plus Azure Docker Registry</title><link>https://www.codewrecks.com/post/old/2020/02/github-actions-plus-azure-docker-registry/</link><pubDate>Tue, 25 Feb 2020 17:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2020/02/github-actions-plus-azure-docker-registry/</guid><description>I have some projects that needs SqlServer and MongoDb or ElasticSearch to run some integration tests, these kind of requirements made difficult to use hosted agent for build (in Azure DevOps) or whatever build system you are using where a provider gives you pre-configured machine to run your workflow. Usually each build engine made possible for you to run your own agent and GitHub actions makes no difference ( you can read here about self installed action runners https://help.</description></item><item><title>GitHub security Alerts</title><link>https://www.codewrecks.com/post/old/2019/10/github-security-alerts/</link><pubDate>Tue, 22 Oct 2019 16:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2019/10/github-security-alerts/</guid><description>I really love everything about security and I’m really intrigued by GitHub security tab that is now present on you repository. In your project usually it is disabled by default.
Figure 1: GitHub Security tab on your repository
If you enable it you start receiving suggestion based on code that you check in on the repository , as an example, GitHub will scan your npm packages source to find dependencies with libraries that are insecure.</description></item><item><title>GitHub Actions second round</title><link>https://www.codewrecks.com/post/old/2019/10/github-actions-second-round/</link><pubDate>Sat, 05 Oct 2019 09:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2019/10/github-actions-second-round/</guid><description>After being capable of running build and test in my GitHub action workflow, it is time to experiment with matrix to have the build run on multiple OSes. This can be tricky if you use (like me) some Docker Images (Mongodb, SqlServer). This because when you choose Windows machine, you are using Windows Container services , not standard Docker for Windows. This means that you are not able to run standard Docker container based on linux, but you need to use Windows Container based image.</description></item><item><title>GitHub Actions Error pushing with workflow modified</title><link>https://www.codewrecks.com/post/old/2019/09/github-actions-error-pushing-with-workflow-modified/</link><pubDate>Thu, 26 Sep 2019 16:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2019/09/github-actions-error-pushing-with-workflow-modified/</guid><description>After creating a workflow for GitHub Action, if you try to modify the workflow locally then push to GitHub you can incur in strange error.
refusing to allow an integration to create or update.github/workflows/ci.yml
Figure 1: Error in pushing to Git Repository
The reason seems to be a different permission in auth token used for authentication, then to solve the problem you need to clear credentials then try again the operation.</description></item><item><title>First Experience with GitHub Actions</title><link>https://www.codewrecks.com/post/old/2019/09/first-experience-with-github-actions/</link><pubDate>Thu, 26 Sep 2019 15:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2019/09/first-experience-with-github-actions/</guid><description>GitHub actions is the new CI/CD system created by GitHub that allows you to build and release your software with a simple workflow defined in YAML file. Actually it is in beta, but you can simply request to be enlisted and your account will be enabled so you can try it in preview.
Actions engine is based on a yaml definition that is stored directly in code, there are lots of predefined actions made by GitHub team as well as custom actions that can be developed by the community.</description></item></channel></rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Git on Codewrecks</title><link>https://www.codewrecks.com/categories/git/</link><description>Recent content in Git on Codewrecks</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 12 Feb 2020 17:00:37 +0200</lastBuildDate><atom:link href="https://www.codewrecks.com/categories/git/index.xml" rel="self" type="application/rss+xml"/><item><title>Azure DevOps Git repository options</title><link>https://www.codewrecks.com/post/old/2020/02/azure-devops-git-repository-options/</link><pubDate>Wed, 12 Feb 2020 17:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2020/02/azure-devops-git-repository-options/</guid><description>Azure DevOps is a big product and often users start using it without fully explore all the possibilities. As an example, when it is time to work with Git Repositories, users just create repositories and start working without any further configuration.
If you navigate to the Repos section of Project Settings page, you can configure lots of options for repositories. Security is probably the most important setting, because it determines who can access that specific repository and what permission each user / group has in the context of that very specific repository.</description></item><item><title>How to delete content in Azure DevOps wiki</title><link>https://www.codewrecks.com/post/old/2019/07/how-to-delete-content-in-azure-devops-wiki/</link><pubDate>Fri, 05 Jul 2019 14:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2019/07/how-to-delete-content-in-azure-devops-wiki/</guid><description>Today I got a simple but interesting question about Azure DevOps, how can I completely delete the content of the wiki ? There are not so many reason for this, but sometimes you really want to start from scratch. Now suppose you have your wiki:
Figure 1: Wiki with a simple page
You have created some pages, you played a little bit with the wiki, you attached some cute pets photo and content to the wiki itself, maybe just to gain familiarity with the wiki itself.</description></item><item><title>Git and the Hell of case sensitiveness</title><link>https://www.codewrecks.com/post/old/2018/12/git-and-the-hell-of-case-sensitiveness/</link><pubDate>Sat, 29 Dec 2018 09:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2018/12/git-and-the-hell-of-case-sensitiveness/</guid><description>If you know how git works, you are perfectly aware that, even if you work in operating systems with case insensitive file system, all commit are case sensitive. Sometimes if you change the case of a folder, then commit modification of files inside that folder, you will incur into problems, because if casing of the path changes, the files are different for the Git Engine (but not for operating systems like windows).</description></item><item><title>NullReferenceException in windows when Git fetch or pull</title><link>https://www.codewrecks.com/post/old/2018/10/nullreferenceexception-in-windows-when-git-fetch-or-pull/</link><pubDate>Fri, 12 Oct 2018 10:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2018/10/nullreferenceexception-in-windows-when-git-fetch-or-pull/</guid><description>After updating Git to newer 2.19.1. for windows, it could happen that you are not able to use anymore credential manager. The sympthom is, whenever you git fetch or pull, you got a NullReferenceException and or error unable to read askpass response from ‘C:/Program Files/Git/mingw64/libexec/git-core/git-gui—askpass’
Git credential manager for Windows in version 2.19.1 could have some problem and generates a NullReference Exception
Clearing Windows Credential Manager does not solves the problem, you still have the same error even if you clone again the repo in another folder.</description></item><item><title>Configure Visual Studio 2017 155 for pull 8211rebase</title><link>https://www.codewrecks.com/post/old/2017/12/configure-visual-studio-2017-15-5-for-pull-rebase/</link><pubDate>Sat, 23 Dec 2017 12:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2017/12/configure-visual-studio-2017-15-5-for-pull-rebase/</guid><description>I’m a great fan of rebasing over merge and I’m convinced that the default pull should be a fetch and rebase , using fetch and merge only when it is really needed. Not having the option to configure a GUI to do a pull –rebase is a really annoying problem, that can be somewhat limited configuring pull.rebase git option to true, as explained in previous post. Actually, the lack of rebase on pull option makes me stop using the IDE.</description></item><item><title>Configure Git repository for automatic pull 8211rebase</title><link>https://www.codewrecks.com/post/old/2017/12/configure-git-repository-for-automatic-pull-rebase/</link><pubDate>Tue, 19 Dec 2017 19:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2017/12/configure-git-repository-for-automatic-pull-rebase/</guid><description>I’m not a great fan of Git Graphical User Interfaces, I use mainly command line, but I needed to admit that, for novice user, the ability to use a GUI is something that can easy the pain of transition to a new tool. Visual Studio 2017 is a decent GUI for Git and since.NET developers are used to it, people want to stay as much as possible inside the IDE, leaving the commandline only for special operation (squash, reflog, etc)</description></item><item><title>Optimize your local git repository from time to time</title><link>https://www.codewrecks.com/post/old/2017/06/optimize-your-local-git-repository-from-time-to-time/</link><pubDate>Thu, 22 Jun 2017 05:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2017/06/optimize-your-local-git-repository-from-time-to-time/</guid><description>Git is an exceptional piece of software and I really cannot think living without it. Now with superfast SSD, you can use git without performance problem even for large repositories (maybe you converted an old Subversion or TFVC).
When your repository has thousands of object and especially if you adopt flows of work where you rebase often, probably your repository has large number of unnecessary object that can be deleted safely.</description></item><item><title>Bash pornography</title><link>https://www.codewrecks.com/post/old/2017/01/bash-pornography/</link><pubDate>Wed, 18 Jan 2017 17:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2017/01/bash-pornography/</guid><description>Suppose you have two Git repositories that are in sync with a VSTS build, after some time the usual problem is that, branches that are deleted from the “main” repository are not deleted from mirrored repository.
The reason is, whenever someone does a push on main repository, VSTS build push the branch to the other repository , but when someone deleted a branch, there is no build triggered, so the mirrored repository still maintain all branches.</description></item><item><title>Git for windows getting Invalid username or password with Wincred</title><link>https://www.codewrecks.com/post/old/2015/06/git-for-windows-getting-invalid-username-or-password-with-wincred/</link><pubDate>Tue, 23 Jun 2015 06:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2015/06/git-for-windows-getting-invalid-username-or-password-with-wincred/</guid><description>If you use Https to communicate with your git repository, Es, Github or VisualStudioOnline, you usually setup credential manager to avoid entering credential for each command that contact the server. With latest versions of git you can configure wincred with this simple command.
1 git config --global credential.helper wincred This morning I start getting error while I’m trying to push some commits to GitHub.
1 2 3 4 $ git push remote: Invalid username or password.</description></item><item><title>Git submodule update error Permission Denied Publickey</title><link>https://www.codewrecks.com/post/old/2014/08/git-submodule-update-error-permission-denied-publickey/</link><pubDate>Sun, 10 Aug 2014 07:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2014/08/git-submodule-update-error-permission-denied-publickey/</guid><description>It could happens when you clone a Git Repository with submodules, issuing a * git submodule update *command, you are prompted with this error error.
Cloning into ‘src/xxxx’…
Warning: Permanently added the RSA host key for IP address xxx.xxx.xxx.xxx to the list of known hosts.
Permission denied (publickey).
fatal: Could not read from remote repository.
If you search in the internet for the cause of errors, you can find some people suggesting that the url specified in.</description></item></channel></rss>
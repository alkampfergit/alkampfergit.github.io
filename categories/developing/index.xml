<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Developing on Codewrecks</title><link>https://www.codewrecks.com/categories/developing/</link><description>Recent content in Developing on Codewrecks</description><generator>Hugo</generator><language>en</language><lastBuildDate>Tue, 19 Sep 2023 15:45:18 +0200</lastBuildDate><atom:link href="https://www.codewrecks.com/categories/developing/index.xml" rel="self" type="application/rss+xml"/><item><title>Debugging Production Issues with Dump Files and Visual Studio</title><link>https://www.codewrecks.com/post/visualstudio/debugging-a-minidump/</link><pubDate>Tue, 19 Sep 2023 15:45:18 +0200</pubDate><guid>https://www.codewrecks.com/post/visualstudio/debugging-a-minidump/</guid><description>&lt;p>Sometimes, you may encounter a problem in a production environment, such as a service that suddenly starts consuming a significant amount of RAM and CPU. In the past, I&amp;rsquo;ve seen people attempt to install Visual Studio on a production server to debug the issue directly, instead of relying on logs or other techniques. However, there&amp;rsquo;s a better approach: &lt;strong>creating a dump file of the problematic process from the Task Manager&lt;/strong>. You can just right-click the process on Task Manager and request a MiniDump.&lt;/p></description></item><item><title>How to run x86 Unit Test in a .NET core application</title><link>https://www.codewrecks.com/post/visualstudio/dotnetcore-run-test-x86/</link><pubDate>Wed, 06 May 2020 21:45:18 +0200</pubDate><guid>https://www.codewrecks.com/post/visualstudio/dotnetcore-run-test-x86/</guid><description>&lt;p>We have a standard .NET standard solution with some projects and some Unit Tests, &lt;strong>everything runs perfectly until we have the need to force compilation of one of the project in x86&lt;/strong>. This can be done with RuntimeIdentifier tag in project file.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;Project&lt;/span> &lt;span style="color:#a6e22e">Sdk=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Microsoft.NET.Sdk&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;PropertyGroup&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;TargetFramework&amp;gt;&lt;/span>netcoreapp3.1&lt;span style="color:#f92672">&amp;lt;/TargetFramework&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;RuntimeIdentifier&amp;gt;&lt;/span>win-x86&lt;span style="color:#f92672">&amp;lt;/RuntimeIdentifier&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/PropertyGroup&amp;gt;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>After this modification &lt;strong>tests started to fail with an error&lt;/strong> that is clearly directly related to the change in runtime, but was highly unexpected.&lt;/p></description></item></channel></rss>
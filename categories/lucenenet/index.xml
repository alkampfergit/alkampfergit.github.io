<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>LuceneNET on Codewrecks</title><link>https://www.codewrecks.com/categories/lucenenet/</link><description>Recent content in LuceneNET on Codewrecks</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sat, 25 Aug 2012 08:00:37 +0200</lastBuildDate><atom:link href="https://www.codewrecks.com/categories/lucenenet/index.xml" rel="self" type="application/rss+xml"/><item><title>Index your blog using tags and lucenenet</title><link>https://www.codewrecks.com/post/old/2012/08/index-your-blog-using-tags-and-lucene-net/</link><pubDate>Sat, 25 Aug 2012 08:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2012/08/index-your-blog-using-tags-and-lucene-net/</guid><description>&lt;ul>
&lt;li>&lt;a href="http://www.codewrecks.com/blog/index.php/2012/06/20/getting-started-with-lucene-net/">Getting Started With Lucene.NET&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.codewrecks.com/blog/index.php/2012/06/21/getting-started-with-lucene-netsearching/">Searching and more detail on Documents Fields&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.codewrecks.com/blog/index.php/2012/07/03/advanced-queries-with-lucene-net/">Advanced Queries with Lucene.NET&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.codewrecks.com/blog/index.php/2012/07/05/case-sensitivity-in-lucene-search/">Case Sensitivity in Lucene.NET Searches&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.codewrecks.com/blog/index.php/2012/07/20/faceted-searches-with-lucene-net/">Faceted searches with Lucene.NET&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.codewrecks.com/blog/index.php/2012/08/21/assign-tag-to-lucene-documents/">Assign Tag To Lucene documents&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>In the last part of my series on Lucene &lt;strong>I show how simple is adding tags to document to do a simple tag based categorization&lt;/strong> , now it is time to explain how you can automate this process and how to use some advanced characteristic of lucene. First of all I write a specialized analyzer called TagSnowballAnalyzer, based on standard SnowballAnalyzer plus a series of keywords associated to various tags, here is how I construct it.&lt;/p></description></item><item><title>Assign 'tag' to lucene documents</title><link>https://www.codewrecks.com/post/old/2012/08/assign-tag-to-lucene-documents/</link><pubDate>Tue, 21 Aug 2012 20:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2012/08/assign-tag-to-lucene-documents/</guid><description>&lt;ul>
&lt;li>&lt;a href="http://www.codewrecks.com/blog/index.php/2012/06/20/getting-started-with-lucene-net/">Getting Started With Lucene.NET&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.codewrecks.com/blog/index.php/2012/06/21/getting-started-with-lucene-netsearching/">Searching and more detail on Documents Fields&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.codewrecks.com/blog/index.php/2012/07/03/advanced-queries-with-lucene-net/">Advanced Queries with Lucene.NET&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.codewrecks.com/blog/index.php/2012/07/05/case-sensitivity-in-lucene-search/">Case Sensitivity in Lucene.NET Searches&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.codewrecks.com/blog/index.php/2012/07/20/faceted-searches-with-lucene-net/">Faceted searches with Lucene.NET&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>One of the good aspect of working with lucene.NET is that &lt;strong>it is really similar to a NoSql database, because it permits you to store “document” where a document is a generic collection of fields&lt;/strong>. Lucene has the ability to store not only textual field, but also Numeric Fields to solve interesting scenarios because you are not limited in storing and searching only for text. &lt;strong>Suppose you want to categorize all posts of a blog where each post can have one or more Tag and a pertinence value associated to that Tag&lt;/strong>. The technique used to determine the Tags to associate to a Blog post is not the subject of this discussion, what I need is only a technical way in Lucene.NET to add tags with an integer value to a document and issue query on them. For the sake of this discussion we can say that blog user decide one or more tag word to associate to the post and give a value to 1 to 10 to determine how pertinent the tag is to the post. We can add tags to document that represent a post with this simple code.&lt;/p></description></item><item><title>Faceted searches with LuceneNET</title><link>https://www.codewrecks.com/post/old/2012/07/faceted-searches-with-lucene-net/</link><pubDate>Fri, 20 Jul 2012 20:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2012/07/faceted-searches-with-lucene-net/</guid><description>&lt;ul>
&lt;li>&lt;a href="http://www.codewrecks.com/blog/index.php/2012/06/20/getting-started-with-lucene-net/">Getting Started With Lucene.NET&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.codewrecks.com/blog/index.php/2012/06/21/getting-started-with-lucene-netsearching/">Searching and more detail on Documents Fields&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.codewrecks.com/blog/index.php/2012/07/03/advanced-queries-with-lucene-net/">Advanced Queries with Lucene.NET&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.codewrecks.com/blog/index.php/2012/07/05/case-sensitivity-in-lucene-search/">Case Sensitivity in Lucene.NET Searches&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>One of the coolest feature of Lucene.NET is the &lt;strong>ability to do&lt;/strong> &lt;a href="http://en.wikipedia.org/wiki/Faceted_classification">&lt;strong>faceted searches&lt;/strong>&lt;/a> &lt;strong>with really few lines of code&lt;/strong>. A faceted search &lt;strong>runs a query on an index and calculate the distribution of the results based on a property of the document&lt;/strong>. Let me show a sample result and then you probably will have a better understanding of this concept. Suppose I’m indexing product from the Microsoft Sample database AdventureWorks, each product has an Id a category and a description fields and I offered this simple UI for searching.&lt;/p></description></item></channel></rss>
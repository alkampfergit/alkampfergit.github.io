<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Team Foundation Server on Codewrecks</title><link>https://www.codewrecks.com/categories/team-foundation-server/</link><description>Recent content in Team Foundation Server on Codewrecks</description><generator>Hugo</generator><language>en</language><lastBuildDate>Thu, 02 Aug 2018 17:00:37 +0200</lastBuildDate><atom:link href="https://www.codewrecks.com/categories/team-foundation-server/index.xml" rel="self" type="application/rss+xml"/><item><title>Creating a Wiki with code in VSTS</title><link>https://www.codewrecks.com/post/old/2018/08/creating-a-wiki-with-code-in-vsts/</link><pubDate>Thu, 02 Aug 2018 17:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2018/08/creating-a-wiki-with-code-in-vsts/</guid><description>&lt;p>Information spread is one of the key of success for Agile Teams, the ability to quick find information about a project, definition of UBIQUITOUS LANGUAGE and everything that can be related to the project should be prominent for each member of the project. In this scenario, **the information should also be &lt;em>near&lt;/em> where it need to be, but at the same time it should be widely available to every member of the team **.&lt;/p></description></item><item><title>Run SonarCloud analysis in VSTS TFS Build</title><link>https://www.codewrecks.com/post/old/2018/03/run-sonarcloud-analysis-in-vsts-tfs-build/</link><pubDate>Sun, 25 Mar 2018 16:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2018/03/run-sonarcloud-analysis-in-vsts-tfs-build/</guid><description>&lt;p>Running a SonarQube analysis for TFS or VSTS is really easy because we can use a pre-made build tasks that requires few parameters and the game is done. &lt;strong>If you have open source project it made lot of sense to use a public account in SonarCloud&lt;/strong> , so you do not need to maintain a sonar server on-premise and you can also share your public account with the community.&lt;/p>
&lt;blockquote>
&lt;p>For open source projects, SonarCloud is available for you with zero effort and thanks to VSTS and TFS you can automate the analysis with few steps.&lt;/p></description></item><item><title>VSTS TFS use Wildcards for continuous integration in Git</title><link>https://www.codewrecks.com/post/old/2018/02/vsts-tfs-use-wildcards-for-continuous-integration-in-git/</link><pubDate>Tue, 20 Feb 2018 18:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2018/02/vsts-tfs-use-wildcards-for-continuous-integration-in-git/</guid><description>&lt;p>If you setup a build in VSTS / TFS against a git repository, you can choose to trigger the build when some specific branch changed. &lt;strong>You can press plus button and a nice combobox appears to select the branch you want to monitor&lt;/strong>.&lt;/p>
&lt;p>&lt;a href="https://www.codewrecks.com/blog/wp-content/uploads/2018/02/image-3.png">&lt;a target="_blank" href="https://www.codewrecks.com/blog/wp-content/uploads/2018/02/image_thumb-3.png"> &lt;img src="https://www.codewrecks.com/blog/wp-content/uploads/2018/02/image_thumb-3.png" alt="image" />&lt;/a>&lt;/a>&lt;/p>
&lt;p>&lt;em>&lt;strong>Figure 1&lt;/strong>&lt;/em>: &lt;em>Adding a branch as trigger in VSTS / TFS Build&lt;/em>&lt;/p>
&lt;p>This means that if you add feature/1312_languageSelector, each time a new commit will be pushed on that branch, a new build will trigger. Actually if you use GitFlow you are interested in building each feature branch, so you do not want to add every feature branch in the list of monitored branches.&lt;/p></description></item><item><title>TFS 2018 is out time to upgrade</title><link>https://www.codewrecks.com/post/old/2017/11/tfs-2018-is-out-time-to-upgrade/</link><pubDate>Wed, 22 Nov 2017 19:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2017/11/tfs-2018-is-out-time-to-upgrade/</guid><description>&lt;p>Some days are passed, but it is good to remind you that &lt;strong>TFS 2018 is finally out.&lt;/strong> Some people are surprised because after TFS 2015 we had TFS 2017 and we are still in 2017 and we already have version 2018, but this is the good part of the ALM tools in Microsoft, &lt;strong>they are really shipping tons of new goodness each year&lt;/strong> :).&lt;/p>
&lt;p>&lt;a href="https://www.visualstudio.com/en-us/news/releasenotes/tfs2018-relnotes">Release note page&lt;/a> contains all the details about the new version, from that link you have a small 13 minute video that explain what is new in this version and as usual in the page you have a detailed list of all the news with detailed information about each of the new features.&lt;/p></description></item><item><title>VSTS build failed test phase but 0 tests failed</title><link>https://www.codewrecks.com/post/old/2017/11/vsts-build-failed-test-but-0-test-failed/</link><pubDate>Sat, 18 Nov 2017 09:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2017/11/vsts-build-failed-test-but-0-test-failed/</guid><description>&lt;p>I had a strange situation where I have a build that suddenly starts &lt;strong>signal failing tests, but actually zero test failed&lt;/strong>.&lt;/p>
&lt;p>&lt;a href="https://www.codewrecks.com/blog/wp-content/uploads/2017/11/image.png">&lt;a target="_blank" href="https://www.codewrecks.com/blog/wp-content/uploads/2017/11/image_thumb.png"> &lt;img src="https://www.codewrecks.com/blog/wp-content/uploads/2017/11/image_thumb.png" alt="image" />&lt;/a>&lt;/a>&lt;/p>
&lt;p>&lt;em>&lt;strong>Figure 1&lt;/strong>&lt;/em>: &lt;em>No test failed, but the test phase was marked as failed&lt;/em>&lt;/p>
&lt;p>As you can see in Figure 1, the Test step is marked failed, but actually I have not a single test failed, indeed a strange situation. To troubleshoot this problem, you need to select the failing step to verify the exact output of the task.&lt;/p></description></item><item><title>Update GitVersion for large repositories</title><link>https://www.codewrecks.com/post/old/2017/04/update-gitversion-for-large-repositories/</link><pubDate>Sat, 22 Apr 2017 09:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2017/04/update-gitversion-for-large-repositories/</guid><description>&lt;p>As you know I’m a fanatic user of &lt;a href="http://www.codewrecks.com/blog/index.php/2015/10/17/integrating-gitversion-and-gitflow-in-your-vnext-build/">GitVersion&lt;/a> in builds, and &lt;strong>I’ve&lt;/strong> &lt;a href="http://www.codewrecks.com/blog/index.php/2016/03/17/writing-a-custom-task-for-build-vnext/">&lt;strong>written a simple task&lt;/strong>&lt;/a> &lt;strong>to use it in a TFS Build automatically&lt;/strong>. This is the typical task that you write and forget, because it just works and you usually not have the need to upgrade it. But there is a build where I start to see really high execution timing for the task, as an example GitVersion needs 2 minutes to run.&lt;/p></description></item><item><title>Use different Excel TFS VSTS Addin at the same time</title><link>https://www.codewrecks.com/post/old/2016/09/use-different-excel-tfs-vsts-addin-at-the-same-time/</link><pubDate>Sat, 03 Sep 2016 10:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2016/09/use-different-excel-tfs-vsts-addin-at-the-same-time/</guid><description>&lt;p>If you are a consultant, it is quite common that you work with various version of TFS Server at the same time. I have my personal account on VSTS, always updated to the latest version, but I have also customer that still uses TFS 2012 or TFS 2010.&lt;/p>
&lt;p>Microsoft test newer version of TFS against lots of applications to be sure that &lt;strong>newer versions of TFS do not break usage of existing tools.&lt;/strong> This means that usually you can upgrade your TFS without worrying that your VS 2010 or Visual Basic 6 stops working. You need to be aware that the opposite is not true. This imply that &lt;strong>newer version of Visual Studio could not work well with older version of TFS&lt;/strong>. This decision is done because Microsoft is encouraging people to keep their TFS installation up to date, and it would be a nightmare to always guarantee that newer tools would be able to communicate with the older service API.&lt;/p></description></item><item><title>Running Unit Tests on different machine during TFS 2015 build</title><link>https://www.codewrecks.com/post/old/2016/06/running-unit-tests-on-different-machine-during-tfs-2015-build/</link><pubDate>Sat, 04 Jun 2016 08:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2016/06/running-unit-tests-on-different-machine-during-tfs-2015-build/</guid><description>&lt;p>First of all I need to thanks my friend &lt;a href="http://blog.ehn.nu/">Jackob Ehn&lt;/a> that pointed me to the right direction to create a particular build.  In this post &lt;strong>I’ll share with you my journey to run tests on a different machine than the one that is running the build&lt;/strong>.&lt;/p>
&lt;p>&lt;strong>For some build it is interesting to have the ability to run some Unit Test (nunit in my scenario) on a machine different from that one that is running the build.&lt;/strong> There are a lot of legitimate reasons for doing this, for a project I’m working with, to run a set of test I need to have a huge amount of pre-requisites installed (LibreOffice, ghostscript, etc). Instead of installing those prerequisite on all agent machines, or install those one on a single build agent and using capabilities, I’d like to being able &lt;strong>to run the build on any build agent, but run the test in a specific machine that had all the prerequisite installed.&lt;/strong> &amp;gt; Sometimes it is necessary to run tests during build on machine different from that one where the build agent is running.&lt;/p></description></item><item><title>Avoid using Shell command in PowerShell scipts</title><link>https://www.codewrecks.com/post/old/2016/05/avoid-using-shell-command-in-powershell-scipts/</link><pubDate>Fri, 27 May 2016 15:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2016/05/avoid-using-shell-command-in-powershell-scipts/</guid><description>&lt;p>I have setup scripts that are used to install software, they are simply based on this paradigm&lt;/p>
&lt;blockquote>
&lt;p>The build produces a zip file that contains everything needed to install the software, then we have a script that accepts the zip file as parameter as well as some other parameters and does install sofwtare on a local machine&lt;/p>&lt;/blockquote>
&lt;p>This simple paradigm is perfect, because &lt;strong>we can manually install a software launching powershell, or we can create a Chocolatey package to automate the installation.&lt;/strong> Clearly you can use the very same script to release the software inside TFS Release Management.&lt;/p></description></item><item><title>Getting Work Item data in powershell through REST API</title><link>https://www.codewrecks.com/post/old/2016/01/getting-work-item-data-in-powershell-through-rest-api/</link><pubDate>Mon, 11 Jan 2016 17:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2016/01/getting-work-item-data-in-powershell-through-rest-api/</guid><description>&lt;p>&lt;strong>VSTS and the latests versions of on-premise TFS has the ability to access data through&lt;/strong> &lt;a href="https://www.visualstudio.com/en-us/integrate/api/overview">&lt;strong>REST API&lt;/strong>&lt;/a> &lt;strong>.&lt;/strong> This way to access TFS data is really convenient expecially if used from PowerShell scripts, because you do not need any external dependency, except being able to issue REST requests with the &lt;a href="https://technet.microsoft.com/en-us/library/hh849971.aspx">Invoke-RestRequest&lt;/a> cmdlet.&lt;/p>
&lt;p>To simplify accessing your VSTS account, you can &lt;strong>enable alternate credentials, needed to issue request with simple Basic Authentication&lt;/strong>. Here is a PowerShell snippet that retrieve a Work Item with a given ID.&lt;/p></description></item><item><title>Build vNext support for deploying bits to Windows machines</title><link>https://www.codewrecks.com/post/old/2015/06/build-vnext-support-for-deploying-bits-to-windows-machines/</link><pubDate>Sat, 20 Jun 2015 13:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2015/06/build-vnext-support-for-deploying-bits-to-windows-machines/</guid><description>&lt;p>One of the most interesting trend of DevOps movement is continuous deployment using build machines. Once you get your continuous build up and running, the next step is &lt;strong>customizing the build to deploy on one or more test environments&lt;/strong>. If you do not need to deploy in production, there is no need of a controlled release pipeline (Ex: Release Management) and using a simple build is the most productive choiche. In this scenario &lt;strong>one of the biggest pain is moving bits from the build machine to target machines.&lt;/strong> Once build output is moved to a machine, installing bits is usually only a matter of using some PowerShell script.&lt;/p></description></item><item><title>Microsoft support for non Windows developers</title><link>https://www.codewrecks.com/post/old/2015/05/microsoft-support-for-non-windows-developers/</link><pubDate>Sat, 16 May 2015 09:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2015/05/microsoft-support-for-non-windows-developers/</guid><description>&lt;p>During Build 2015 conference Microsoft announced** &lt;strong>&lt;a href="https://code.visualstudio.com/">** Visual Studio Code **&lt;/a>&lt;/strong> , a free IDE to develop web, cloud and modern application **. The nice aspect of VS Code is that it runs on every platform, here is a screenshot of Code running on a Linux Ubuntu box.&lt;/p>
&lt;p>&lt;a href="https://www.codewrecks.com/blog/wp-content/uploads/2015/05/image4.png">&lt;a target="_blank" href="https://www.codewrecks.com/blog/wp-content/uploads/2015/05/image_thumb4.png"> &lt;img src="https://www.codewrecks.com/blog/wp-content/uploads/2015/05/image_thumb4.png" alt="image" />&lt;/a>&lt;/a>** Figure 1: **&lt;em>Visual Studio Code running on Linux box&lt;/em>&lt;/p>
&lt;p>I can now clone a git repository from my Visual Studio Online account and create a first Hello Node Js application. VS Code is not just an editor, and I’m able to debug my node.js code with easy.&lt;/p></description></item><item><title>Unable to expose Symbol Server with IIS</title><link>https://www.codewrecks.com/post/old/2014/06/unable-to-expose-symbol-server-with-iis/</link><pubDate>Sun, 01 Jun 2014 13:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2014/06/unable-to-expose-symbol-server-with-iis/</guid><description>&lt;p>Sadly enough, I verified in these years that many people using TFS ignore what a symbol server is. For all those readers that does not know what a symbol server is, I suggest to &lt;strong>read my previous article that explains&lt;/strong> &lt;a href="http://www.codewrecks.com/blog/index.php/2013/07/04/manage-symbol-server-on-azure-or-on-premise-vm-and-tf-service/">&lt;strong>how to manage a symbol server on Azure or on-premises VM with TFS and IIS&lt;/strong>&lt;/a>.&lt;/p>
&lt;p>Recently I’ve got some feedback from people that were not able to setup everything correctly when is time to expose Symbol Server with IIS. TFS indexes sources correctly and everything is ok if they use a network share, but when the server is exposed with IIS it seems not working.&lt;/p></description></item><item><title>Professional Application Lifecycle Management With Visual Studio 2013</title><link>https://www.codewrecks.com/post/old/2014/05/professional-application-lifecycle-management-with-visual-studio-2013/</link><pubDate>Sat, 17 May 2014 08:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2014/05/professional-application-lifecycle-management-with-visual-studio-2013/</guid><description>&lt;p>If you use or plan to use Team Foundation Server or Visual Studio Online, &lt;strong>this is the book for you&lt;/strong>.&lt;/p>
&lt;p>&lt;a href="http://eu.wiley.com/WileyCDA/WileyTitle/productCd-1118836588.html">&lt;a target="_blank" href="http://media.wiley.com/product_data/coverImage300/88/11188365/1118836588.jpg"> &lt;img src="http://media.wiley.com/product_data/coverImage300/88/11188365/1118836588.jpg" alt="External Image" />&lt;/a>&lt;/a>&lt;/p>
&lt;p>&lt;a href="http://eu.wiley.com/WileyCDA/WileyTitle/productCd-1118836588.html">Professional Application Lifecycle Management with Visual Studio 2013&lt;/a>  &lt;strong>covers all aspects and tools of Microsoft ALM Ecosystem&lt;/strong> , giving you all the details on how to implement effectively ALM for your team/s. This book is dedicated to all people involved in a Software Project, from managers who plan work with new Portfolio Management features, to developers that create the product, and finally to testers and end users that could monitor quality with Microsoft Test Manager and Feedback Tool. Everything is explained clearly and with full details, making this book a perfect companion for everyday work.&lt;/p></description></item><item><title>Keep your Team Foundation Server upgraded to latest version</title><link>https://www.codewrecks.com/post/old/2014/05/keep-your-team-foundation-server-upgraded-to-latest-version/</link><pubDate>Fri, 16 May 2014 06:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2014/05/keep-your-team-foundation-server-upgraded-to-latest-version/</guid><description>&lt;p>When it is time to maintain Team Foundation Server in small companies the major risk is &lt;strong>“fear of upgrade”.&lt;/strong> In a small shops usually &lt;strong>there is no dedicated resource to maintain TFS installation&lt;/strong> , usually you install the first time, schedule backup and everything is done. In small company maintenance is also simple, you usually have not big database and speed is not a problem with current hardware.&lt;/p>
&lt;p>Some people also fear the upgrade, because they think it is a complicated process, they are not sure if they are able to restore the old version if the upgrade went wrong, and so on. First of all I suggest you to &lt;strong>read the exceptional&lt;/strong> &lt;a href="http://vsarupgradeguide.codeplex.com/">&lt;strong>Upgrade Guide from TFS Rangers&lt;/strong>&lt;/a> &lt;strong>, it will explain almost everything you need to know about the upgrade&lt;/strong> , but I can also assure you that the upgrade process, if you are not still running an old TFS 2008, is not complex.&lt;/p></description></item><item><title>Versioning assembly during TFS 2013 build with Powershell Scripts</title><link>https://www.codewrecks.com/post/old/2014/01/customize-tfs-2013-build-with-powershell-scripts/</link><pubDate>Sat, 11 Jan 2014 15:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2014/01/customize-tfs-2013-build-with-powershell-scripts/</guid><description>&lt;p>One of the most important &lt;strong>news in TFS Build 2010 is the introduction of Workflow Foundation&lt;/strong> that replaced standard MSBuild scripts used in TFS 2008. Workflow foundation can be really powerful, but indeed it is somewhat scaring and quite often &lt;strong>customizing a build can be complex&lt;/strong>.&lt;/p>
&lt;p>You can find some blog post of mine on the subject:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://www.codewrecks.com/blog/index.php/2010/02/25/writing-a-custom-activity-for-tfs-2010-build-workflow/">Writing a Custom Activity for TFS 2010 Builds&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.codewrecks.com/blog/index.php/2010/01/27/run-test-with-typemockisolator-during-a-tfs2010-build/">Run Test With TypeMock isolator in TFS 2010 Build&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.codewrecks.com/blog/index.php/2010/01/19/wrap-a-msbuild-custom-task-inside-a-custom-action/">Wrap a MsBuild Custom task inside a custom Action&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Years are passed, but &lt;strong>I still see people scared when it is time to customize the build&lt;/strong> , especially because the Workflow can be a little bit intimidating. In TFS2013 the build is still managed by Workflow Foundation, but the new workflow basic template now supports simply customization with scripts.&lt;/p></description></item><item><title>Deploy Click Once application on Azure Blob Container with TFS Build</title><link>https://www.codewrecks.com/post/old/2013/04/deploy-click-once-application-on-azure-blob-container-with-tfs-build/</link><pubDate>Sat, 20 Apr 2013 07:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2013/04/deploy-click-once-application-on-azure-blob-container-with-tfs-build/</guid><description>&lt;p>Windows Azure Web sites has a lot of options to automatically deploy web sites, but if you have desktop application deployed with click-once &lt;strong>you have nothing out of the box to do continuous deployment in Windows Azure&lt;/strong>. Lets see how solve this problem.&lt;/p>
&lt;h2 id="deploying-on-windows-azure-blob-storage">Deploying on Windows Azure Blob Storage&lt;/h2>
&lt;p>To deploy Click Once applications on Windows azure, the simplest solution is &lt;strong>using a Blob Container&lt;/strong>. All you need to do is creating new public Blob Container and copy inside the blob the result of a Click Once publication.&lt;/p></description></item><item><title>Unable to build on TFS with a project managed with Nuget and automatic restore</title><link>https://www.codewrecks.com/post/old/2013/03/unable-to-build-on-tfs-with-a-project-managed-with-nuget-and-automatic-restore/</link><pubDate>Fri, 08 Mar 2013 18:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2013/03/unable-to-build-on-tfs-with-a-project-managed-with-nuget-and-automatic-restore/</guid><description>&lt;p>To reduce the size of the repository and to easy dependencies management, nuget is a good solution, and when is time to create a build in TFS you can simply &lt;a href="http://docs.nuget.org/docs/workflows/using-nuget-without-committing-packages">Enable Nuget Package Restore&lt;/a> and let the build machine download the dependency for you. This works perfectly even on TF Service (tfs.visualstudio.com) because the &lt;strong>Elastic Build is configured to restore packages during build.&lt;/strong> This is really cool, until your build start to fail for missing references. If you look at detailed build log you can find error like this one.&lt;/p></description></item><item><title>Visual Studio ALM Links- Week 42013</title><link>https://www.codewrecks.com/post/old/2013/01/visual-studio-alm-links-week-42013/</link><pubDate>Sat, 26 Jan 2013 10:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2013/01/visual-studio-alm-links-week-42013/</guid><description>&lt;ul>
&lt;li>&lt;a href="http://blogs.msdn.com/b/visualstudioalm/archive/2013/01/23/other-enhancements-in-microsoft-test-manager-in-update-1.aspx">Other enhancements in Microsoft Test Manager in Update 1&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://blogs.msdn.com/b/visualstudiouk/archive/2013/01/19/adding-additional-states-onto-the-agile-task-board-in-tfs2012.aspx">Add additional States onto the Agile Task Board in TFS2012&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://msmvps.com/blogs/vstsblog/archive/2013/01/22/how-to-enable-the-backlog-view-in-tfs-2012-web-access.aspx">How to enable the Backlog view in TFS 2012 web access&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://blogs.msdn.com/b/slange/archive/2013/01/17/team-foundation-server-vs-team-foundation-service.aspx">Team Foundation Server Vs. Team Foundation Service&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://tfs.visualstudio.com/en-us/home/news/2013/jan-21/">Team Foundation Service updates – January 21&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://blogs.msdn.com/b/briankel/archive/2013/01/24/bringing-odata-to-team-foundation-service.aspx">Bringing Odata to Team Foundation Service&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://blogs.msdn.com/b/bharry/archive/2013/01/22/stand-alone-installer-for-tfs-object-model.aspx">Stand Alone installer for TFS Object model&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.techrepublic.com/blog/programming-and-development/visualize-code-with-visual-studio-2012s-code-map/6230">Visualize code with Visual Studio 2012 Code Map&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Gian Maria&lt;/p></description></item><item><title>Visual Studio ALM Links-Week 32013</title><link>https://www.codewrecks.com/post/old/2013/01/visual-studio-alm-linksweek-22013/</link><pubDate>Sat, 19 Jan 2013 10:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2013/01/visual-studio-alm-linksweek-22013/</guid><description>&lt;ul>
&lt;li>&lt;a href="http://blogs.msdn.com/b/briankel/archive/2013/01/07/odata-service-for-team-foundation-server-v2.aspx">OData Service for Team Foundation Server v2&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://blogs.msdn.com/b/visualstudioalm/archive/2013/01/08/new-build-of-git-tf-required-for-use-with-team-foundation-service.aspx">New Build of Git-TF required for use with Team foundation Service&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://pascoal.net/2013/01/team-foundation-task-board-enhancer-version-0-6-released/">TFS Task board Enahancer – Version 0.6 released&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://blogs.msdn.com/b/bharry/archive/2013/01/09/renaming-your-team-foundation-service-account.aspx">Renaming your Team Foundation Service Account&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://blogs.msdn.com/b/bharry/archive/2013/01/14/skype-and-the-new-team-explorer.aspx">Skype and the new Team Explorer&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://blogs.msdn.com/b/bharry/archive/2013/01/15/modern-lifecycle-on-the-cloud-os.aspx">Modern Lifecycle on the Cloud OS&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Gian Maria.&lt;/p></description></item><item><title>Visual Studio ALM links 392012</title><link>https://www.codewrecks.com/post/old/2012/09/visual-studio-alm-link-392012/</link><pubDate>Fri, 28 Sep 2012 19:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2012/09/visual-studio-alm-link-392012/</guid><description>&lt;ul>
&lt;li>&lt;a href="http://blogs.msdn.com/b/bharry/archive/2012/09/15/tfs-2012-power-tools-are-now-available.aspx">Tfs 2012 Power Tools Are now available&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://pascoal.net/2012/09/team-foundation-task-board-enhancer-more-features/?utm_source=feedburner&amp;amp;amp;utm_medium=feed&amp;amp;amp;utm_campaign=Feed%3A&amp;#43;tspascoal&amp;#43;%28Tiago&amp;#43;Pascoal%29">Team Foundation Task Board Enhancer: More features&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://tfspreview.com/en-us/home/news/2012/sep-17/">Team Foundation Service Updates 9/17&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://blog.hinshelwood.com/virtual-labs-in-the-modern-application-lifecycle/">Virtual Labs in the modern application lifecycle&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://blogs.msdn.com/b/visualstudioalm/archive/2012/09/24/tfs-agile-pm-configuring-so-your-tasks-are-estimated-in-story-points.aspx">Configuring TFS so your task are estimated in story points&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://blog.hinshelwood.com/testing-in-the-modern-application-lifecycle/?utm_source=feedburner&amp;amp;amp;utm_medium=feed&amp;amp;amp;utm_campaign=Feed%3A&amp;#43;MartinHinshelwood&amp;#43;%28Visual&amp;#43;Studio&amp;#43;ALM&amp;#43;from&amp;#43;Martin&amp;#43;Hinshelwood%29">Testing in the modern application lifecycle&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Gian Maria.&lt;/p></description></item><item><title>List of interesting open source project for TFS hosted on Codeplex</title><link>https://www.codewrecks.com/post/old/2012/03/codeplex-project-for-tfs/</link><pubDate>Sat, 10 Mar 2012 09:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2012/03/codeplex-project-for-tfs/</guid><description>&lt;p>Some times ago I blogged a series of links of &lt;a href="http://www.codewrecks.com/blog/index.php/2011/06/27/a-bunch-of-links-for-tfs-ecosystem/">useful tools for TFS&lt;/a>. Today I want to give you a series of Codeplex Project of useful tools. These tools are not only useful to use, but they are invaluable example of using TFS API, so they deserves a special list of their own. It is not a comprehensive list, but it contains some of the most interesting project that you can find on Codeplex.&lt;/p></description></item><item><title>Running NUnit and xUnit tests in TFS11 build</title><link>https://www.codewrecks.com/post/old/2012/03/running-nunit-and-xunit-tests-in-tfs11-build/</link><pubDate>Mon, 05 Mar 2012 06:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2012/03/running-nunit-and-xunit-tests-in-tfs11-build/</guid><description>&lt;p>I’ve blogged in the past various solution to run NUnit tests during a TFS build, and now it is time to make it again for TFS11, but this time it is incredibly simple, because the new Test Runner supports multiple frameworks, so it works &lt;em>almost&lt;/em> automatically.&lt;/p>
&lt;p>You can read from &lt;a href="http://www.peterprovost.org/blog/post/Visual-Studio-11-Beta-Unit-Testing-Plugins-List.aspx">Peter Provost blog&lt;/a> that actually we have three plugin for UTE (Unit Test Explorer) available: Nunit, xUnit and HTML/JAvascript, they are simple.vsix file (Visual Studio Extension), that you can download, run, and voilà, your xUnit and NUnit tests are runnable from Visual Studio.&lt;/p></description></item><item><title>TFS 11 and Kanban</title><link>https://www.codewrecks.com/post/old/2012/03/tfs-11-and-kanban/</link><pubDate>Sat, 03 Mar 2012 10:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2012/03/tfs-11-and-kanban/</guid><description>&lt;p>Visual studio ALM Rangers just published a good pratical guide for using kanban on TFS 11, I suggest you to have a look at the guide, because is really interesting.&lt;/p>
&lt;p>&lt;a href="http://vsarkanbanguide.codeplex.com/">The link is here&lt;/a>.&lt;/p></description></item><item><title>Interesting links for Visual Studio 11 and TFS 11</title><link>https://www.codewrecks.com/post/old/2012/03/interesting-links-for-visual-studio-11-and-tfs-11/</link><pubDate>Thu, 01 Mar 2012 10:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2012/03/interesting-links-for-visual-studio-11-and-tfs-11/</guid><description>&lt;p>Yesterday Microsoft released a really huge wave of tools as well as the consumer preview of the upcoming operating system &lt;strong>Windows 8&lt;/strong>. For Developers there are a lots of news to learn, especially on the new version of &lt;strong>Visual Studio&lt;/strong> called &lt;strong>VS11&lt;/strong> , so I decided to create a blog post where I’ll try to list all interesting links related to &lt;strong>VS11 Beta&lt;/strong>. I’ll try to keep this post updated&lt;/p></description></item><item><title>TFS Express a TFS for team up to 5 user for FREE</title><link>https://www.codewrecks.com/post/old/2012/02/tfs-express-a-tfs-for-team-up-to-5-user-for-free/</link><pubDate>Thu, 23 Feb 2012 17:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2012/02/tfs-express-a-tfs-for-team-up-to-5-user-for-free/</guid><description>&lt;p>As you can read &lt;a href="http://blogs.msdn.com/b/bharry/archive/2012/02/23/coming-soon-tfs-express.aspx">from Brian Harry’s blog post&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>In TFS 11, we are introducing a new download of TFS, called Team Foundation Server Express, that includes core developer features:&lt;/p>
&lt;ul>
&lt;li>Source Code Control&lt;/li>
&lt;li>Work Item Tracking&lt;/li>
&lt;li>Build Automation&lt;/li>
&lt;li>Agile Taskboard&lt;/li>
&lt;li>and more…&lt;/li>
&lt;/ul>
&lt;p>The best news is that it’s &lt;strong>FREE&lt;/strong> for individuals and teams of up to 5 users.&lt;/p>&lt;/blockquote>
&lt;p>This is really a BIG NEWS expecially for the really super-easy installing and configuring, because we can read in Brian’s post&lt;/p></description></item><item><title>Community extensions for TFS 2010 build</title><link>https://www.codewrecks.com/post/old/2011/07/community-extensions-for-tfs-2010-build/</link><pubDate>Tue, 05 Jul 2011 06:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2011/07/community-extensions-for-tfs-2010-build/</guid><description>&lt;p>I&amp;rsquo;m happy to announce that on 4 of July 2010 the community &lt;a href="http://tfsbuildextensions.codeplex.com/">TFS Build extensions&lt;/a> project on codeplex published its &lt;a href="http://tfsbuildextensions.codeplex.com/releases/view/67138">first stable release&lt;/a>.&lt;/p>
&lt;p>TFS 2010 build system is based on Workflow Foundation and this means that you can extend writing custom activities (I blogged &lt;a href="http://www.codewrecks.com/blog/index.php/tag/tfs-build/">quite a lot&lt;/a> about TFS Build in the past) or using legacy MSBuild actions. With this release you have now 100 new Actions / Activities you can use in your builds as well as a big amount of source code to understand how you can write extensions for Tfs Build System.&lt;/p></description></item><item><title>MTM and the cycle of a bug</title><link>https://www.codewrecks.com/post/old/2011/01/mtm-and-the-cycle-of-a-bug/</link><pubDate>Sat, 22 Jan 2011 09:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2011/01/mtm-and-the-cycle-of-a-bug/</guid><description>&lt;p>Thanks to &lt;a href="http://msdn.microsoft.com/en-us/library/bb385901.aspx">Microsoft Test Manager&lt;/a>, testing teams have a complete tool to manage every part of testing, but since it is a new tool we need to understand how to use at its best, so I&amp;rsquo;ll try to explain a typical cycle of a test-bug-fix-test with MTM.&lt;/p>
&lt;p>Everything starts with the definition of a Test Case in a Test suite, in this example I want to verify what happens when the user insert some specific quantity in the Chart page of TailSpin toys.&lt;/p></description></item><item><title>Scvmm could not reset local administrator password during template creation</title><link>https://www.codewrecks.com/post/old/2010/03/scvmm-could-not-reset-local-administrator-password-during-template-creation/</link><pubDate>Thu, 18 Mar 2010 11:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2010/03/scvmm-could-not-reset-local-administrator-password-during-template-creation/</guid><description>&lt;p>I&amp;rsquo;m creating some template in SCVMM to be used with lab management, I&amp;rsquo;ve created a windows XP client machine, joined to the domain, installed and configured Test Agent and finally I used SCVMM to convert the machine to a template.&lt;/p>
&lt;p>The process finish with an error&lt;/p>
&lt;blockquote>
&lt;p>&lt;font style="background-color: #ffffff">Could not reset local Administrator password on WinXPIE8 to empty string before starting Sysprep.&lt;/font>&lt;/p>
&lt;p>&lt;font style="background-color: #ffffff">(The password does not meet the password policy requirements. Check the minimum password length, etc etc&lt;/font>&lt;/p></description></item><item><title>Automatic deployment of a web application with TFS Build</title><link>https://www.codewrecks.com/post/old/2009/10/automatic-deployment-of-a-web-application-with-tfs-build/</link><pubDate>Fri, 23 Oct 2009 09:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2009/10/automatic-deployment-of-a-web-application-with-tfs-build/</guid><description>&lt;p>When you develop web applications you usually have X developers solving bugs and implementing features, and a series of testers that test application during developing process. A must to have requirement is that&lt;/p>
&lt;ol>
&lt;li>Modifications to the trunk are visible as soon as possible to testers.&lt;/li>
&lt;li>Data in test database gets preserved&lt;/li>
&lt;/ol>
&lt;p>Point 2 is especially important, testers usually work with the site and fills database with data. Suppose that tester John find a bug that occurs only with specific data, a developer correct the bug, then a deploy is done, all test data are wiped away, and the tester is not able to verify if the bug is gone.&lt;/p></description></item><item><title>Correct use of a Source Control System branching for long time task</title><link>https://www.codewrecks.com/post/old/2009/09/correct-use-of-a-source-control-system-branching-for-long-time-task/</link><pubDate>Wed, 30 Sep 2009 00:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2009/09/correct-use-of-a-source-control-system-branching-for-long-time-task/</guid><description>&lt;p>Source control system is probably developer&amp;rsquo;s best friend, but quite often people use only a small percentage of its functionalities. One of the most missed feature is a correct use of a branch. Let&amp;rsquo;s make a concrete example. Suppose that developer A needs to implement a big feature, it estimates a week to complete it, and while he is working at this feature he needs also to modify some basic part of the system. The problem is: &lt;em>until the developer has finished the new feature the code is in not in stable condition, and it can even not compile correctly.&lt;/em>&lt;/p></description></item><item><title>Take control of assembly numbering during a tfs build</title><link>https://www.codewrecks.com/post/old/2009/08/take-control-of-assembly-numbering-during-a-tfs-build/</link><pubDate>Fri, 21 Aug 2009 06:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2009/08/take-control-of-assembly-numbering-during-a-tfs-build/</guid><description>&lt;p>One of the most important stuff in a project build, is &lt;em>the ability to mark the assemblies with unique numbers that permits us to reproduce the build&lt;/em>. Tfs does not have a standard way of doing this, but with a couple of MsBuild actions it is really simple to overcome this limitation. This is a good example that shows how you can extend build script to do complex task.&lt;/p>
&lt;p>First of all I want to change only &lt;a href="http://msdn.microsoft.com/en-us/library/system.reflection.assemblyfileversionattribute.aspx">AssemblyFileVersion&lt;/a> and not the AssemblyVersion, in this way all builds are compatible until someone manually changes AssemblyVersion. A standard technique I like very much is letting the programmers to &lt;em>manage major and minor number manually&lt;/em>, and &lt;em>letting my builds generates build and revision ones&lt;/em>. For build number I want to be able to generate a unique number each build, a sequential generator will be fine; but for revision number I want to use the changeset used to generate the build. To accomplish this we need essentially four macro steps.&lt;/p></description></item><item><title>Integrate Nunit test into a Tfs build</title><link>https://www.codewrecks.com/post/old/2009/07/integrate-nunit-test-into-a-tfs-build/</link><pubDate>Sun, 19 Jul 2009 20:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2009/07/integrate-nunit-test-into-a-tfs-build/</guid><description>&lt;p>Since a lot of people use NUnit testing framework, it is of high importance knowing how to fully integrate nunit test runner inside a tfs build. The overall problem is that you can create a custom task, or using an &lt;a href="http://msbuildtasks.tigris.org/">existing one&lt;/a> to run nunit tests, but the main problem is &lt;em>integrating nunit output with standard tfs output&lt;/em>. The problem and a possible solution is described &lt;a href="http://richardsbraindump.blogspot.com/2008/06/merging-nunit-build-results-into-tfs.html">here&lt;/a>.&lt;/p>
&lt;p>This means that someone had already solved this problem for us :), and created an &lt;em>xslt that transforms a nunit-style output into a mstest-style output (.trx file)&lt;/em>, you can find the xslt and an example proj in the &lt;a href="http://nunit4teambuild.codeplex.com/Wiki/View.aspx?title=sample%20script">nunit4teambuild&lt;/a> codeplex project.&lt;/p></description></item><item><title>Customize test running in a Tfs Team Build</title><link>https://www.codewrecks.com/post/old/2009/06/customize-test-running-in-a-tfs-team-build/</link><pubDate>Mon, 29 Jun 2009 10:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2009/06/customize-test-running-in-a-tfs-team-build/</guid><description>&lt;p>In &lt;a href="http://www.codewrecks.com/blog/index.php/2009/06/26/running-tests-during-a-build-in-tfs/">previous post&lt;/a> I showed how to setup a build in tfs that not only builds the solution, but also runs all the tests. The next step is to configure how tests are run and reacting to test result. The first thing I want is the ability to make the entire build fail if one of the test fails. As you see in the previous post, the default behavior of the build, is to partially fail if one or more tests fail.&lt;/p></description></item><item><title>Team foundation Build - Share Builds among multiple servers</title><link>https://www.codewrecks.com/post/old/2009/06/team-foundation-build-share-builds-among-multiple-servers/</link><pubDate>Thu, 25 Jun 2009 12:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2009/06/team-foundation-build-share-builds-among-multiple-servers/</guid><description>&lt;p>When you begin to use Team Foundation Server, you will create different builds for all of your company&amp;rsquo;s projects. Since building complex products can be resource intensive, it is likely that your Team Foundation Server machine starts to perform slowly. This is a typical issue of Continuous integration servers, since they compile projects at each check-in you will end with a lot of builds and a lot of work to do.&lt;/p></description></item><item><title>Creating a build with Tfs</title><link>https://www.codewrecks.com/post/old/2009/06/creating-a-build-with-tfs/</link><pubDate>Mon, 22 Jun 2009 08:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2009/06/creating-a-build-with-tfs/</guid><description>&lt;p>I worked for long time with NANT + CC.net as continuous integration tools. I used subversion as Source Control System and use Mantis or Redmine for issue tracking.&lt;/p>
&lt;p>The main disadvantage of using such a configuration is the need to make each tool communicate with others, the good part is that these tools are open source. Team Foundation Server on the other side is a Commercial tool, so you have to pay it, but it gives you a lot of features in a single unified tool, and this is Great. Let&amp;rsquo;s see as an example how to set up a continuous integration server for a simple project.&lt;/p></description></item></channel></rss>
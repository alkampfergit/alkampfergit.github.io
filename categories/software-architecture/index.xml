<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Software Architecture on Codewrecks</title><link>https://www.codewrecks.com/categories/software-architecture/</link><description>Recent content in Software Architecture on Codewrecks</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 12 May 2012 06:00:37 +0200</lastBuildDate><atom:link href="https://www.codewrecks.com/categories/software-architecture/index.xml" rel="self" type="application/rss+xml"/><item><title>Misusing an ORM</title><link>https://www.codewrecks.com/post/old/2012/05/misusing-an-orm/</link><pubDate>Sat, 12 May 2012 06:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2012/05/misusing-an-orm/</guid><description>I’ve blogged some time ago that I’m starting to consider ORM an Antipattern, and recently Mr Fowler posted similar thoughts in his bliki, moreover I have the pleasure to be one of the organizer of the first RavenDB official Course in Italy, with my dear friend Mauro as teacher.
Since I’m strongly convinced that in a full OOP approach to problem objects should not have nor setter nor getter , most of the work and complexities of an ORM is simply not needed, because you usually retrieve objects from the storage with only one function GetById and nothing else.</description></item><item><title>Getting the list of Type associated to a given export in MEF</title><link>https://www.codewrecks.com/post/old/2012/05/getting-the-list-of-type-associated-to-a-given-export-in-mef/</link><pubDate>Tue, 08 May 2012 16:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2012/05/getting-the-list-of-type-associated-to-a-given-export-in-mef/</guid><description>Basic Request Response WCF service Reason behind a request – response service in WCF Evolving Request Response service to separate contract and business logic How to instantiate WCF host class with MEF One of the problem I had to solve to make WCF and MEF live together, is knowing all the types discovered by MEF at runtime for a given export. This information is really important because I need the list of type that derived from Request and Response to inform WCF of all the KnownTypes available to the service.</description></item><item><title>How to instantiate WCF host class with MEF</title><link>https://www.codewrecks.com/post/old/2012/05/how-to-instantiate-wcf-host-class-with-mef/</link><pubDate>Tue, 08 May 2012 16:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2012/05/how-to-instantiate-wcf-host-class-with-mef/</guid><description>Basic Request Response WCF service Reason behind a request – response service in WCF Evolving Request Response service to separate contract and business logic I described in the last post of the series the structure behind the Request/Reponse service based on MEF, now it is time to explain how to make MEF and WCF happily live together. In the first version I hosted the service with these simple lines of code</description></item><item><title>Traffic light vNext</title><link>https://www.codewrecks.com/post/old/2012/05/traffic-light-vnext/</link><pubDate>Mon, 07 May 2012 15:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2012/05/traffic-light-vnext/</guid><description>TrafficLight Experiment. Advantage of DDD approach to the problem Traffic Light, say goodbye to public properties It is a long time I did not post about simple Traffic Light experiment. I’ve ended with a super simple Domain with no Getters and no Setters, but there is still something I really do not like about that sample and it is represented by this test.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 [Fact] public void When_both_semaphore_are_red_one_become_green() { //move all to yellow fixed using (DateTimeService.</description></item><item><title>Evolving Request Response service to separate contract and business logic</title><link>https://www.codewrecks.com/post/old/2012/04/evolving-request-response-service-to-separate-contract-and-business-logic/</link><pubDate>Mon, 23 Apr 2012 11:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2012/04/evolving-request-response-service-to-separate-contract-and-business-logic/</guid><description>Example can be downloaded here . I previously described a scenario where the customer needs a really basic Request Response service in WCF, the goal is being able to take advantage of a request / response structure, but with an approach like: “the simpliest thing that could possibly works”. This technique is usually needed to introduce new architectural concepts in a team without requiring people to learn a huge amount of concepts in a single shot, a scenario that could ends in a team that actively * fight the new architecture because it is too complex *.</description></item><item><title>Reason behind a request 8211 response service in WCF</title><link>https://www.codewrecks.com/post/old/2012/04/reson-behind-request-responseservice-in-wc/</link><pubDate>Thu, 05 Apr 2012 16:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2012/04/reson-behind-request-responseservice-in-wc/</guid><description>I dealt with a minimal implementation of a basic Request Response WCF Service some times ago, now it is time to show some advantages you have using this approach. If the caller is created in.NET technology, you can directly reference the dll that contains all Requests and responses , without the need to create a service reference in Visual Studio. In my example the service is called CoreService, so I created a CoreServiceClient class to implement communication from client to server.</description></item><item><title>Basic Request Response WCF service</title><link>https://www.codewrecks.com/post/old/2012/03/basic-request-response-wcf-service/</link><pubDate>Mon, 12 Mar 2012 07:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2012/03/basic-request-response-wcf-service/</guid><description>The concept of Request-Response service is to have an endpoint with a single function capable to handle a command (a Request) and return a Response, to have a single entry point of our service. There are a lot of architectures around the web based on WCF and this pattern and this old series of post are a really good example on how you can implement it in practice.
The only drawback is that sometimes these architectures are quite complex for the average programmer, at least you can introduce them in a team where everyone is quite familiar with concept of Inversion Of Control, Dependency Injection, etc etc.</description></item><item><title>Getters are an antipattern</title><link>https://www.codewrecks.com/post/old/2011/12/getters-are-an-antipattern/</link><pubDate>Fri, 16 Dec 2011 19:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2011/12/getters-are-an-antipattern/</guid><description>When you realize that property setters is an antipattern, because you want to protect the status of your entity from direct external manipulation, the next step is starting to believe that even Getters can be considered an Antipattern.
This is some sort of extreme object oriented thinking, because getters does not modify the status of an object, so there is nothing evil in them… or not? If you look for the definition of Encapsulation from Wikipedia you can find this:</description></item><item><title>Using a state object to store object property values</title><link>https://www.codewrecks.com/post/old/2011/11/using-a-state-object-to-store-object-property-values/</link><pubDate>Tue, 29 Nov 2011 18:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2011/11/using-a-state-object-to-store-object-property-values/</guid><description>In an old post I dealt with a possible implementation of a BaseEntity class that stores all properties in a State object (based on a dictionary to store properties). Technically speaking, this solution have no drawbacks respect using field variables to store properties values, but it can give a lot of benefit. If you see the object from the outside, it presents a bunch of properties and thanks to encapsulation you can use the technique you prefer to store the real data inside the object.</description></item><item><title>Square peg in a round Hole</title><link>https://www.codewrecks.com/post/old/2011/10/square-peg-in-a-round-hole/</link><pubDate>Thu, 27 Oct 2011 07:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2011/10/square-peg-in-a-round-hole/</guid><description>After lots of year working with NHibernate I started to think that probably the whole concept of ORM can be considered an Antipattern. Some people prefer a “classic” approach to the problem, * data *is the key concept and most of the logic is inside a storage based on Relational Model.
Is this wrong?
Absolutely not, after all, for many years this was the preferred way to structure your application, and it worked quite well, but after OOP has come to life, a lot of people started appreciating this new paradigm of programming and started to think in terms of “ objects ” instead of “ data ”.</description></item><item><title>Again on TimeGrowingResource</title><link>https://www.codewrecks.com/post/old/2011/09/again-on-timegrowingresource/</link><pubDate>Fri, 09 Sep 2011 15:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2011/09/again-on-timegrowingresource/</guid><description>In the last post I explained how I resolved the problem of Time Growing Resources in my hypothetical role playing game. The advantage of using an OOP approach is that you can think without data in mind and you can identify * entities *that represents a single concept in a given * BOUNDED CONTEXT *an approach that leads to simpler code and models.
Suppose that we want to add other logic to the TimeGrowingResource class, first of all we want to be able to change the rate of growing, so we write this simple test.</description></item><item><title>Is there a reason to put restriction on password</title><link>https://www.codewrecks.com/post/old/2011/08/is-there-a-reason-to-put-restriction-on-password/</link><pubDate>Fri, 12 Aug 2011 06:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2011/08/is-there-a-reason-to-put-restriction-on-password/</guid><description>I&amp;rsquo;ve stumbled upon this funny comic
I usually use long Random generated password, that I store in KeePass for all services that I really care about, (home banking, amazon account that has my credit card, etc), and tend to use easy to remember password for services I do not care very much (stupid online games, or stuff like that).
This funny comics suggests that choosing some four random common words can be a viable solution (complex to guess, but easy to remember), but sadly enough some online services does not permits you to use long password, or password that use special chars etc.</description></item><item><title>Intercept Log4Net message in a Windows application</title><link>https://www.codewrecks.com/post/old/2011/05/intercept-log4net-message-in-a-windows-application/</link><pubDate>Wed, 11 May 2011 06:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2011/05/intercept-log4net-message-in-a-windows-application/</guid><description>Scenario: I have some service that runs in the background, but I want the user to be able to launch interactively with a windows form application and I want to intercept all log4net messages issued by the various components that works in the background.
Thanks to the supereasy way to write an appender in log4net, obtaining this result is really simple..
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 public class Log4NetLogEventSourceAppender : AppenderSkeleton { private Object _syncRoot; public Log4NetLogEventSourceAppender() { _syncRoot = new object(); } /// &amp;lt;summary&amp;gt; /// Occurs when [on log].</description></item><item><title>Lifecycle of singleton objects</title><link>https://www.codewrecks.com/post/old/2011/05/lifecycle-of-singleton-objects/</link><pubDate>Fri, 06 May 2011 08:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2011/05/lifecycle-of-singleton-objects/</guid><description>Some days ago I blogged about an implementation of persistent cache component based on Managed Esent and PersistentDictionary. This component is injected into other components thanks to Inversion of Control and it is a Singleton object.
Being a singleton is a requisite because it permits to different dependent objects to share the same cache, moreover PersistentDictionary does not permit to have multiple instances that insists on the same directory. This will make EsentCache a perfect candidate of Singleton Object Pattern.</description></item><item><title>Persistent cache management with Managed Esent</title><link>https://www.codewrecks.com/post/old/2011/05/persistent-cache-management-with-managed-esent/</link><pubDate>Mon, 02 May 2011 08:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2011/05/persistent-cache-management-with-managed-esent/</guid><description>I have a program where components could depend from cache, implemented by ICache interface.
I have really different types of cache, for data that needs to be temporary stored in memory I use a cache component based on enterprise library, but there are components that logically needs a cache that will survive after the process will exit.
The first and obvious solution was to create a very simple component that stores cache data on application database, this is especially useful because program running from different computer could share the same cache with no problem.</description></item><item><title>Message to users should be useful</title><link>https://www.codewrecks.com/post/old/2010/08/message-to-users-should-be-useful/</link><pubDate>Wed, 18 Aug 2010 06:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2010/08/message-to-users-should-be-useful/</guid><description>There are a lot of rules for usability of User Interface, and one of the most important one is not to clutter the user with strange error messages. Since the last update of skype, sometimes when I&amp;rsquo;m chatting with someone a really useful message box appears.
This windows does not communicate nothing to the user, moreover if you click ok nothing happens&amp;hellip; skype continue to work with no problem. This design violates some best practice of the UI.</description></item><item><title>Cache layer</title><link>https://www.codewrecks.com/post/old/2010/07/cache-layer/</link><pubDate>Wed, 07 Jul 2010 11:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2010/07/cache-layer/</guid><description>Thanks to AOP concept, creating a cache layer that is transparent to the caller is not a big deal. I have a piece of code that in a loop calls this method
1 2 3 ClientCompetitor competitor = Repository.ClientCompetitor.GetByCriteria( Query.CreateEq(&amp;#34;AssociatedClient&amp;#34;, clieid)) .SingleOrDefault(); This is based on a standard implementation of repository and a Specification Pattern as a query model. With nhibernate profiler I see that during the execution of this task, a lot of identical query are issued, because it gets called around 1000 times always with the same clieid.</description></item><item><title>Writing windows services smoke test form</title><link>https://www.codewrecks.com/post/old/2009/12/writing-windows-services-smoke-test-form/</link><pubDate>Wed, 16 Dec 2009 17:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2009/12/writing-windows-services-smoke-test-form/</guid><description>I work often with windows services, and one of the most painfully experience is that you do not have an UI and quite often they have to do some scheduled task at certain time, so whenever you have a deploy you can find yourself in this situation.
The question mark means that you are not sure if your new deploy is really ok, because maybe some of the scheduled tasks will fail for misconfiguration or something else.</description></item><item><title>Wise architects</title><link>https://www.codewrecks.com/post/old/2009/12/wise-architects/</link><pubDate>Wed, 09 Dec 2009 10:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2009/12/wise-architects/</guid><description>Software architects are similar to civil architects, both of them work to create an artifact (software or building) on paper that will be subsequent realized. If you are committed to make a project of a building, witch of them you will like more to create?
I&amp;rsquo;m sure that the first one is probably the first choice, for many reasons. It is more challenging, it will probably make you famous, it is surely more beautiful.</description></item><item><title>Automatic deployment of a web application with TFS Build</title><link>https://www.codewrecks.com/post/old/2009/10/automatic-deployment-of-a-web-application-with-tfs-build/</link><pubDate>Fri, 23 Oct 2009 09:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2009/10/automatic-deployment-of-a-web-application-with-tfs-build/</guid><description>When you develop web applications you usually have X developers solving bugs and implementing features, and a series of testers that test application during developing process. A must to have requirement is that
Modifications to the trunk are visible as soon as possible to testers. Data in test database gets preserved Point 2 is especially important, testers usually work with the site and fills database with data. Suppose that tester John find a bug that occurs only with specific data, a developer correct the bug, then a deploy is done, all test data are wiped away, and the tester is not able to verify if the bug is gone.</description></item><item><title>Branching policies</title><link>https://www.codewrecks.com/post/old/2009/09/branching-policies/</link><pubDate>Tue, 15 Sep 2009 10:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2009/09/branching-policies/</guid><description>I just read this post of Martin Fowler, and I found it very interesting. In my opinion, even small projects will greatly benefit from Continuous Integration. Despite of the Branching policies that you choose, having a machine for CI is vital during the lifetime of a project.
Usually I do not like very much CherryPicking even if sometimes it cannot be avoided. In the Promiscuous Integration model, people are doing CherryPicking from other branches and this scares me.</description></item><item><title>Writing modular software with castle</title><link>https://www.codewrecks.com/post/old/2009/09/writing-modular-software-with-castle/</link><pubDate>Mon, 14 Sep 2009 09:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2009/09/writing-modular-software-with-castle/</guid><description>Thanks to Castle Windsor you can write really modular software. I&amp;rsquo;m building a project in WinForm that needs to access the domain model through a service layer on a WS* service. One of the most annoying stuff is the need to setup a local service to test the application and the interface.
The key to speedup development is writing high modular software, thanks to castle this is really simple. First of all I use guardian facility to create proxy.</description></item><item><title>Dto generator and repository integration</title><link>https://www.codewrecks.com/post/old/2009/07/dto-generator-and-repository-integration/</link><pubDate>Fri, 31 Jul 2009 02:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2009/07/dto-generator-and-repository-integration/</guid><description>I have a project where I use repository pattern, interface code access domain object through a service, and the service return Dto. One of the bad side of the dto is that they are boring to write and to maintain. The main risk is that developers does this error
Mmmm I had to show a combo with all the typologies of the current customer, let me seee, I have already a service that return Typlogy object given the customer Id, ok I&amp;rsquo;ll use it.</description></item><item><title>Value of architecture</title><link>https://www.codewrecks.com/post/old/2009/07/value-of-architecture/</link><pubDate>Tue, 28 Jul 2009 03:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2009/07/value-of-architecture/</guid><description>If I have to tell what is the main property of a good architecture, I surely will answer that a good architecture centralize common operations and make simple to extend the application.
Here is a typical example. I have a WCF services called from external clients, but I use the same service inside my organization. I created a little WPF project that needs to use services functions, but since this program is run internally, I do not want it to pass in the WCF stack, but I simply want to use concrete services classes that access the database.</description></item><item><title>A better version of dtofactory</title><link>https://www.codewrecks.com/post/old/2009/07/a-better-version-of-dtofactory/</link><pubDate>Tue, 07 Jul 2009 00:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2009/07/a-better-version-of-dtofactory/</guid><description>In this post I dealt with a primitive version of a T4 template to generate dto starting from domain objects. In these days I had little time to improve it a little bit, and I created a simple test project to verify some of the basic functionality.
Usage of the T4 template is really simple, I&amp;rsquo;ve created in the test project an Entity Factory model to the ubiquitous northwind database, then I added a OrderDto.</description></item><item><title>Design UI First</title><link>https://www.codewrecks.com/post/old/2009/07/design-ui-first/</link><pubDate>Mon, 06 Jul 2009 05:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2009/07/design-ui-first/</guid><description>Some days ago we have a question on the possibility to have a Design UI first approach to a project. (the forum post is in Italian). If you asked me this question some years ago, I surely have answered Probably not. I must admit that I always thought that some people gave too many importance to the UI. Quite often Project managers are the kind of people that always ask for impressive interface to show to final customers, while we, as programmers, tend to spent more attention to the code part of the project, and usually do not care about UI.</description></item><item><title>Team foundation Build - Share Builds among multiple servers</title><link>https://www.codewrecks.com/post/old/2009/06/team-foundation-build-share-builds-among-multiple-servers/</link><pubDate>Thu, 25 Jun 2009 12:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2009/06/team-foundation-build-share-builds-among-multiple-servers/</guid><description>When you begin to use Team Foundation Server, you will create different builds for all of your company&amp;rsquo;s projects. Since building complex products can be resource intensive, it is likely that your Team Foundation Server machine starts to perform slowly. This is a typical issue of Continuous integration servers, since they compile projects at each check-in you will end with a lot of builds and a lot of work to do.</description></item><item><title>A dto factory code generator with visual studio T4</title><link>https://www.codewrecks.com/post/old/2009/06/a-dto-factory-code-generator-with-visual-studio-t4/</link><pubDate>Wed, 24 Jun 2009 10:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2009/06/a-dto-factory-code-generator-with-visual-studio-t4/</guid><description>Data Transfer Objects, best known as Dto, are an essential part of projects that uses services or Domain Model. Dto are great, but the disadvantage is that maintaining Dto objects is a pain, because they are composed by repetitive code, and you have no fun in writing them.
Since building a Dto is a mechanical process it is better to use a code generation tool to generate them with little effort.</description></item><item><title>Plan for change</title><link>https://www.codewrecks.com/post/old/2009/06/plan-for-change/</link><pubDate>Mon, 15 Jun 2009 07:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2009/06/plan-for-change/</guid><description>Here is a possible dialog between Customer/PM/Analyst and a programmer
Developers usually end with one or more of those thought
Analyst is a moron, he did a bad job not finding the real requirement of the customer Customer are stupid because they does not know what they want, they are constantly changing requirements. We lack requirement gathering phase, now we must loose time following desires of Analyst/Customer Finally the programmer complains a lot about too much code to change, and how is painful working in an environment where noone is able to catch the real requirement of the customer.</description></item><item><title>Maintain integrity in NHibernate bidirectional association</title><link>https://www.codewrecks.com/post/old/2009/05/maintain-integrity-in-nhibernate-bidirectional-association/</link><pubDate>Tue, 05 May 2009 05:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2009/05/maintain-integrity-in-nhibernate-bidirectional-association/</guid><description>Using Bidirectional Associations in nhibernate can be tricky, the problem is that you need to manage associations for both ends. This is really important: suppose you have a class called Parent with a collection of childs called Childs, and a child class with a property called Parent; if you expose these two property to the user, you can write this
1 2 3 4 5 6 Parent John = new Parent(); Parent Mark = new Parent(); Child Bart = new Child(); John.</description></item><item><title>Adapting a model to make binding simpler</title><link>https://www.codewrecks.com/post/old/2009/03/adapting-a-model-to-make-binding-simpler/</link><pubDate>Tue, 17 Mar 2009 10:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2009/03/adapting-a-model-to-make-binding-simpler/</guid><description>I have a domain model composed by Clients, each client has a series of associated Typology objects and each Typology object has a certain number of associated Target. Now I need to bind this model to a series of three combo in WPF, but I have this little problem
The model is not directly accessible, I have already a service that has functions like GetAllCustomer, GetTyplogyForCustomer(Int32 customerId) and GetTargetForTyplogy(Int32 typologyId). Each method returns a list of the corresponding object, but they are DTO and not real object, so the Customer, Typology and Target returned from the service have no relation between them.</description></item><item><title>Setting up the trunk of a project</title><link>https://www.codewrecks.com/post/old/2009/02/setting-up-the-trunk-of-a-project/</link><pubDate>Mon, 16 Feb 2009 03:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2009/02/setting-up-the-trunk-of-a-project/</guid><description>In this very interesting link brendan spoke about how to organize the trunk of a project. I think that this is a very important subject, especially for medium sized or big project. If you fail to organize your source code including everything you will end with trouble. In the past it happened to me to work on project where you need to spend a lot of time just to have the first run ok.</description></item><item><title>Extend BindingList with filter functionality</title><link>https://www.codewrecks.com/post/old/2008/11/extend-bindinglist-with-filter-functionality/</link><pubDate>Sat, 22 Nov 2008 05:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2008/11/extend-bindinglist-with-filter-functionality/</guid><description>If you still work with windows forms and cannot move all of your projects to WPF, you probably gets annoyed by the limitation of the standard BindingList&amp;lt;T&amp;gt; included in the framework. In an old post I showed how can you create a specialized BindingList&amp;lt;T&amp;gt; to support generic Find() thanks to reflection, but this is not enough.
Another annoying limitation is that BindingList does not support IBindingListView. For those that does not knows this interface, it is the one used by the windows forms binding engine to support filtering and advanced sorting.</description></item><item><title>Impedence between domain objects and Ui Layer</title><link>https://www.codewrecks.com/post/old/2008/11/impedence-between-domain-objects-and-ui-layer/</link><pubDate>Thu, 20 Nov 2008 11:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2008/11/impedence-between-domain-objects-and-ui-layer/</guid><description>When you work with domain model your domain objects become more complex than a simple containers for table values. This makes somewhat problematic using these object directly with the UI, especially when you use native binding. Let&amp;rsquo;s make an example, I have this object called Domain
As you can see the Domain class has a property called ContentBlackList that is a List of String. The setter is private and in the getter the list is created lazily, then I have a User Type to map this property into a single field of a table in a list of string separated by the charachter #.</description></item><item><title>The eternal conflict between customers and programmers</title><link>https://www.codewrecks.com/post/old/2008/09/the-eternal-conflicts/</link><pubDate>Thu, 11 Sep 2008 10:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2008/09/the-eternal-conflicts/</guid><description>In my experience it is not a good idea to put in direct communication stakeholders (customers) and programmers, here is the typical result
Lets analyze this typical situation from the perspective of the stakeholder; he have all the reason to ask for new features, he does not possess strong technical skills, and since he is the one who actually pay to build the software, he does not understand why he cannot ask for a simple modification.</description></item><item><title>I love fluent interfaces</title><link>https://www.codewrecks.com/post/old/2008/09/i-love-fluent-interfaces/</link><pubDate>Thu, 04 Sep 2008 06:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2008/09/i-love-fluent-interfaces/</guid><description>I’m developing a little library that basically does these steps
open a docx file Find a particular bookmark in the file
3)Add some content at bookmark position Save the updated file. This is a typical call
I like very much this kind of syntax, since we chain every method we always have intellisense that suggest us what to call, if you read the code you can easily check that we add two simple cell with text, then we add a cell with complex text, then another paragraph and finally another table, here is the result on the final document.</description></item><item><title>Relations are really so useful</title><link>https://www.codewrecks.com/post/old/2008/07/relations-are-really-so-useful/</link><pubDate>Tue, 22 Jul 2008 23:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2008/07/relations-are-really-so-useful/</guid><description>Today I was reading this post from my friend Marco, where he points out one of the most frequent problem in the design of domain Model: too much use of relations. The problem arises from the fact that an ORM like NHibernate, seems to solve all the problems because it handles all the complexities, but there are a lot of considerations to be done before establish a relation between entities. Let&amp;rsquo;s have a brief look at the classical example of Customer-Orders</description></item></channel></rss>
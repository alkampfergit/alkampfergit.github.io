<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Agile on Codewrecks</title><link>https://www.codewrecks.com/categories/agile/</link><description>Recent content in Agile on Codewrecks</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sat, 31 Oct 2015 10:00:37 +0200</lastBuildDate><atom:link href="https://www.codewrecks.com/categories/agile/index.xml" rel="self" type="application/rss+xml"/><item><title>Analyze your project with SonarQube in TFS Build vNext</title><link>https://www.codewrecks.com/post/old/2015/10/analyze-your-project-with-sonarqube-in-tfs-build-vnext/</link><pubDate>Sat, 31 Oct 2015 10:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2015/10/analyze-your-project-with-sonarqube-in-tfs-build-vnext/</guid><description>&lt;p>When you have your SonarQube &lt;a href="http://www.codewrecks.com/blog/index.php/2015/10/30/installing-sonarqube-on-windows-and-sql-server/">server up and runinng&lt;/a> it is time to put some data into it. You will be amazed to know how simple it is with build vNext and Visual Studio Online.&lt;/p>
&lt;h2 id="installing-the-analyzer">Installing the analyzer&lt;/h2>
&lt;p>As a prerequisite, you need to install Java on the machine where the agent is running, then download the &lt;a href="http://docs.sonarqube.org/display/SONAR/Installing&amp;#43;and&amp;#43;Configuring&amp;#43;MSBuild&amp;#43;SonarQube&amp;#43;Runner">Msbuild.SonarQube.Runner&lt;/a>, unblock the zip and unzip everything in a folder of your HD. &lt;strong>Make sure that PATH contains that folder so you are able to launch the runner from any command prompt&lt;/strong>.&lt;/p></description></item><item><title>Installing SonarQUBE on windows and SQL Server</title><link>https://www.codewrecks.com/post/old/2015/10/installing-sonarqube-on-windows-and-sql-server/</link><pubDate>Fri, 30 Oct 2015 17:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2015/10/installing-sonarqube-on-windows-and-sql-server/</guid><description>&lt;p>Installing SonarQube on windows machine with Sql Server express as back end is quite simple, but here is some information you should know to avoid some common problem with database layer (or at least avoid problem I had :) )&lt;/p>
&lt;blockquote>
&lt;p>Setting up Sonar Qube in Windows is easy, but sometimes you can encounter some problem to have it talk to Sql Server database.&lt;/p>&lt;/blockquote>
&lt;p>First of all I avoid using integrated authentication in SQL Server, because I find easier to setup everything with a standard sql user. After all my instance of SQL Express is used only for the instance of Sonar. So I &lt;strong>create a user called sonar with a password, and remove the check for password expiration&lt;/strong>.&lt;/p></description></item><item><title>How to Deploy Web Site with PowerShell DSC</title><link>https://www.codewrecks.com/post/old/2014/06/how-to-deploy-web-site-with-powershell-dsc/</link><pubDate>Wed, 11 Jun 2014 05:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2014/06/how-to-deploy-web-site-with-powershell-dsc/</guid><description>&lt;p>I do not want to create another tutorial on DSC and I suggest you reading some introductory articles like: &lt;a href="http://blogs.technet.com/b/privatecloud/archive/2013/08/30/introducing-powershell-desired-state-configuration-dsc.aspx">Introducing PowerShell Desired State Configuration&lt;/a> before reading this article. Since I’m pretty new with PowerShell and I’m starting experimenting with DSC I decided to &lt;strong>start creating a script to deploy my favorite test application (TailspinToys :) ) on a single Windows 2012 R2 server using only DSC&lt;/strong>. This post aims to share my thought on the subject.&lt;/p></description></item><item><title>The advantage of Scrum in evaluating 'new stuff'</title><link>https://www.codewrecks.com/post/old/2014/04/the-advantage-of-scrum-in-evaluating-new-stuff/</link><pubDate>Sat, 12 Apr 2014 08:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2014/04/the-advantage-of-scrum-in-evaluating-new-stuff/</guid><description>&lt;p>One of the greatest problem in Software industry is the rapid change in Technologies and Tools, a change so rapid that your knowledge become stale or obsolete before you have the time to fully master your new toys. In this scenario the major problem is &lt;strong>how to evaluate some new “stuff”, while not losing money and, most important, how to understand if the new “stuff” is really better than the old one&lt;/strong> so it worth continue spending time on it and not moving on other newer “stuff”.&lt;/p></description></item><item><title>Continuous Delivery in Agile procedures</title><link>https://www.codewrecks.com/post/old/2013/08/continuous-delivery-in-agile-procedures/</link><pubDate>Wed, 21 Aug 2013 06:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2013/08/continuous-delivery-in-agile-procedures/</guid><description>&lt;blockquote>
&lt;p>“The hardest single part of building a software system is deciding precisely what to build.”&lt;/p>
&lt;p>**Frederick P. Brooks, &lt;em>The Mythical Man Month&lt;/em> &lt;strong>This simple sentence contains big truth, the process of building a software has many pitfalls, but the vast majorities of them are related to requirements and gaining a deep understanding of the real problem that the software is going to solve. To build a great software you need to be aware that&lt;/strong> the act of writing code is just a minimal part of the problem and mastering Application Lifecycle Management is the key of success **.&lt;/p></description></item><item><title>Risk of not being agile</title><link>https://www.codewrecks.com/post/old/2013/06/risk-of-not-being-agile/</link><pubDate>Sun, 23 Jun 2013 16:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2013/06/risk-of-not-being-agile/</guid><description>&lt;p>Deciding if it worth change own process towards agile ones, es &lt;a href="http://www.scrum.org">Scrum&lt;/a>, should be done not only estimating the advantage of using the new process, but also &lt;em>estimating the risk of not using agile procedures developing software in these days&lt;/em>. Lets speak about a fail story that could be avoided with scrum (if you do not know what Scrum is you can read &lt;a href="http://www.scrum.org/Resources/What-is-Scrum">What is Scrum on Scrum.org&lt;/a>).&lt;/p>
&lt;p>A project started with a set of requirements approved by the stakeholder, after initial basic features were implemented, developers started to work on an “advanced search functionality” requirement, that had * &lt;strong>quite technical difficulties and took quite a bit of time to develop&lt;/strong> *. The result was good, it worked as requested and used some really advanced functionality for the time it was build.&lt;/p></description></item><item><title>TFS 11 and Kanban</title><link>https://www.codewrecks.com/post/old/2012/03/tfs-11-and-kanban/</link><pubDate>Sat, 03 Mar 2012 10:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2012/03/tfs-11-and-kanban/</guid><description>&lt;p>Visual studio ALM Rangers just published a good pratical guide for using kanban on TFS 11, I suggest you to have a look at the guide, because is really interesting.&lt;/p>
&lt;p>&lt;a href="http://vsarkanbanguide.codeplex.com/">The link is here&lt;/a>.&lt;/p></description></item></channel></rss>
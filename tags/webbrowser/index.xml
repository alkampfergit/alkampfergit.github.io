<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>WebBrowser on Codewrecks</title><link>https://www.codewrecks.com/tags/webbrowser/</link><description>Recent content in WebBrowser on Codewrecks</description><generator>Hugo</generator><language>en</language><lastBuildDate>Wed, 17 Oct 2012 19:00:37 +0200</lastBuildDate><atom:link href="https://www.codewrecks.com/tags/webbrowser/index.xml" rel="self" type="application/rss+xml"/><item><title>Browser control prevent a link to open in a new page</title><link>https://www.codewrecks.com/post/old/2012/10/browser-control-prevent-a-link-to-open-in-a-new-page/</link><pubDate>Wed, 17 Oct 2012 19:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2012/10/browser-control-prevent-a-link-to-open-in-a-new-page/</guid><description>Working with BrowserControl in.NET can be annoying, especially because it is a really complex control and it is a real browser inside your application. As an example one of the most common problem is how to prevent a page to open links in a new window. Lot of sites have anchor tags with attribute Target=”_blank”, that opens the link on a new tab, leaving the original tab with the original content (es.</description></item><item><title>Pass cookie from Web Request to WebBrowser</title><link>https://www.codewrecks.com/post/old/2011/06/pass-cookie-from-web-request-to-webbrowser/</link><pubDate>Wed, 29 Jun 2011 08:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2011/06/pass-cookie-from-web-request-to-webbrowser/</guid><description>Suppose you have some domain where you are navigating with a WebRequest object and you need to be able to browser that domain in a standard WebBrowser control, using the same cookies of the WebRequest.
The solution is really simple, you need to use the InternetSetCookieEx Windows API. First of all the import statement
1 2 3 4 5 6 7 [DllImport(&amp;#34;wininet.dll&amp;#34;, SetLastError = true)] public static extern bool InternetSetCookieEx( string url, string cookieName, StringBuilder cookieData, Int32 dwFlags, IntPtr lpReserved); Now you can use in a simple helper function.</description></item><item><title>Use a WebBrowser to login into a site that use HttpOnly cookie</title><link>https://www.codewrecks.com/post/old/2011/04/use-a-webbrowser-to-login-into-a-site-that-use-httponly-cookie/</link><pubDate>Tue, 12 Apr 2011 09:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2011/04/use-a-webbrowser-to-login-into-a-site-that-use-httponly-cookie/</guid><description>Suppose you need to programmatically analyze some web pages that are protected by a login procedure and you have a valid login to the site. A simple solution is issuing a POST request to the login page with the correct credentials, then continue to use the same cookie container to issue subsequent downloads, but in some situation this is not enough. Suppose the site uses some strange login procedure that uses redirect</description></item></channel></rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Resharper on Codewrecks</title><link>https://www.codewrecks.com/tags/resharper/</link><description>Recent content in Resharper on Codewrecks</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 31 Mar 2011 08:00:37 +0200</lastBuildDate><atom:link href="https://www.codewrecks.com/tags/resharper/index.xml" rel="self" type="application/rss+xml"/><item><title>I love R because it reduce mouse usage</title><link>https://www.codewrecks.com/post/old/2011/03/i-love-r-because-it-reduce-mouse-usage/</link><pubDate>Thu, 31 Mar 2011 08:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2011/03/i-love-r-because-it-reduce-mouse-usage/</guid><description>I have this piece of code
And doc2 is checked because it could be null, so I can ALT+RET and choose the right action, as example check if doc2 is null
And I got this
With a couple of click on the keyboard, if you to not like all of the code to be indented inside the if you can press ALT+RETURN on the declaration of the doc2 variable</description></item><item><title>How could I work without resharper</title><link>https://www.codewrecks.com/post/old/2011/02/how-could-i-work-without-resharper/</link><pubDate>Wed, 23 Feb 2011 10:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2011/02/how-could-i-work-without-resharper/</guid><description>In a system that use heavily IoC principle, it is common during component modification, to discover that to add a new functionality that component need to add a dependency on some interface. Here is the constructor of a component
1 2 3 4 public MainNavigator( IEBrochureService brochureService, IBroker broker) { Now I need to add dependency from the IWpfSystem interface, so I simply add another parameter to the constructor, and R# suggests me a lot of action that could be triggered from this modification</description></item><item><title>Resharper live template are the solution to many problems</title><link>https://www.codewrecks.com/post/old/2011/01/resharper-live-template-are-the-solution-to-many-problems/</link><pubDate>Mon, 17 Jan 2011 11:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2011/01/resharper-live-template-are-the-solution-to-many-problems/</guid><description>Surely when you write code you write a lot of similar snippets, as an example, defining properties in objects that should implements INotifyPropertyChanged is usually highly repetitive, I write my properties like this one.
1 2 3 4 5 6 7 [DataMember] public Int32 Rank { get { return _rank; } set { this.Set(p =&amp;gt; p.Rank, value, ref _rank); } } private Int32 _rank; DataMember is needed for WCF, and the setter part is based on some base class and some helpers that raise INotifyPropertyChanged etc etc etc.</description></item><item><title>Temporary disable Resharper 5</title><link>https://www.codewrecks.com/post/old/2010/04/temporary-disable-resharper-5/</link><pubDate>Fri, 23 Apr 2010 09:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2010/04/temporary-disable-resharper-5/</guid><description>R# is really useful, but sometimes, when I&amp;rsquo;m working to very big web forms or winform projects, and I know that I do not need R# feature because I&amp;rsquo;m only designing the UI, it can be useful to temporary suspend R#, freeing memory and speeding a little bit VS.
In R#5 the option to disable it is in the Tools-&amp;gt;Options menu
Where you can easily stop and resume R# functionality.</description></item></channel></rss>
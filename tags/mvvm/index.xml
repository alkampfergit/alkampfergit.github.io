<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>MVVM on Codewrecks</title><link>https://www.codewrecks.com/tags/mvvm/</link><description>Recent content in MVVM on Codewrecks</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 29 Apr 2014 18:00:37 +0200</lastBuildDate><atom:link href="https://www.codewrecks.com/tags/mvvm/index.xml" rel="self" type="application/rss+xml"/><item><title>Sorting a WPF ListView in Grid Mode</title><link>https://www.codewrecks.com/post/old/2014/04/sorting-a-wpf-listview-in-grid-mode/</link><pubDate>Tue, 29 Apr 2014 18:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2014/04/sorting-a-wpf-listview-in-grid-mode/</guid><description>There is an article on MSDN that demonstrates how to enable sorting column for a ListView used with Grid layout. The solution presented there works perfectly, but I do not want to put code behind my windows, because I work with MVVM approach. The solution is wrapping everything in a behavior, so I took the code from original MSDN example and I wrapped inside a behavior.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 public class ListViewGridSortableBehavior : Behavior { protected override void OnAttached() { if (AssociatedObject !</description></item><item><title>ConventionalCommand in MVVM architecture</title><link>https://www.codewrecks.com/post/old/2012/07/conventionalcommand-in-mvvm-architecture/</link><pubDate>Sat, 14 Jul 2012 07:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2012/07/conventionalcommand-in-mvvm-architecture/</guid><description>The original idea of ConventionalCommand was taken by Radical Framework of my dear friend Mauro, the purpose is using a Convention over Configuration to bind Ui element to Commands in a MVVM architecture. You can find a real good and complete implementation of this concept in Radical, but I created a custom smaller and trivial stand-alone implementation to use in some of my project based on custom MVVM architecture. If you need a more robust and mature implementation I suggest you to have a look at Radical, but if you already have some custom code and you do not want to introduce dependency to an entire library only to use this concept I will show you how simple is to create a Command object that is capable to binding to MVVM methods based on Conventions.</description></item><item><title>How simple is creating UI in WPF</title><link>https://www.codewrecks.com/post/old/2012/06/how-simple-is-creating-ui-in-wpf/</link><pubDate>Sat, 23 Jun 2012 13:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2012/06/how-simple-is-creating-ui-in-wpf/</guid><description>I have this UI already working, it is a simple interface where users are presented with a list of Customers object, for each customers some feature could be enabled or not, so we have nice checkboxes to immediately enable/disable a feature with One Click.
Figure 1: Actual situation all the checkboxes are always enabled
But the very same form is used to edit customer details, so you need to select a row in the DataGrid and then started editing detailed information.</description></item><item><title>Quick reminder on How-To map items of a list view to a VM command</title><link>https://www.codewrecks.com/post/old/2011/06/quick-reminder-on-how-to-map-items-of-a-list-view-to-a-vm-command/</link><pubDate>Thu, 23 Jun 2011 12:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2011/06/quick-reminder-on-how-to-map-items-of-a-list-view-to-a-vm-command/</guid><description>The problem is really simple, but sometimes I see people tend to forget a little bit how the DataContext works in WPF and being stuck in wandering why a command is not invoked when a button inside a DataTemplate is pressed.
Suppose you have a ListView bounds to a list of items called SingleResult, for each SingleResult I have a complex layout and the main ViewModel contains a command that expect a SingleResult parameter called ShowDetails that simply shows the details of a SingleResult item.</description></item><item><title>Event to Command in WPF MVVM application</title><link>https://www.codewrecks.com/post/old/2011/05/event-to-command-in-wpf-mvvm-application/</link><pubDate>Wed, 04 May 2011 08:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2011/05/event-to-command-in-wpf-mvvm-application/</guid><description>I needed a simple way to obtain this simple result: whenever a certain component in the UI (a WebBrowser control) raises some specific event, I want a command in the VM to be executed, without the need to specify any command parameter. The only requirement I want is avoiding a single line of code in the UI :) because, having no code in the UI is one of the main benefit of the MVVM model.</description></item><item><title>Loving MMVM and asynchronous operations</title><link>https://www.codewrecks.com/post/old/2011/04/loving-mmvm-and-asynchronous-operations/</link><pubDate>Thu, 21 Apr 2011 11:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2011/04/loving-mmvm-and-asynchronous-operations/</guid><description>I&amp;rsquo;m using in a project a modified version of MVVM in WPF originally made by my dear friend Mauro (check his project Radical, it is really cool). Actually I use a custom DelegateCommand to handle communication between View and the View Model. Here is a sample snippet on how I initialize a command in View Model.
1 2 3 4 5 SaveCurrent = DelegateCommand.Create() .OnCanExecute(o =&amp;gt; this.SelectedLinkResult != null) .</description></item><item><title>WeakReference to delegate are you sure it is a good idea</title><link>https://www.codewrecks.com/post/old/2011/04/o-reference-from-singleton-why-thou-are-so-subtle/</link><pubDate>Fri, 15 Apr 2011 19:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2011/04/o-reference-from-singleton-why-thou-are-so-subtle/</guid><description>When an object references another object, he prevent garbage collector to reclaim referenced objects, this fact is known by every developer and we need to pay specific attention when dealing with singleton objects.
One of the most common risk is having a Singleton reference other objects and thus keeping them alive until the application consumes all available memory; I have a primitive IBroker interface implemented by a ConcreteBroker class that have a singleton lifecycle; since all ViewModels register themselves into the broker to receive messages, we can end with all ViewModels not being released from memory because referenced from the Broker singleton instance.</description></item><item><title>MVVM Broker Castle Interceptor FUN</title><link>https://www.codewrecks.com/post/old/2011/02/mvvm-broker-castle-interceptor-fun/</link><pubDate>Fri, 25 Feb 2011 10:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2011/02/mvvm-broker-castle-interceptor-fun/</guid><description>Scenario: have a WPF application based on custom MVVM + Broker + Castle, the users told us that some operations took long time to accomplish and they want a wait cursor on the application.
Resolution: Since all long operations are triggered with event handled by a Broker system, the obvious solution is an interceptor
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 public class WaitCursorInterceptor : IInterceptor { private IWpfSystem _wpfSystem; public WaitCursorInterceptor(IWpfSystem wpfSystem) { _wpfSystem = wpfSystem; } public void Intercept(IInvocation invocation) { using (_wpfSystem.</description></item><item><title>Save last location of windows with MVVM</title><link>https://www.codewrecks.com/post/old/2011/02/save-last-location-of-windows-with-mvvm/</link><pubDate>Thu, 17 Feb 2011 15:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2011/02/save-last-location-of-windows-with-mvvm/</guid><description>I&amp;rsquo;ve a WPF project composed of multiple Views, especially targeted to use multi monitor; the user should be able to position each view around multiple monitors. One of the key requirements is that the software should be able to keep track of the position of all the views to automatically position them in the very same position on opening.
Thanks to MVVM architecture obtaining this result is really simple because we can handle and test the whole logic inside a base viewmodel.</description></item><item><title>WPF MVVM and calculated properties</title><link>https://www.codewrecks.com/post/old/2010/12/wpf-mvvm-and-calculated-properties/</link><pubDate>Fri, 03 Dec 2010 12:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2010/12/wpf-mvvm-and-calculated-properties/</guid><description>Today I have to solve a situation like this one
I have a ViewModel, with aÂ property of type X, and has a property called BorderBrush that is calculated based on a property Rank of X class. Building such a property is straighforward, but I need to put some logic inside the Viewmodel to monitor when the Property Rank is changed on X class to notify the interface that the property BorderBrush (that depends on Rank property of X) is also changed.</description></item></channel></rss>
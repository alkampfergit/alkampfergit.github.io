<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Dotnet on Codewrecks</title><link>https://www.codewrecks.com/tags/dotnet/</link><description>Recent content in Dotnet on Codewrecks</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sat, 05 Feb 2022 08:13:30 +0000</lastBuildDate><atom:link href="https://www.codewrecks.com/tags/dotnet/index.xml" rel="self" type="application/rss+xml"/><item><title>Symbol server made easy with Azure DevOps</title><link>https://www.codewrecks.com/post/programming/aspnet/working-with-symbols/</link><pubDate>Sat, 05 Feb 2022 08:13:30 +0000</pubDate><guid>https://www.codewrecks.com/post/programming/aspnet/working-with-symbols/</guid><description>&lt;p>I&amp;rsquo;ve blogged in the past about &lt;a href="https://www.codewrecks.com/post/old/2013/07/manage-symbol-server-on-azure-or-on-premise-vm-and-tf-service/">symbol server&lt;/a>, to recap here is the scenario.&lt;/p>
&lt;p>In your organization you have some sort of &lt;strong>common .NET code that is shared between projects&lt;/strong>, but you have to face and resolve some problems.&lt;/p>
&lt;ol>
&lt;li>How to compile dlls&lt;/li>
&lt;li>How to distribute dlls&lt;/li>
&lt;li>How to make debugging easier for the user of the dll.&lt;/li>
&lt;/ol>
&lt;p>We have clearly some standard solution for all the parts.&lt;/p>
&lt;h2 id="compiling-dll">Compiling dll&lt;/h2>
&lt;blockquote>
&lt;p>You MUST compile dll in a build server.&lt;/p></description></item></channel></rss>
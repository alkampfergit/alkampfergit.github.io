<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>TF Service on Codewrecks</title><link>https://www.codewrecks.com/tags/tf-service/</link><description>Recent content in TF Service on Codewrecks</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 11 Sep 2013 06:00:37 +0200</lastBuildDate><atom:link href="https://www.codewrecks.com/tags/tf-service/index.xml" rel="self" type="application/rss+xml"/><item><title>LightWeight Charting in TFS 2013</title><link>https://www.codewrecks.com/post/old/2013/09/lightweight-charting-in-tfs-2013/</link><pubDate>Wed, 11 Sep 2013 06:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2013/09/lightweight-charting-in-tfs-2013/</guid><description>One of the most interesting aspect of TFS is the great ability to give you all the statistics you need about your project thanks to the integration with SQL Analysis Services. The ability to do complex report based on TFS Cube is really exceptional, but it somewhat complicated for small teams , that needs much more simpler data.
The solution has always been loading the result of a certain query in Excel and then create some Excel Chart to have a visual representation of Query Result Data.</description></item><item><title>Manage Symbol server on Azure or on-premise VM and TF Service</title><link>https://www.codewrecks.com/post/old/2013/07/manage-symbol-server-on-azure-or-on-premise-vm-and-tf-service/</link><pubDate>Thu, 04 Jul 2013 05:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2013/07/manage-symbol-server-on-azure-or-on-premise-vm-and-tf-service/</guid><description>One of the coolest capabilities of Team Foundation Server Build is the ability to automatically manage a symbol server. Suppose this scenario: you have a library and you want to distribute to all people in your organization, with the ability to being able to debug code in the dll and to identify the code that build each version of this dll. If you have TF Service you can use a VM in azure, but the overall process is really similar if you want to have a build on-premise.</description></item><item><title>Windows 81 preview is available how can I Build with TFS</title><link>https://www.codewrecks.com/post/old/2013/06/windows-8-1-preview-is-available-how-can-i-build-with-tfs/</link><pubDate>Wed, 26 Jun 2013 21:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2013/06/windows-8-1-preview-is-available-how-can-i-build-with-tfs/</guid><description>Now that Windows 8.1 preview is available, people start to think how they could compile W8.1 solutions with TFS. If you use TF Service you need only to enable a new Build Controller in preview, that is enabled to build 8.1 solutions.
Figure 1: Enable the Windows 8.1 Preview Build controller on your TF Service account to build Windows 8.1 applications
It is simple and easy. Now you should only assign the right controller when creating build definition.</description></item><item><title>Visual Studio Tools for Git a primer</title><link>https://www.codewrecks.com/post/old/2013/03/visual-studio-tools-for-git-a-primer/</link><pubDate>Sun, 17 Mar 2013 17:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2013/03/visual-studio-tools-for-git-a-primer/</guid><description>If you installed Update 2 CTP 4 (now it has go-live and supports upgrade to RTM) you should also install the Visual Studio Tools for Git that permits to work with Git repository directly from a Team Explorer extension. You can work with GitHub or whatever Git hosting you like and surely you can work with TF Service Git based Team Project. Once you have a Team Project based on Git you can simply to to the Source tab, and grab the url of the repository.</description></item><item><title>Remove git-tf tracked branch after a move from standard TF Service project to Git enabled project</title><link>https://www.codewrecks.com/post/old/2013/02/remove-git-tf-tracked-branch-after-a-move-from-standard-tf-service-project-to-git-enabled-project/</link><pubDate>Fri, 01 Feb 2013 21:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2013/02/remove-git-tf-tracked-branch-after-a-move-from-standard-tf-service-project-to-git-enabled-project/</guid><description>In a previous post called “Move a TFService source contorl to TF Service Git based Team Project” I explained how to simple move sources from a standard TF Service project to another one based on Git. Now after a push if I issue a log I got this.
Figure 1: Origin_tfs/tfs branch in my log?
It seems that there is a remote branch called origin_tfs/tfs but it does not get listed in the list of remote branches from the Web Ui, this because that branch was related to git-tf operations.</description></item><item><title>Associate Work Items to check-in in a TF Service Git enabled repository</title><link>https://www.codewrecks.com/post/old/2013/01/associate-work-items-to-check-in-in-a-tf-service-git-enabled-repository/</link><pubDate>Thu, 31 Jan 2013 20:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2013/01/associate-work-items-to-check-in-in-a-tf-service-git-enabled-repository/</guid><description>Even if we are still in preview, Git support in TF Service already has some nice integration between git and all the rest of the world of TFS. As an example suppose you have a Work Item you are working to.
Figure 1: Simple Work Item in web interface
Now suppose you want to associate a local commit to this Work Item , all you need to do is inserting hashtag followed by the id of the Work Item in the comment of the commit , es #437.</description></item><item><title>Move a TFService source control to TF Service Git based Team Project</title><link>https://www.codewrecks.com/post/old/2013/01/move-a-tfservice-source-control-to-tf-service-git-based-team-project/</link><pubDate>Thu, 31 Jan 2013 09:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2013/01/move-a-tfservice-source-control-to-tf-service-git-based-team-project/</guid><description>Now that with Update 2 we have Git support on TF Service a standard question arise: “how can I move all source from a TF Service standard project to a TF Service Git based Team Project?” The answer is quite simple
First of all you need to install and Configure Git-Tf, an addin that permits to clone a TFS source control in a local Git repository, this is needed to have a full local clone of the source project you want to migrate.</description></item></channel></rss>
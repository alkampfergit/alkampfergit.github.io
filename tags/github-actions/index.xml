<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>GitHub Actions on Codewrecks</title><link>https://www.codewrecks.com/tags/github-actions/</link><description>Recent content in GitHub Actions on Codewrecks</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sun, 16 Mar 2025 08:00:00 +0200</lastBuildDate><atom:link href="https://www.codewrecks.com/tags/github-actions/index.xml" rel="self" type="application/rss+xml"/><item><title>Pin GitHub action SHA to avoid security risk</title><link>https://www.codewrecks.com/post/github/github-sha-pinning/</link><pubDate>Sun, 16 Mar 2025 08:00:00 +0200</pubDate><guid>https://www.codewrecks.com/post/github/github-sha-pinning/</guid><description>&lt;h1 id="the-problem">The problem&lt;/h1>
&lt;p>When you author GitHub action pipelines, you usually use third party actions, that can be easily referenced in your workflow with simple syntax.&lt;/p>
&lt;p>Usually you refer to a github action in your workflow with the following syntax&lt;/p>
&lt;div class="highlight">&lt;div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yml" data-lang="yml">&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Setup Hugo&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">uses&lt;/span>: &lt;span style="color:#ae81ff">peaceiris/actions-hugo@v2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">with&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">hugo-version&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;0.128.0&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">extended&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;p>This is the &lt;strong>standard way to use a third party action inside your workflow&lt;/strong>, you specify the name of the repository in the uses part of the step, and then specify parameters.&lt;/p></description></item><item><title>GitHub action with ElasticSearch integration tests and SonarCloud</title><link>https://www.codewrecks.com/post/github/action-with-elastic-and-sonarcloud/</link><pubDate>Tue, 23 Apr 2024 08:00:00 +0200</pubDate><guid>https://www.codewrecks.com/post/github/action-with-elastic-and-sonarcloud/</guid><description>&lt;p>I blogged in the past on how you can Analyze you code with SonarCloud &lt;a href="https://www.codewrecks.com/post/github/github-sonarcloud-codecoverage/">in a GitHub action&lt;/a>. Things changed a little in the latest year but in this post I want to examine a different aspect &lt;strong>running tests that rely on external service, like ElasticSearch&lt;/strong>. Running integration test in GH action is a little more complex than running unit tests, because you need to &lt;strong>setup the environment but thanks to docker usually this can be done with a little effort&lt;/strong>.&lt;/p></description></item><item><title>GitHub Actions second round</title><link>https://www.codewrecks.com/post/old/2019/10/github-actions-second-round/</link><pubDate>Sat, 05 Oct 2019 09:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2019/10/github-actions-second-round/</guid><description>&lt;p>After being capable of running build and test in my GitHub action workflow, it is time to experiment with matrix to have the build run on multiple OSes. This can be tricky if you use (like me) some Docker Images (Mongodb, SqlServer). &lt;strong>This because when you choose Windows machine, you are using Windows Container services&lt;/strong> , not standard Docker for Windows. This means that you are not able to run standard Docker container based on linux, but you need to use Windows Container based image.&lt;/p></description></item><item><title>GitHub Actions Error pushing with workflow modified</title><link>https://www.codewrecks.com/post/old/2019/09/github-actions-error-pushing-with-workflow-modified/</link><pubDate>Thu, 26 Sep 2019 16:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2019/09/github-actions-error-pushing-with-workflow-modified/</guid><description>&lt;p>After creating a workflow for GitHub Action, if you try to modify the workflow locally then push to GitHub you can incur in strange error.&lt;/p>
&lt;blockquote>
&lt;p>refusing to allow an integration to create or update.github/workflows/ci.yml&lt;/p>&lt;/blockquote>
&lt;p>&lt;a href="https://www.codewrecks.com/blog/wp-content/uploads/2019/09/image-32.png">&lt;a target="_blank" href="https://www.codewrecks.com/blog/wp-content/uploads/2019/09/image_thumb-32.png"> &lt;img src="https://www.codewrecks.com/blog/wp-content/uploads/2019/09/image_thumb-32.png" alt="image" />&lt;/a>&lt;/a>&lt;/p>
&lt;p>&lt;em>&lt;strong>Figure 1&lt;/strong>&lt;/em>: &lt;em>Error in pushing to Git Repository&lt;/em>&lt;/p>
&lt;p>The reason seems to be a different permission in auth token used for authentication, then to solve the problem you need to clear credentials then try again the operation. In Windows you need to &lt;a href="http://www.codewrecks.com/blog/index.php/2015/06/23/git-for-windows-getting-invalid-username-or-password-with-wincred/">use Credential Manager&lt;/a> as I described in that old post. Just delete every entry for GitHub, then try to push again, you will be asked again for credentials and then you should be able to push.&lt;/p></description></item><item><title>First Experience with GitHub Actions</title><link>https://www.codewrecks.com/post/old/2019/09/first-experience-with-github-actions/</link><pubDate>Thu, 26 Sep 2019 15:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2019/09/first-experience-with-github-actions/</guid><description>&lt;p>GitHub &lt;a href="https://github.com/features/actions">actions&lt;/a> &lt;strong>is the new CI/CD system created by GitHub that allows you to build and release your software with a simple workflow defined in YAML file&lt;/strong>. Actually it is in beta, but you can simply request to be enlisted and your account will be enabled so you can try it in preview.&lt;/p>
&lt;p>Actions engine is based on a yaml definition that is stored directly in code, there are lots of predefined actions made by GitHub team as well as custom actions that can be developed by the community.The real power rely on the fact that you can use simply use command line and docker commands, making the creation of a release a simple and smooth process.&lt;/p></description></item></channel></rss>
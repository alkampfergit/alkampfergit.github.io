<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Mongo on Codewrecks</title><link>https://www.codewrecks.com/tags/mongo/</link><description>Recent content in Mongo on Codewrecks</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sat, 07 Feb 2015 10:00:37 +0200</lastBuildDate><atom:link href="https://www.codewrecks.com/tags/mongo/index.xml" rel="self" type="application/rss+xml"/><item><title>Upgrading ReplicaSet with MMS</title><link>https://www.codewrecks.com/post/old/2015/02/upgrading-replicaset-with-mms/</link><pubDate>Sat, 07 Feb 2015 10:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2015/02/upgrading-replicaset-with-mms/</guid><description>&lt;p>My RS of three mongo instances is running mongo 2.6.6 and now I want to upgrade to the latest version. Thanks to &lt;a href="https://mms.mongodb.com">mms&lt;/a>Â  &lt;strong>I can simply start the upgrade process directly from a web page, without needing to have an access to my real servers&lt;/strong>. The real good stuff is that the upgrade process is completely managed by mms for me, and the upgrade is done without stopping my Replica Set.&lt;/p></description></item><item><title>Upgrade your agents and instances with Mms</title><link>https://www.codewrecks.com/post/old/2014/11/upgrade-your-agents-and-instances-with-mms/</link><pubDate>Fri, 21 Nov 2014 14:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2014/11/upgrade-your-agents-and-instances-with-mms/</guid><description>&lt;p>Another big advantages of using MMS to manage your mongo deployments is the ability to &lt;strong>automatic upgrade agents and instances&lt;/strong>. For agents you can simply open the deployment area of a group and select edit mode. If some agent is outdated, the interface will immediately warn you with an alert on the top of the page as you can see in &lt;strong>Figure 1&lt;/strong>.&lt;/p>
&lt;p>&lt;a href="https://www.codewrecks.com/blog/wp-content/uploads/2014/11/image8.png">&lt;a target="_blank" href="https://www.codewrecks.com/blog/wp-content/uploads/2014/11/image_thumb8.png"> &lt;img src="https://www.codewrecks.com/blog/wp-content/uploads/2014/11/image_thumb8.png" alt="image" />&lt;/a>&lt;/a>&lt;/p>
&lt;p>&lt;em>&lt;strong>Figure 1&lt;/strong>&lt;/em>: &lt;em>Mms is telling you that agents are out of date&lt;/em>&lt;/p></description></item><item><title>Deploy mongo easily with mms</title><link>https://www.codewrecks.com/post/old/2014/11/deploy-mongo-easily-with-mms/</link><pubDate>Sat, 01 Nov 2014 10:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2014/11/deploy-mongo-easily-with-mms/</guid><description>&lt;p>One of the reason why &lt;a href="http://www.mongodb.org/">Mongo&lt;/a> is gaining a lot of momentum in the industry is the easy of use. Just download the package, start mongod and you are donw. &lt;strong>When you are in production, you cannot surely simply install your mongo as a service, start it and then forget it without any kind of monitoring, because this will surely lead to problems&lt;/strong>. When is time to create more complex topologies, like sharding or replica set you can commit some mistakes and you have some tedious work to do. I strongly suggest you to have a look at &lt;a href="https://mms.mongodb.com">Mongo Mms&lt;/a>, because the online version offers a lot of functionalities for free, and every developer can use it to simplify even deployment of dev servers.&lt;/p></description></item><item><title>Insenstive search with Mongo with C and LINQ provider</title><link>https://www.codewrecks.com/post/old/2013/12/insenstive-search-with-mongo-with-c-and-linq-provider/</link><pubDate>Wed, 11 Dec 2013 11:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2013/12/insenstive-search-with-mongo-with-c-and-linq-provider/</guid><description>&lt;p>Searching for a &lt;strong>case insensitive match in mongo&lt;/strong> is really simple, because it has full support for regular expression. As an example if you want to find all properties that is equal to a certain text with case insensitive search you can issue this query&lt;/p>
&lt;p>&lt;code>db.xxxx.find( { myProperty: /^text$/i } );&lt;/code>&lt;/p>
&lt;p>This query uses a regular expression and the final i is specification for an insensitive search. The other characters are&lt;/p></description></item></channel></rss>
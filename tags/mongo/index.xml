<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Mongo on Codewrecks</title><link>https://www.codewrecks.com/tags/mongo/</link><description>Recent content in Mongo on Codewrecks</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 07 Feb 2015 10:00:37 +0200</lastBuildDate><atom:link href="https://www.codewrecks.com/tags/mongo/index.xml" rel="self" type="application/rss+xml"/><item><title>Upgrading ReplicaSet with MMS</title><link>https://www.codewrecks.com/post/old/2015/02/upgrading-replicaset-with-mms/</link><pubDate>Sat, 07 Feb 2015 10:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2015/02/upgrading-replicaset-with-mms/</guid><description>My RS of three mongo instances is running mongo 2.6.6 and now I want to upgrade to the latest version. Thanks to mmsÂ I can simply start the upgrade process directly from a web page, without needing to have an access to my real servers. The real good stuff is that the upgrade process is completely managed by mms for me, and the upgrade is done without stopping my Replica Set.</description></item><item><title>Upgrade your agents and instances with Mms</title><link>https://www.codewrecks.com/post/old/2014/11/upgrade-your-agents-and-instances-with-mms/</link><pubDate>Fri, 21 Nov 2014 14:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2014/11/upgrade-your-agents-and-instances-with-mms/</guid><description>Another big advantages of using MMS to manage your mongo deployments is the ability to automatic upgrade agents and instances. For agents you can simply open the deployment area of a group and select edit mode. If some agent is outdated, the interface will immediately warn you with an alert on the top of the page as you can see in Figure 1.
Figure 1: Mms is telling you that agents are out of date</description></item><item><title>Deploy mongo easily with mms</title><link>https://www.codewrecks.com/post/old/2014/11/deploy-mongo-easily-with-mms/</link><pubDate>Sat, 01 Nov 2014 10:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2014/11/deploy-mongo-easily-with-mms/</guid><description>One of the reason why Mongo is gaining a lot of momentum in the industry is the easy of use. Just download the package, start mongod and you are donw. When you are in production, you cannot surely simply install your mongo as a service, start it and then forget it without any kind of monitoring, because this will surely lead to problems. When is time to create more complex topologies, like sharding or replica set you can commit some mistakes and you have some tedious work to do.</description></item><item><title>Insenstive search with Mongo with C and LINQ provider</title><link>https://www.codewrecks.com/post/old/2013/12/insenstive-search-with-mongo-with-c-and-linq-provider/</link><pubDate>Wed, 11 Dec 2013 11:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2013/12/insenstive-search-with-mongo-with-c-and-linq-provider/</guid><description>Searching for a case insensitive match in mongo is really simple, because it has full support for regular expression. As an example if you want to find all properties that is equal to a certain text with case insensitive search you can issue this query
db.xxxx.find( { myProperty: /^text$/i } );
This query uses a regular expression and the final i is specification for an insensitive search. The other characters are</description></item></channel></rss>
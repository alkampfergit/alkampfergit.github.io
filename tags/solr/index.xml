<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Solr on Codewrecks</title><link>https://www.codewrecks.com/tags/solr/</link><description>Recent content in Solr on Codewrecks</description><generator>Hugo</generator><language>en</language><lastBuildDate>Tue, 06 Jun 2017 20:00:37 +0200</lastBuildDate><atom:link href="https://www.codewrecks.com/tags/solr/index.xml" rel="self" type="application/rss+xml"/><item><title>Running SolrMeter without a UI</title><link>https://www.codewrecks.com/post/old/2017/06/running-solrmeter-without-a-ui/</link><pubDate>Tue, 06 Jun 2017 20:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2017/06/running-solrmeter-without-a-ui/</guid><description>&lt;h2 id="what-is-solrmeter">What is SolrMeter&lt;/h2>
&lt;p>&lt;a href="https://github.com/tflobbe/solrmeter">&lt;strong>SolrMeter&lt;/strong>&lt;/a> &lt;strong>is a nice Java program that allows you to test performances of your Solr installation under heavy load&lt;/strong>. This tool is not capable of handling very high load with coordination of multiple clients, nor it can test installation with multiple Solr Machines with a round robin to distribute queries across all machines, but &lt;strong>it does a really decent work in helping you to have some raw numbers about how your Solr installation perform&lt;/strong>.&lt;/p></description></item><item><title>Index documents content with Solr and Tika</title><link>https://www.codewrecks.com/post/old/2014/06/index-documents-content-with-solr-and-tika/</link><pubDate>Tue, 24 Jun 2014 06:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2014/06/index-documents-content-with-solr-and-tika/</guid><description>&lt;p>I’ve blogged in the past about &lt;a href="http://www.codewrecks.com/blog/index.php/2013/05/25/import-folder-of-documents-with-apache-solr-4-0-and-tika/">indexing entire folders of documents with solr and Tika&lt;/a> with Data Import Handler. This approach has pro and cons. On the &lt;strong>good side, once you’ve understand the basics, setting everything up and running is a matter of a couple of hours max, on the wrong side, using a DIH gives you little controls over the entire process&lt;/strong>.&lt;/p>
&lt;p>As an example, I’ve had problem with folder with jpg images, because the extractor crashes due to a missing library. If you do not configure correctly the import handler, every error stops the entire import process. Another problem is that document content is not subdivided into pages even if Tika can give you this kind of information. Finally, &lt;strong>you need to have all of your documents inside a folder to be indexed&lt;/strong>. &lt;strong>In real situation it is quite often preferable to have more control over the index process. Lets examine how you can use tika from your C# code&lt;/strong>.&lt;/p></description></item><item><title>Index a folder of multilanguage documents in Solr with Tika</title><link>https://www.codewrecks.com/post/old/2014/06/index-a-folder-of-multilanguage-documents-in-solr-with-tika/</link><pubDate>Sat, 14 Jun 2014 13:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2014/06/index-a-folder-of-multilanguage-documents-in-solr-with-tika/</guid><description>&lt;p>Previous Posts on the serie&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://www.codewrecks.com/blog/index.php/2013/05/25/import-folder-of-documents-with-apache-solr-4-0-and-tika/">Import folder of Documents with Apache Solr 4.0 and Tika&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.codewrecks.com/blog/index.php/2013/05/27/hilight-matched-text-inside-documents-indexed-with-solr-plus-tika/">Highlight matched test inside documents indexed with Solr And Tika&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Everything is up and running, but now &lt;strong>requirements change, documents can have multiple languages (italian and english in my scenario) and we want to do the simplest thing that could possibly work&lt;/strong>. First of all I change the schema of the core in solr to support language specific fields with wildcards.&lt;/p></description></item><item><title>Installing Solr on Tomcat on windows Error solr SEVERE Error filterStart</title><link>https://www.codewrecks.com/post/old/2014/03/installing-solr-on-tomcat-on-windows-error-solr-severe-error-filterstart/</link><pubDate>Fri, 07 Mar 2014 08:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2014/03/installing-solr-on-tomcat-on-windows-error-solr-severe-error-filterstart/</guid><description>&lt;p>If you are used in installing Solr in Windows environment and you install for the first time a &lt;strong>version greater than 4.2.1&lt;/strong> you can have trouble in letting your Solr server to start. The symptom is: &lt;strong>service is stopped in Tomcat Application Manager and if you press start you got a simple error telling you that the application could not start&lt;/strong>.&lt;/p>
&lt;p>To troubleshoot these kind of problems, you can go to Tomcat Log directory and looking at Catilina log, but usually you probably find a little information there.&lt;/p></description></item><item><title>Install Solr 43 pay attention to log libraries</title><link>https://www.codewrecks.com/post/old/2013/05/install-solr-4-3-pay-attention-to-log-libraries/</link><pubDate>Wed, 29 May 2013 18:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2013/05/install-solr-4-3-pay-attention-to-log-libraries/</guid><description>&lt;p>After I configured Solr 4.3 on a Virtual Machine (side by side with a 4.0) it refuses to start, and the only error I have in catilina log files is&lt;/p>
&lt;ul>
&lt;li>&lt;strong>SEVERE: Error filterStart&lt;/strong> *&lt;/li>
&lt;/ul>
&lt;p>This leaved me puzzled, but thanks to Alexandre and the exceptional Solr Mailing list I was directed toward the solution. &lt;strong>Solr 4.3 changed logging mechanism;&lt;/strong> and in this link &lt;a href="http://wiki.apache.org/solr/SolrLogging#What_changed" title="http://wiki.apache.org/solr/SolrLogging#What_changed">http://wiki.apache.org/solr/SolrLogging#What_changed&lt;/a> you can read about what changed and how to enable logging for Solr 4.3.&lt;/p></description></item><item><title>Hilight matched text inside documents indexed with Solr plus Tika</title><link>https://www.codewrecks.com/post/old/2013/05/hilight-matched-text-inside-documents-indexed-with-solr-plus-tika/</link><pubDate>Mon, 27 May 2013 07:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2013/05/hilight-matched-text-inside-documents-indexed-with-solr-plus-tika/</guid><description>&lt;p>I’ve already dealt on how to &lt;a href="http://www.codewrecks.com/blog/index.php/2013/05/25/import-folder-of-documents-with-apache-solr-4-0-and-tika/">index documents with Solr and Tika&lt;/a> and in this article I’ll explain how you can not only search for documents that match your query, but &lt;strong>returns even some text extract that shows where the document match the query&lt;/strong>. To achieve this, you should store the full content of the document inside your index, usually I create a couple of fields, one called Content that will contain the content of the file, and with a copyfield directive (  &amp;lt;copyField source=”content” dest=”text”/&amp;gt; ) automatically copy that value inside the catch all field called text.&lt;/p></description></item><item><title>Import folder of documents with Apache Solr 40 and tika</title><link>https://www.codewrecks.com/post/old/2013/05/import-folder-of-documents-with-apache-solr-4-0-and-tika/</link><pubDate>Sat, 25 May 2013 06:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2013/05/import-folder-of-documents-with-apache-solr-4-0-and-tika/</guid><description>&lt;p>In a previous article I showed how simple is to &lt;a href="http://www.codewrecks.com/blog/index.php/2013/04/29/loading-data-from-sql-server-to-solr-with-a-data-import-handler/">import data from a Sql database into Solr with a Data Import Handler&lt;/a>, in this article I’ll use a similar technique to &lt;strong>import documents stored inside a folder&lt;/strong>.&lt;/p>
&lt;p>This feature is exposed by the &lt;strong>integration with Tika, an open source document analyzer capable of extracting text by various formats of files&lt;/strong>. Thanks to this library solr is capable of crawling an entire directory, indexing every document inside it with really minimal configuration. Apache Tika is a standalone project, you can find all &lt;a href="https://tika.apache.org/1.3/formats.html">supported formats here&lt;/a> and you can use directly from your java (or.NET code) but thanks to Solr Integration setting everything up is a real breeze.&lt;/p></description></item><item><title>Loading data from Sql Server to Solr with a Data Import Handler</title><link>https://www.codewrecks.com/post/old/2013/04/loading-data-from-sql-server-to-solr-with-a-data-import-handler/</link><pubDate>Mon, 29 Apr 2013 15:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2013/04/loading-data-from-sql-server-to-solr-with-a-data-import-handler/</guid><description>&lt;p>&lt;a href="http://lucene.apache.org/solr/">Apache Solr&lt;/a> is an exceptional engine for Enterprise Search based on Lucene and usually the first question I got is: &lt;strong>how can I integrate Solr with an existing Sql Server data storage to power up searches&lt;/strong>.&lt;/p>
&lt;p>Solr is used not as a primary data store because it is a Search Platform whose primary purpose is giving the ability to do complex searches with blazing performance. This means that you usually have your data in a primary data store, Es. Sql Server and you need to move data to a Solr server to power up your searches.&lt;/p></description></item></channel></rss>
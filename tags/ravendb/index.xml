<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>RavenDB on Codewrecks</title><link>https://www.codewrecks.com/tags/ravendb/</link><description>Recent content in RavenDB on Codewrecks</description><generator>Hugo</generator><language>en</language><lastBuildDate>Mon, 20 Feb 2012 08:00:37 +0200</lastBuildDate><atom:link href="https://www.codewrecks.com/tags/ravendb/index.xml" rel="self" type="application/rss+xml"/><item><title>Renaming a property in RavenDb with HTTP API</title><link>https://www.codewrecks.com/post/old/2012/02/renaming-a-property-in-ravendb-with-http-api/</link><pubDate>Mon, 20 Feb 2012 08:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2012/02/renaming-a-property-in-ravendb-with-http-api/</guid><description>&lt;p>Previous posts on the &lt;a href="http://www.codewrecks.com/blog/index.php/tag/nosql/">NoSql&lt;/a> and Raven Series&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://www.codewrecks.com/blog/index.php/2012/02/04/nosql-and-a-life-without-schema/">NoSql and a life without Schema&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.codewrecks.com/blog/index.php/2012/02/06/nosql-and-a-life-without-schema-continued/">NoSql and a life without schema continued&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.codewrecks.com/blog/index.php/2012/02/08/rename-a-property-in-ravendb">Rename a property in RavenDb&lt;/a>&lt;/li>
&lt;li>First &lt;a href="http://www.codewrecks.com/blog/index.php/2012/02/13/first-touch-of-ravendb-http-api/">Touch of RavenDb HTTP API&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Other posts by Mauro on &lt;a href="http://ravendb.net/">RavenDb&lt;/a> Subject.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://mauroservienti.blogspot.com/2012/01/ravendb-start-your-engines.html">RavenDb: Start your engines&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://mauroservienti.blogspot.com/2012/02/ravendb-first-contact.html">RavenDb: First Contact&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://mauroservienti.blogspot.com/2012/02/ravendb-storing-data.html">RavenDB: Storing Data&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>In third post of the series, I dealt with renaming of properties in an entity that has already some instances saved in RavenDB. The solution proposed was based on &lt;a href="http://old.ravendb.net/documentation/docs-http-api-patch">PATCH&lt;/a> commands issued by C# code based on an Index created with RavenStudio, but now that I showed you how to issue HTTP API request, it is time to understand how to issue &lt;a href="http://old.ravendb.net/documentation/set-based">set-based PATCH&lt;/a> commands to modify multiple documents with simple HTTP call.&lt;/p></description></item><item><title>First touch of RavenDb HTTP API</title><link>https://www.codewrecks.com/post/old/2012/02/first-touch-of-ravendb-http-api/</link><pubDate>Mon, 13 Feb 2012 11:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2012/02/first-touch-of-ravendb-http-api/</guid><description>&lt;p>Previous posts on the NoSql and Raven Series&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://www.codewrecks.com/blog/index.php/2012/02/04/nosql-and-a-life-without-schema/">NoSql and a life without Schema&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.codewrecks.com/blog/index.php/2012/02/06/nosql-and-a-life-without-schema-continued/">NoSql and a life without schema continued&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.codewrecks.com/blog/index.php/2012/02/08/rename-a-property-in-ravendb">Rename a property in RavenDb&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Other posts by Mauro on RavenDb Subject.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://mauroservienti.blogspot.com/2012/01/ravendb-start-your-engines.html">RavenDb: Start your engines&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://mauroservienti.blogspot.com/2012/02/ravendb-first-contact.html">RavenDb: First Contact&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>RavenDb is not accessible only from.NET Code, but it fully support an &lt;a href="http://old.ravendb.net/documentation/docs-http-api-index">API based on HTTP&lt;/a> that basically permits to interact with database engine with simple HTTP requests, thus you can access a RavenDb instance from every technology that is capable of issuing Web Requests.&lt;/p></description></item><item><title>Rename a property in RavenDb</title><link>https://www.codewrecks.com/post/old/2012/02/rename-a-property-in-ravendb/</link><pubDate>Wed, 08 Feb 2012 17:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2012/02/rename-a-property-in-ravendb/</guid><description>&lt;p>Previous posts on the NoSql and Raven Series&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://www.codewrecks.com/blog/index.php/2012/02/04/nosql-and-a-life-without-schema/">NoSql and a life without Schema&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.codewrecks.com/blog/index.php/2012/02/06/nosql-and-a-life-without-schema-continued/">NoSql and a life without schema continued&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Other posts by Mauro on RavenDb Subject.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://mauroservienti.blogspot.com/2012/01/ravendb-start-your-engines.html">RavenDb: Start your engines&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://mauroservienti.blogspot.com/2012/02/ravendb-first-contact.html">RavenDb: First Contact&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>In previous articles I showed how simple is to store objects inside a NO SQL database because the data storage has no schema and does not require you to specify the format of your data. I decided to use RavenDb as a NoSql storage to show some basic concepts of NoSql and I showed also how simple is to add a new property to a document, because RavenDb takes care of everything, just save and load objects and the new property is just there.&lt;/p></description></item><item><title>NoSql and a life without Schema continued</title><link>https://www.codewrecks.com/post/old/2012/02/nosql-and-a-life-without-schema-continued/</link><pubDate>Mon, 06 Feb 2012 08:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2012/02/nosql-and-a-life-without-schema-continued/</guid><description>&lt;p>In the first part I showed how simple is to store object inside a NoSql database like RavenDb, today I want to point out how cool is having no schema when it is time to add properties to your documents.&lt;/p>
&lt;p>Suppose that your Player entity changed and you add a new property called Description and you already saved some Players on RavenDb. The question is: what happens when you try to save a new Player now that the class has another property? What happens when you load an old entity, that was saved when that property did not exist?&lt;/p></description></item><item><title>NoSql and a life without Schema</title><link>https://www.codewrecks.com/post/old/2012/02/nosql-and-a-life-without-schema/</link><pubDate>Sat, 04 Feb 2012 07:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2012/02/nosql-and-a-life-without-schema/</guid><description>&lt;p>NoSql is not a replacemente for SQL databases, but it is a valid alternative for a lot of situations where standard SQL is not the best approach to store your data. Since we were taught that whenever you need to store data on a “data store” and you need to query that data for retrieval, SQL is the best solution, you have only to decide what Sql Engine to use and the game is done.&lt;/p></description></item></channel></rss>
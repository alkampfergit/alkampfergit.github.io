<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Optimization on Codewrecks</title><link>https://www.codewrecks.com/tags/optimization/</link><description>Recent content in Optimization on Codewrecks</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sun, 02 Feb 2025 06:00:00 +0200</lastBuildDate><atom:link href="https://www.codewrecks.com/tags/optimization/index.xml" rel="self" type="application/rss+xml"/><item><title>Pill: Problems in Azure DevOps Pipelines due to Shallow Fetch</title><link>https://www.codewrecks.com/post/azdo/pills/shallow-fetch-pipeline/</link><pubDate>Sun, 02 Feb 2025 06:00:00 +0200</pubDate><guid>https://www.codewrecks.com/post/azdo/pills/shallow-fetch-pipeline/</guid><description>&lt;p>In Azure DevOps, pipelines are a fundamental component for automating the build and release process. One of the key optimizations in these pipelines is the use of &lt;strong>shallow fetch when cloning repositories&lt;/strong>. Unlike a full clone, which downloads the entire history of the repository, a &lt;strong>shallow fetch retrieves only the specific commit needed for the build&lt;/strong>. This is a really welcomed feature, because repositories can contain years of history, or they can have &lt;strong>some big file committed by error in some older commit&lt;/strong>.&lt;/p></description></item></channel></rss>
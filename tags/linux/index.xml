<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Linux on Codewrecks</title><link>https://www.codewrecks.com/tags/linux/</link><description>Recent content in Linux on Codewrecks</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sun, 01 Nov 2020 13:12:42 +0200</lastBuildDate><atom:link href="https://www.codewrecks.com/tags/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>Azure DevOps Pills: PowerShell in pipeline with Linux agents</title><link>https://www.codewrecks.com/post/azdo/pipeline/linux-powershell/</link><pubDate>Sun, 01 Nov 2020 13:12:42 +0200</pubDate><guid>https://www.codewrecks.com/post/azdo/pipeline/linux-powershell/</guid><description>&lt;p>This is a really basic fact, but it is often underestimated. PowerShell core is now available on Linux and this means that you can use PowerShell for your Azure DevOps pipeline even if the pipeline &lt;strong>will be executed on Linux machine&lt;/strong>. If I have this task in a pipeline&lt;/p>
&lt;div class="highlight">&lt;div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">steps&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">task&lt;/span>: &lt;span style="color:#ae81ff">PowerShell@2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">displayName&lt;/span>: &lt;span style="color:#ae81ff">Simple task&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">inputs&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">targetType&lt;/span>: &lt;span style="color:#ae81ff">inline&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">script&lt;/span>: |&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Write-Host &amp;#34;Simple task for simple stage pipeline&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Write-Host &amp;#34;Value for variable Configuration is $(configuration) value for parameterA is ${{ parameters.ParameterA }}&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Write-Host &amp;#34;Change Variable value configuration to &amp;#39;debug&amp;#39;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Write-Host &amp;#34;##vso[task.setvariable variable=configuration]debug&amp;#34;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;p>I can schedule the pipeline on a Linux hosted agent, and everything runs smoothly.&lt;/p></description></item><item><title>Compiling Angular app in WSL2</title><link>https://www.codewrecks.com/post/general/compile-angular-in-wsl2/</link><pubDate>Sat, 06 Jun 2020 08:00:00 +0200</pubDate><guid>https://www.codewrecks.com/post/general/compile-angular-in-wsl2/</guid><description>&lt;p>Windows Subsystem for Linux was a nice toy to play, but never impressed me very much, one of the reason is its limitations. I do not work much on Linux, but usually I have Linux boxes with MongoDB, Elasticsearch and play with security related stuff and for those purposes &lt;strong>I have &lt;a href="http://www.codewrecks.com/post/security/play-security-in-a-secure-environment/">dedicated virtual machines&lt;/a>.&lt;/strong>&lt;/p>
&lt;p>This was the reason why I did not found any real useful usage for WSL, I&amp;rsquo;ve tried to quick do NMAP scan, but I got errors since it did not run a real Linux full kernel and NMap wants to have full access to the NIC to do its stuff. &lt;strong>Now that we have WSL2 things starts to change.&lt;/strong>&lt;/p></description></item><item><title>Configure a VSTS Linux agent with docker in minutes</title><link>https://www.codewrecks.com/post/old/2017/10/configure-a-vsts-linux-agent-with-docker-in-minutes/</link><pubDate>Sat, 14 Oct 2017 14:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2017/10/configure-a-vsts-linux-agent-with-docker-in-minutes/</guid><description>&lt;p>It is really simple to create a build agent for VSTS that runs in Linux and is capable of building and packaging your DotNetCore project, I’ve explained everything in &lt;a href="http://www.codewrecks.com/blog/index.php/2017/09/30/dotnetcore-ci-linux-and-vsts/">a previous post&lt;/a>, but I want to remind you that, with docker, the whole process is really simple.&lt;/p>
&lt;p>&lt;strong>Anyone knows that setting up a build machine often takes time.&lt;/strong> VSTS makes it super simple to install the Agent , just download a zip, call a script to configure the agent and the game is done. But this is only one side of the story. Once the agent is up, if you fire a build, it will fail if you did not install all the tools to compile your project (.NET Framework) and often you need to install the whole Visual Studio environment because you have specific dependencies. I have also code that needs MongoDB and Sql Server to run tests against those two databases, this will usually require more manual work to setup everything.&lt;/p></description></item><item><title>How to security expose my test TFS on the internet</title><link>https://www.codewrecks.com/post/old/2017/09/how-to-security-expose-my-test-tfs-on-the-internet/</link><pubDate>Tue, 19 Sep 2017 16:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2017/09/how-to-security-expose-my-test-tfs-on-the-internet/</guid><description>&lt;p>I’m not a security expert, but I have a basic knowledge on the argument, so when it is time to expose my test TFS on the outside world I took some precautions. First of all this is a test TFS instance that is running in my test network, it is not a production instance and I need to access it only sometimes when I’m outside my network.&lt;/p>
&lt;p>Instead of mapping 8080 port on my firewall I’ve deployed a Linux machine, enabled SSH and added google two factor authentication, then I expose port 22 on another external port. Thanks to this, the only port that is exposed on my router is a port that remap on port 22 on my linux instance.&lt;/p></description></item><item><title>Using certificate for SSH in Azure Linux VM</title><link>https://www.codewrecks.com/post/old/2015/10/using-certificate-for-ssh-in-azure-linux-vm/</link><pubDate>Tue, 13 Oct 2015 17:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2015/10/using-certificate-for-ssh-in-azure-linux-vm/</guid><description>&lt;p>If you like &lt;a href="http://www.codewrecks.com/blog/index.php/2015/10/10/using-certificate-to-connect-via-ssh-to-your-linux-machine/">to use certificate to connect via SSH to your Linux machine&lt;/a> you will probably use that technique to access all of your VMs, even those one hosted on Azure.&lt;/p>
&lt;p>This operation is really simple, because &lt;strong>Azure Portal allow you to specify the public key during VM creation&lt;/strong> and everything else is managed by VM Creation Scripts. In the same blade where you specify username and password you can opt in to use a certificate instead of a password. You should open the file with.pub extension you’ve created previously (with ssh-keygen) and paste full content in appropriate textbox.&lt;/p></description></item><item><title>Where is my DNS name for Azure VM with new Resource manager</title><link>https://www.codewrecks.com/post/old/2015/10/where-is-my-dns-name-for-azure-vm-with-new-resource-manager/</link><pubDate>Sun, 11 Oct 2015 07:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2015/10/where-is-my-dns-name-for-azure-vm-with-new-resource-manager/</guid><description>&lt;p>Azure is changing management mode for resources, as you can read from &lt;a href="https://azure.microsoft.com/en-us/documentation/articles/resource-manager-deployment-model/">this article&lt;/a> and this is the reason why, in the new portal, you can see two different entry for some of the resources, ex: Virtual Machines.&lt;/p>
&lt;p>&lt;a href="https://www.codewrecks.com/blog/wp-content/uploads/2015/10/image8.png">&lt;a target="_blank" href="https://www.codewrecks.com/blog/wp-content/uploads/2015/10/image_thumb8.png"> &lt;img src="https://www.codewrecks.com/blog/wp-content/uploads/2015/10/image_thumb8.png" alt="image" />&lt;/a>&lt;/a>&lt;/p>
&lt;p>&lt;em>&lt;strong>Figure 1&lt;/strong>&lt;/em>: &lt;em>Classic and new resource management in action&lt;/em>&lt;/p>
&lt;p>Since the new model has more control over resources, &lt;strong>I’ve create a linux machine with the new model to do some testing&lt;/strong>. After the machine was created I opened the blade for the machine (machine create with the new model are visible only on the new portal) and I noticed that I have no DNS name setting.&lt;/p></description></item><item><title>Using Certificate to connect via SSH to your Linux Machine</title><link>https://www.codewrecks.com/post/old/2015/10/using-certificate-to-connect-via-ssh-to-your-linux-machine/</link><pubDate>Sat, 10 Oct 2015 07:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2015/10/using-certificate-to-connect-via-ssh-to-your-linux-machine/</guid><description>&lt;p>The world of computer is changing and &lt;strong>is it not possible anymore to live in an isolated silo where you use only one operating system or technology&lt;/strong> , and this is the reason why, even if my last 20 years of development and work were made exclusively on Windows technologies, in this last 2 years I had many occasion to use Linux machines.&lt;/p>
&lt;p>I used Linux at the very beginning, using Slackware distribution and I was the typical guy that use command line. At that time I used Windows Maker as UI but all the administration was done via console. &lt;strong>This is the reason why, when I need a Linux VM (docker, ElasticSearch, Solr, Mongo, etc) I always install without a GUI.&lt;/strong> I use local Hyper-V host or Azure, and usually connect to machine via SSH with standard username and password, but this is not the optimal situation because I have lots of VM. With many Vm you can use the same password for all machines, or use a password manager to keep track of all the passwords, but this is not so secure (even if all environment are test ones).&lt;/p></description></item><item><title>Grey screen RDP to Ubuntu server VM running on Azure</title><link>https://www.codewrecks.com/post/old/2014/05/grey-screen-rdp-to-ubuntu-server-vm-running-on-azure/</link><pubDate>Wed, 28 May 2014 20:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2014/05/grey-screen-rdp-to-ubuntu-server-vm-running-on-azure/</guid><description>&lt;p>There are a &lt;a href="http://blogs.technet.com/b/uktechnet/archive/2013/11/12/running-a-remote-desktop-on-a-windows-azure-linux-vm.aspx">lot of articles&lt;/a> that explains how to setup a Ubuntu machine on Azure and being able to use xrdp to access it with a standard Remote Desktop session. If you try now and &lt;strong>use Ubuntu 14 to create your virtual machine you will discover that you are able to RDP to the machine, but after inserting credential you will be prompted with a grey Screen&lt;/strong>.&lt;/p>
&lt;p>This is due to a change in Ubuntu 14, you can read details in &lt;a href="http://askubuntu.com/questions/449785/ubuntu-14-04-xrdp-grey">this blog post&lt;/a>. If you want to save time you can simply choose an older Ubuntu distribution for your Azure Machine, and in few minutes you will be able to RDP to Ubuntu from Windows machines.&lt;/p></description></item></channel></rss>
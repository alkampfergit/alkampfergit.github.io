<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>github on Codewrecks</title><link>https://www.codewrecks.com/tags/github/</link><description>Recent content in github on Codewrecks</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 07 Jan 2022 08:00:00 +0200</lastBuildDate><atom:link href="https://www.codewrecks.com/tags/github/index.xml" rel="self" type="application/rss+xml"/><item><title>GitHub actions templates</title><link>https://www.codewrecks.com/post/github/github-actions-templates/</link><pubDate>Fri, 07 Jan 2022 08:00:00 +0200</pubDate><guid>https://www.codewrecks.com/post/github/github-actions-templates/</guid><description>GitHub Actions are closing the gap with Azure DevOps pipelines day by day, one of the features introduces months ago was Action templates, the ability to re-use actions definitions between repositories. You can read all the detail in Official GitHub documentation.
Templates are really useful because usually, in one organization, you tend to use a restricted set of technologies with the very same set of actions to perform to build and release the code.</description></item><item><title>GitHub Actions permission settings</title><link>https://www.codewrecks.com/post/github/action-permission/</link><pubDate>Sat, 27 Nov 2021 06:00:00 +0000</pubDate><guid>https://www.codewrecks.com/post/github/action-permission/</guid><description>Continuous integration is absolutely vital for a healthy software project, but in many situation people gave little attention to security. If you are running CI workflows in your machine where you control the code that is build and every script that is run by CI engine, you are pretty fine. In that scenario an attacker should take control of your code to run some malicious script during a CI run, but if you are using a third party task/extension/action, the situation is different.</description></item><item><title>Determine version with GitVersion for a Python project</title><link>https://www.codewrecks.com/post/github/giversion-python-general/</link><pubDate>Sat, 04 Sep 2021 08:00:00 +0200</pubDate><guid>https://www.codewrecks.com/post/github/giversion-python-general/</guid><description>Project used for this example can be found in GitHub.
In GitHub actions you can use .NET based tools, both in Windows and in Linux machines, to accomplish various tasks. I&amp;rsquo;m a great fan of GitVersion tool, used to determine a semantic versioning based on a Git repository that uses git-flow structure. Another nice aspect is that GitHub action machines based on Linux comes with PowerShell core preinstalled, so I can use actions that comes from PowerShell gallery without any problems &amp;hellip; errr.</description></item><item><title>Analyze Python project with SonarCloud and GitHub</title><link>https://www.codewrecks.com/post/github/python-sonarcloud-actions/</link><pubDate>Sat, 28 Aug 2021 08:00:00 +0200</pubDate><guid>https://www.codewrecks.com/post/github/python-sonarcloud-actions/</guid><description>SonarCloud is free for Open Source projects, and for languages like Python, that does not need compilation, it can directly analyze the repository without any intervention from the author. This feature is automatically enabled when you setup your Project in SonarCloud and it determines that you have not compiled language.
Figure 1: Analysis configuration shows that in this project we have CI analysis
If you look at Figure you can see that in my situation I have a Continuous Integration based analysis and my automatic analysis is disabled.</description></item><item><title>Configure Codespaces for Python projects</title><link>https://www.codewrecks.com/post/github/codespaces-python/</link><pubDate>Thu, 26 Aug 2021 08:00:00 +0200</pubDate><guid>https://www.codewrecks.com/post/github/codespaces-python/</guid><description>One of the great advantage of Codespaces is the ability to preconfigure the environment so you do not need to waste time installing and configuring your toolchain. Python is a perfect example of this scenario, I&amp;rsquo;ve a small project to generate Git Graph Representation and since I&amp;rsquo;m not a full time Python developer, I&amp;rsquo;ve not it installed and perfectly configured in all of my environment. Also I primarily work on Windows, so Codespaces allows me to test everything on Linux with a single click.</description></item><item><title>Configure Codespaces for a real project</title><link>https://www.codewrecks.com/post/github/configuring-codespaces/</link><pubDate>Fri, 20 Aug 2021 08:00:00 +0200</pubDate><guid>https://www.codewrecks.com/post/github/configuring-codespaces/</guid><description>In previous post I explored the many advantages I&amp;rsquo;ve found using GitHub codespaces to author blog posts directly in a browser. That example was surely too simple, after all a hugo blog is just markdown, but nevertheless Codespaces allows me to configure my environment with great easy.
You can follow the guide on the official link but here is a quick summary on how I configured my codespaces for my blog.</description></item><item><title>Use GitHub codespaces to author blog post</title><link>https://www.codewrecks.com/post/github/codespaces-hugo/</link><pubDate>Thu, 19 Aug 2021 08:00:00 +0200</pubDate><guid>https://www.codewrecks.com/post/github/codespaces-hugo/</guid><description>The scenario I played a little bit with GitHub Codespaces when it was in preview, now it is time to try to use it real activities to understand scenarios where it can be useful.
To have a real test you need to setup a goal to verify if the tool is capable of reaching that goal, and if it is an advantage over existing tool. My first goal is being able to write Blog Post in hugo with GitHub Codespaces and being able to determine if it is more productive than running a standalone local version of Visual Studio code.</description></item><item><title>Choose environment from branch in GitHub action</title><link>https://www.codewrecks.com/post/github/choose-environment-from-branch/</link><pubDate>Wed, 18 Aug 2021 08:00:00 +0200</pubDate><guid>https://www.codewrecks.com/post/github/choose-environment-from-branch/</guid><description>I have a friend that asked me how to choose an enviroment in a GitHub action based on the branch that triggered the action. Usually Environments are used in a sort of Promotion mechanism, where you start deploying on Test, then you have a manual or automatic approval to deploy on staging and finally to production. Even if this is a textbook scenario sometimes you need to create a simple sequence of steps to deploy your software in an environment and you want to choose environment based on branch.</description></item><item><title>Code coverage in SonarCloud and GitHub Actions</title><link>https://www.codewrecks.com/post/github/github-sonarcloud-codecoverage/</link><pubDate>Thu, 08 Jul 2021 19:00:00 +0200</pubDate><guid>https://www.codewrecks.com/post/github/github-sonarcloud-codecoverage/</guid><description>First of all I want to thank my friend Giulio Vian for pointing me in the right direction and for its great work in TfsAggregator Action.
My problem was: I used the wizard in GitHub to create a GitHub Action definition to analyze code in SonarCloud, everything runs just fine except I was not able to have Code Coverage nor unit tests result in my analysis. With Azure DevOps actions and .</description></item><item><title>CodeQL Scanning in GitHub</title><link>https://www.codewrecks.com/post/github/code-scanning-result/</link><pubDate>Sun, 14 Mar 2021 08:00:00 +0200</pubDate><guid>https://www.codewrecks.com/post/github/code-scanning-result/</guid><description>As you can read directly from GitHub blog post GitHub code scanning is now available and ready to use for your repositories.
I&amp;rsquo;ve blogged in the past about code security scanning in GitHub but in that post I didn&amp;rsquo;t show what happens when analysis engine found some possible security problem in your code. When something is not ok, you can go on your Security GitHub tab to look for alerts.</description></item><item><title>Code scanning in GitHub</title><link>https://www.codewrecks.com/post/github/code-scanning/</link><pubDate>Sat, 03 Oct 2020 08:00:00 +0200</pubDate><guid>https://www.codewrecks.com/post/github/code-scanning/</guid><description>As you can read directly from GitHub blog post GitHub code scanning is now available and ready to use for your repositories.
To enable code scanning you can just go to the security tab of your repository and choose to enable code scanning.
Figure 1: Enable code scanning
You are presented with a list of Code Scanning tools at your disposal, clearly the first is CodeQL and it is automatically offered to you by GitHub, then you can find other tool available in the marketplace</description></item><item><title>Continuous Integration in GitHub Actions deploy in AzureDevops</title><link>https://www.codewrecks.com/post/old/2020/04/continuous-integration-in-github-actions-deploy-in-azuredevops/</link><pubDate>Sat, 04 Apr 2020 05:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2020/04/continuous-integration-in-github-actions-deploy-in-azuredevops/</guid><description>My dear friend Matteo just published an interesting article on integration between GitHub actions and Azure Devops Pipeline here. I have a different scenario where Iâ€™ve already published a GitHub release from a GitHub action, but I have nothing ready in GitHub to release in my machines.
While GitHub is really fantastic for source code and starts having a good support for CI with Actions, in the release part it still miss a solution.</description></item><item><title>Azure DevOps pipeline template for build and release NET core project</title><link>https://www.codewrecks.com/post/old/2020/03/azure-devops-pipeline-template-for-build-and-release-net-core-project/</link><pubDate>Sun, 29 Mar 2020 09:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2020/03/azure-devops-pipeline-template-for-build-and-release-net-core-project/</guid><description>Some days ago Iâ€™ve blogged on how to release projects on GitHub with actions, now it is time to understand how to do a similar thing in Azure DevOps to build / test / publish a.NET core library with nuget. The purpose is to create a generic template that can be reused on every general that needs to build an utility dll, run test and publish to a Nuget feed.</description></item><item><title>GitHub actions improvements</title><link>https://www.codewrecks.com/post/old/2020/03/github-actions-improvements/</link><pubDate>Thu, 12 Mar 2020 17:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2020/03/github-actions-improvements/</guid><description>GitHub actions is really new kid on the block and even if I still prefer Azure DevOps pipelines, because they are really more production ready, GitHub actions is rapidly evolving.
Figure 1 : GitHub actions now has a dedicated editor for actions to quickly include actions
As you can see in Figure 1 , when you edit workflow file in GitHub online editor you can simply browse all available actions.</description></item><item><title>Use latest OS image tag in GitHub actions</title><link>https://www.codewrecks.com/post/old/2020/03/use-latest-os-image-tag-in-github-actions/</link><pubDate>Sun, 08 Mar 2020 09:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2020/03/use-latest-os-image-tag-in-github-actions/</guid><description>I have a nice GH action that runs some build and test on my project, now I noticed that some of the latest runs have some problem.
Figure 1: My action that ran only one of the matrix combination
Action has two distinct run because it has a matrix, actually I want to run it against Linux and Windows operating systems, but it seems that it does not run anymore on Windows.</description></item><item><title>GitHub security Alerts</title><link>https://www.codewrecks.com/post/old/2019/10/github-security-alerts/</link><pubDate>Tue, 22 Oct 2019 16:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2019/10/github-security-alerts/</guid><description>I really love everything about security and Iâ€™m really intrigued by GitHub security tab that is now present on you repository. In your project usually it is disabled by default.
Figure 1: GitHub Security tab on your repository
If you enable it you start receiving suggestion based on code that you check in on the repository , as an example, GitHub will scan your npm packages source to find dependencies with libraries that are insecure.</description></item><item><title>First Experience with GitHub Actions</title><link>https://www.codewrecks.com/post/old/2019/09/first-experience-with-github-actions/</link><pubDate>Thu, 26 Sep 2019 15:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2019/09/first-experience-with-github-actions/</guid><description>GitHub actions is the new CI/CD system created by GitHub that allows you to build and release your software with a simple workflow defined in YAML file. Actually it is in beta, but you can simply request to be enlisted and your account will be enabled so you can try it in preview.
Actions engine is based on a yaml definition that is stored directly in code, there are lots of predefined actions made by GitHub team as well as custom actions that can be developed by the community.</description></item><item><title>Git for windows getting Invalid username or password with Wincred</title><link>https://www.codewrecks.com/post/old/2015/06/git-for-windows-getting-invalid-username-or-password-with-wincred/</link><pubDate>Tue, 23 Jun 2015 06:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2015/06/git-for-windows-getting-invalid-username-or-password-with-wincred/</guid><description>If you use Https to communicate with your git repository, Es, Github or VisualStudioOnline, you usually setup credential manager to avoid entering credential for each command that contact the server. With latest versions of git you can configure wincred with this simple command.
1 git config --global credential.helper wincred This morning I start getting error while Iâ€™m trying to push some commits to GitHub.
1 2 3 4 $ git push remote: Invalid username or password.</description></item></channel></rss>
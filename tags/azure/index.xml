<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Azure on Codewrecks</title><link>https://www.codewrecks.com/tags/azure/</link><description>Recent content in Azure on Codewrecks</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sat, 03 Apr 2021 07:00:18 +0200</lastBuildDate><atom:link href="https://www.codewrecks.com/tags/azure/index.xml" rel="self" type="application/rss+xml"/><item><title>Hello terraform</title><link>https://www.codewrecks.com/post/devops/terraform-hello-world/</link><pubDate>Sat, 03 Apr 2021 07:00:18 +0200</pubDate><guid>https://www.codewrecks.com/post/devops/terraform-hello-world/</guid><description>I&amp;rsquo;m studying Terraform Up and Running book, a really good book but all the examples are for AWS. I have nothing against AWS, but I&amp;rsquo;m familiar with Azure, so I&amp;rsquo;d like to start porting some of the example of the book for Azure. While I&amp;rsquo;m not sure if I&amp;rsquo;ll keep up with the conversion, if you are curious I&amp;rsquo;ve started the work in this repository, feel free to post any correction (remember that I&amp;rsquo;m learning Terraform, I&amp;rsquo;m not an expert :))</description></item><item><title>Access your azure VM with Azure Bastion</title><link>https://www.codewrecks.com/post/azure/azure-bastion/</link><pubDate>Sat, 11 Jul 2020 10:45:18 +0200</pubDate><guid>https://www.codewrecks.com/post/azure/azure-bastion/</guid><description>There are lots of reasons to use a classic VM in Azure, even if PAAS is the preferred way to approach the cloud, IAAS is still strong especially because not every product is ready to run on cloud providers.
If you have the need to create a standard VM, both Linux or Windows, you probably want an access with SSH or RDP to configure and manage it and using a public address is probably the quickest, but less secure way, to do it.</description></item><item><title>Group application insight logs by custom property</title><link>https://www.codewrecks.com/post/azure/application-insight-group-logs-by-custom-property/</link><pubDate>Mon, 27 Apr 2020 18:45:18 +0200</pubDate><guid>https://www.codewrecks.com/post/azure/application-insight-group-logs-by-custom-property/</guid><description>Today we found excessive number of logs in Application Insight instance, an application that usually cost few bucks each month, started to use more resources. Looking at a summary of last 30 days we see excessive number of custom events.
Figure 1: Application insight summary for a specific application
Now the problem is: how can I quickly spot out why we have an excessive number of CustomEvents? Logs shows me clearly that the vast majority of logs are indeed Custom Events.</description></item><item><title>Welcome Azure DevOps</title><link>https://www.codewrecks.com/post/old/2018/09/welcome-azure-devops/</link><pubDate>Tue, 11 Sep 2018 16:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2018/09/welcome-azure-devops/</guid><description>Yesterday Microsoft announced a change in naming for VSTS, now branded as Azure DevOps. You can read most of the details in this blog post and if you are using VSTS right now you will not have a big impact in the future. Event is this is just a rebranding of the service, there are a couple of suggestion I’d like to give you to have a smoother transition.
Visual Studio Team Services was rebranded in Azure DevOps, this will not impact your existing VSTS projects, but it is wise to start planning for a smooth transition.</description></item><item><title>Use the right Azure Service Endpoint in build vNext</title><link>https://www.codewrecks.com/post/old/2015/12/use-the-right-azure-service-endpoint-in-build-vnext/</link><pubDate>Tue, 29 Dec 2015 08:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2015/12/use-the-right-azure-service-endpoint-in-build-vnext/</guid><description>Build vNext has a task dedicated to uploading files in azure blob , as you can see from Figure 1: Figure 1: Azure File Copy task configured in a vNext build
The nice parte is the Azure Subscription setting, that allows to choose one of the Azure endpoint configured for the project. Using service endpoint, you can ask to the person that has password/keys for Azure Account to configure an endpoint.</description></item><item><title>Where is my Azure VM using Azure CLI</title><link>https://www.codewrecks.com/post/old/2015/10/where-is-my-azure-vm-using-azure-cli/</link><pubDate>Wed, 14 Oct 2015 18:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2015/10/where-is-my-azure-vm-using-azure-cli/</guid><description>Azure command line interface, known as Azure CLI is a set of open source, cross platform commands to manage your Azure resources. The most interesting aspect of these tools is that they are Cross Platform and you can use them even on Linux boxex.
After you imported your certificate key to manage your azure account you can issue a simple command
1 azure vm list To simply list all of your VM of your account.</description></item><item><title>Where is my DNS name for Azure VM with new Resource manager</title><link>https://www.codewrecks.com/post/old/2015/10/where-is-my-dns-name-for-azure-vm-with-new-resource-manager/</link><pubDate>Sun, 11 Oct 2015 07:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2015/10/where-is-my-dns-name-for-azure-vm-with-new-resource-manager/</guid><description>Azure is changing management mode for resources, as you can read from this article and this is the reason why, in the new portal, you can see two different entry for some of the resources, ex: Virtual Machines.
Figure 1: Classic and new resource management in action
Since the new model has more control over resources, I’ve create a linux machine with the new model to do some testing. After the machine was created I opened the blade for the machine (machine create with the new model are visible only on the new portal) and I noticed that I have no DNS name setting.</description></item><item><title>How to connect existing VSO Account to new azure portal</title><link>https://www.codewrecks.com/post/old/2014/07/how-to-connect-existing-vso-account-to-new-azure-portal/</link><pubDate>Wed, 23 Jul 2014 10:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2014/07/how-to-connect-existing-vso-account-to-new-azure-portal/</guid><description>With the new deploy of Visual Studio Online you can link your existing VSO accounts to your azure subscription so they will be available on new Azure portal http://portal.azure.com. You just need to connect to standard management portal ( http://manage.windowsazure.com ) and then add an existing VSO account to the list of available ones.
Figure 1: Use the New button in azure portal to add existing VSO account to new azure portal.</description></item><item><title>Install and configure a TFS Release Manager Deployer Agent in Azure VM</title><link>https://www.codewrecks.com/post/old/2014/06/install-and-configure-a-tfs-release-manager-deployer-agent-in-azure-vm/</link><pubDate>Wed, 11 Jun 2014 07:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2014/06/install-and-configure-a-tfs-release-manager-deployer-agent-in-azure-vm/</guid><description>The Problem You have a domain with TFS and -release management, there are no problems deploying agents on machines inside the domain, but you are not able to configure an agent for machines outside the domain.
Es: you have some Azure VMs you want to use for your release pipeline and you do not want to join them to the domain with VPN or other mechanism.
This scenario usually ends in being not able to configure Deployment Agents in those machines due to various authorization problems.</description></item><item><title>Deploying on Azure Web sites from on-premise TFS</title><link>https://www.codewrecks.com/post/old/2013/07/deploying-on-azure-web-sites-from-on-premise-tfs/</link><pubDate>Fri, 05 Jul 2013 15:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2013/07/deploying-on-azure-web-sites-from-on-premise-tfs/</guid><description>Many people asked me during course if the ability to automatically deploy to Windows Azure Web Sites is restricted only to those people that are using TF Service (TFS on the cloud), or if they can deploy with an on-premise installation of TFS.
The answer is clearly YES, and I strongly suggest you to watch the Continuous Deployment with Microsoft Visual Studio session of Brian Randell to have a deep explanation of all the possibilities you have to achieve automatic deployment of your applications from Team Foundation Server.</description></item><item><title>Continuous Deployment on Windows Azure with Database projects</title><link>https://www.codewrecks.com/post/old/2013/05/continuous-deployment-on-windows-azure-with-database-projects/</link><pubDate>Wed, 22 May 2013 06:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2013/05/continuous-deployment-on-windows-azure-with-database-projects/</guid><description>I’ve already blogged about Deploying on Azure Web Site with Database Project in the past, but in that article I showed how to accomplish it with customization of the Build Template. That technique is useful because quite often you need to run custom scripts or tools to do additional deploy related procedures to the site , but if your need is simply deploying schema change to an Azure Database with a Database Project you can accomplish it even without the need to touch the Build Workflow.</description></item><item><title>My blog moved to Windows Azure</title><link>https://www.codewrecks.com/post/old/2012/12/my-blog-moved-to-windows-azure/</link><pubDate>Fri, 28 Dec 2012 13:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2012/12/my-blog-moved-to-windows-azure/</guid><description>Actually it is a few days I’ve moved my blog to Windows Azure using Web Sites , still in Preview, but really stable. The only problem with my WordPress Site, is that I’m not able to use the automatic update of plugins, due to some problem in writing on the virtual file system, but apart from this little problem (I updated my plugin with standard FTP) I’m really satisfied of azure.</description></item></channel></rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Pills on Codewrecks</title><link>https://www.codewrecks.com/tags/pills/</link><description>Recent content in Pills on Codewrecks</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 05 Jan 2024 07:10:42 +0200</lastBuildDate><atom:link href="https://www.codewrecks.com/tags/pills/index.xml" rel="self" type="application/rss+xml"/><item><title>Resolving .NET8 SDK Resolver Failure in Azure DevOps Pipelines</title><link>https://www.codewrecks.com/post/azdo/pills/strange-error-building-net8/</link><pubDate>Fri, 05 Jan 2024 07:10:42 +0200</pubDate><guid>https://www.codewrecks.com/post/azdo/pills/strange-error-building-net8/</guid><description>I encountered a problem with a simple pipeline designed for building a .NET Core project, which I had recently updated to .NET8. After updating the pipeline file to use the new version of the SDK, I faced an unexpected issue: all builds started failing with this error.
##[error]src\Intranet\Jarvis.Common.Shared\Jarvis.Common.Shared.csproj(0,0): Error MSB4242: SDK Resolver Failure: &amp;#34;The SDK resolver &amp;#39;Microsoft.DotNet.MSBuildSdkResolver&amp;#39; failed while attempting to resolve the SDK &amp;#39;Microsoft.NET.Sdk&amp;#39;. Exception: &amp;#39;Microsoft.NET.Sdk.WorkloadManifestReader.WorkloadManifestCompositionException: Manifest provider Microsoft.NET.Sdk.WorkloadManifestReader.SdkDirectoryWorkloadManifestProvider returned a duplicate manifest ID &amp;#39;16.</description></item><item><title>Pills: Install release agent in ARM machines</title><link>https://www.codewrecks.com/post/azdo/pills/installing-release-agent-in-arm-machine/</link><pubDate>Fri, 27 Oct 2023 09:12:42 +0200</pubDate><guid>https://www.codewrecks.com/post/azdo/pills/installing-release-agent-in-arm-machine/</guid><description>With Azure Devops Environments you can register Virtual Machines with a dedicated agent that is capable of releasing your software. The procedure is simple, just create an environment, and a VM resource, and you are greeted with a minimal UI that let you choose configuration.
Figure 1: Configuring an agent for Azure DevOps environment
As you can see it just require you to select the operating system then you can copy in clipboard a simple script that you can execute in all machines you want to add in an environment.</description></item><item><title>Pills: Identify nuget packages with vulnerabilities</title><link>https://www.codewrecks.com/post/azdo/pills/nuget-packages-with-vulnerabilities/</link><pubDate>Fri, 27 Oct 2023 08:10:42 +0200</pubDate><guid>https://www.codewrecks.com/post/azdo/pills/nuget-packages-with-vulnerabilities/</guid><description>Managing references is easy with Nuget, however, from a security standpoint, it&amp;rsquo;s not straightforward to ensure your project&amp;rsquo;s security by upgrading vulnerable references. GitHub Dependabot does an excellent job flagging vulnerable references, and the entire GitHub ecosystem has a strong emphasis on security. This empowers developers to handle security in the packages they produce.
Recently, Visual Studio introduced a feature that immediately warns you if a package in your solution is insecure.</description></item><item><title>Modifying Azure DevOps Pipeline Decorators with Bing Chatbot Assistance</title><link>https://www.codewrecks.com/post/azdo/pills/pipeline-decorators-on-different-os/</link><pubDate>Tue, 29 Aug 2023 16:12:42 +0200</pubDate><guid>https://www.codewrecks.com/post/azdo/pills/pipeline-decorators-on-different-os/</guid><description>In the past, I&amp;rsquo;ve discussed using pipeline decorators to clean up build folders. Recently, I faced a challenge where I needed to modify my decorator to run only if there was a .git folder. To save time, I used Bing Chatbot, which leverages GPT powerful LLM and can search the internet to find latest contents, making this kind of problem-solving a breeze.
Figure 1: sample prompt asking to modify a piece of an Azure Devops pipeline</description></item><item><title>Pills: Azure Devops auto agents update</title><link>https://www.codewrecks.com/post/azdo/pills/auto-update-agents/</link><pubDate>Tue, 18 Jul 2023 08:10:42 +0200</pubDate><guid>https://www.codewrecks.com/post/azdo/pills/auto-update-agents/</guid><description>The ability to update Azure DevOps pipelines is a compelling feature, especially if you manage numerous on-premise agents. This feature eliminates maintenance issues by allowing all agents to be upgraded with just a single click.
Figure 1: One click update button
I have an agent that runs only when needed, and it&amp;rsquo;s slightly outdated. By simply clicking a button, I can prompt the server to update all the agents, and I&amp;rsquo;m sure that after seconds I&amp;rsquo;m running latest agent version.</description></item><item><title>Pills: npm private feeds and authentication</title><link>https://www.codewrecks.com/post/azdo/pills/vsts-npm-auth-problems/</link><pubDate>Wed, 17 May 2023 08:12:42 +0200</pubDate><guid>https://www.codewrecks.com/post/azdo/pills/vsts-npm-auth-problems/</guid><description>Have you ever encountered an issue obtaining an authentication token for your Azure DevOps npm package feed? Sometimes I got this
1 2 3 vsts-npm-auth v0.42.1.0 ----------------------- Couldn&amp;#39;t get an authentication token for https://pkgs.dev.azure.com/prxm/_packaging/JarvisNpmGood/npm/registry/. Private package feeds in Azure DevOps are incredibly useful, not just for Nuget packages, but for NPM as well. However you must follow the given instructions on the site to connect to your feed, and there will be times when you have to renew credentials.</description></item><item><title>Pills: Maximizing the Power of Tags in Azure DevOps</title><link>https://www.codewrecks.com/post/azdo/pills/azdo-tags/</link><pubDate>Mon, 08 May 2023 08:10:42 +0200</pubDate><guid>https://www.codewrecks.com/post/azdo/pills/azdo-tags/</guid><description>In Azure DevOps, using tags allows you to easily classify work items. Rather than using additional process fields, tags offer a high level of classification ease because any team member can add a label to a work item.
In effect, the result is the ability to create a horizontal taxonomy that&amp;rsquo;s common to all work items and likely common to all team projects, enabling efficient filtering and categorization of Work Items.</description></item><item><title>Pills: Conditional Pipeline decorators</title><link>https://www.codewrecks.com/post/azdo/pills/pipeline-decorators-conditional/</link><pubDate>Tue, 17 Jan 2023 00:12:42 +0200</pubDate><guid>https://www.codewrecks.com/post/azdo/pills/pipeline-decorators-conditional/</guid><description>Pipeline decorators are a really peculiar feature of Azure DevOps, because they allow you to specify a series of tasks that are run for EVERY pipeline in your organization, so they are rarely needed, but nevertheless they are a nice tool to know because there are situation when they are useful. Moreover, in latest Sprint 194 update they are expanded to support new functionalities, like running before or after specific tasks.</description></item><item><title>Pills: Backup your Azure DevOps server</title><link>https://www.codewrecks.com/post/azdo/pills/backup-your-azure-devops-server/</link><pubDate>Sat, 31 Dec 2022 07:10:42 +0200</pubDate><guid>https://www.codewrecks.com/post/azdo/pills/backup-your-azure-devops-server/</guid><description>Some days ago I got a call from a friend at customer site that experiences some problems with Azure DevOps server. The symptoms are strange server starts to become unresponsive, it is not possible even to login with Remote Desktop, it seems that there is some memory problem.
Being unable to diagnose by telephone the problem I suggest them to disable search services, sometimes it can happen that elastic search services consumes too much ram, since I did not have any other data, I suggests rebooting the machine forcibly from virtualization system and immediately connect with remote destop and disable elastic search service then try to better diagnose the problem.</description></item><item><title>Pills: Azure Devops pipeline Counters</title><link>https://www.codewrecks.com/post/azdo/pills/pipeline-counters/</link><pubDate>Wed, 21 Dec 2022 08:10:42 +0200</pubDate><guid>https://www.codewrecks.com/post/azdo/pills/pipeline-counters/</guid><description>Sometimes you need to have a unique number in your pipeline, usually this is needed to generate a unique version number as an example for publishing NuGet packages and avoid conflict. If you use Git (and there is no need to not use it) you can use GitVersion to generate a unique semver version number that is unique for each build. But if you are not using Git and GitVersion, or if you need to rebuild the same commit and have a unique version for each run, regardless of the commit you can use a Counter.</description></item><item><title>Pills: Azure Devops pipeline demands</title><link>https://www.codewrecks.com/post/azdo/pills/pipeline-demands/</link><pubDate>Mon, 19 Dec 2022 08:10:42 +0200</pubDate><guid>https://www.codewrecks.com/post/azdo/pills/pipeline-demands/</guid><description>Situation: You are waiting a pipeline to run, you view at the agent pool queue and notice that some of the agents are in idle, they are not running any pipeline, yet you have run that are waiting in queue.
You can have basically two reasons: the first one is you reached maximum number of parallel pipeline that can run on the pool, the second one is that the pipeline has some demands that are not satisfied by idle agents.</description></item><item><title>Azure DevOps Server: restart upgrade wizard</title><link>https://www.codewrecks.com/post/azdo/misc/restart-upgrade-wizard-azure-devops-server/</link><pubDate>Fri, 16 Dec 2022 06:00:00 +0200</pubDate><guid>https://www.codewrecks.com/post/azdo/misc/restart-upgrade-wizard-azure-devops-server/</guid><description>There are lots of reason why you have an on-premise installation of Azure DevOps, and if you manage it, you must devote some time to keep it upgraded to the latest version.
Keep your Azure DevOps server instance up to date constantly to avoid too big updates.
Upgrade procedures are really simple, you just launch the setup.exe from the latest version and follow the wizard. Actually not every person knows that the upgrade is basically a set of steps.</description></item><item><title>Pills: Visual Studio lost access to authenticated Nuget feed</title><link>https://www.codewrecks.com/post/azdo/pills/vs-lose-authentication-to-nuget-feed/</link><pubDate>Mon, 26 Sep 2022 08:12:42 +0200</pubDate><guid>https://www.codewrecks.com/post/azdo/pills/vs-lose-authentication-to-nuget-feed/</guid><description>The symptom is simple, you have a solution that uses some authenticated Nuget feed, like those hosted on Azure DevOps, suddenly Visual Studio stops authenticating and get a 401 error, or simply does not show any version of packages.
This is a problem that happens to some person recently and today was my turn. I have a build that published another version of a package to a private Azure DevOps feed and after publishing a new version, I start searching for that new version Visual Studio &amp;ldquo;manage nuget packages&amp;rdquo; but have no result.</description></item><item><title>Pills: Git command line failed to authenticate against Azure DevOps</title><link>https://www.codewrecks.com/post/azdo/pills/git-losing-credentials/</link><pubDate>Sat, 27 Aug 2022 07:10:42 +0200</pubDate><guid>https://www.codewrecks.com/post/azdo/pills/git-losing-credentials/</guid><description>Sometimes it just happens, you issue some Git command and you found that Azure DevOps deny Authentication, and it does not prompt for new credentials, so you are just stuck not being able to access your account anymore.
Figure 1: Git authentication failure
As you can see in Figure 1, you got an Authenticaiton Failed error, and you are not prompted for new credentials. Azure DevOps uses Personal Access Token to give access to Git, and this is done with an automatic procedure triggered by command line.</description></item><item><title>Pills: Azure Devops artifacts retention policy</title><link>https://www.codewrecks.com/post/azdo/pills/artifacts-retention-policy/</link><pubDate>Mon, 08 Aug 2022 08:10:42 +0200</pubDate><guid>https://www.codewrecks.com/post/azdo/pills/artifacts-retention-policy/</guid><description>When you use extensively Azure DevOps feeds, you will end with lots of small project that automatically publish packages at each build. I have projects where each commit will publish a package thanks to GitVersion that generates a unique number for each build. This will end in a situation where thousands of packages are generated and uploaded to Azure DevOps.
In Feed settings page you have a retention policy that will automatically deletes old packages but keep those ones that are recently used, to avoid removing a package that is still in use.</description></item><item><title>Pills: Pipeline decorators</title><link>https://www.codewrecks.com/post/azdo/pills/pipeline-decorators/</link><pubDate>Sat, 20 Nov 2021 08:12:42 +0200</pubDate><guid>https://www.codewrecks.com/post/azdo/pills/pipeline-decorators/</guid><description>Pipeline decorators are a really peculiar feature of Azure DevOps, because they allow you to specify a series of tasks that are run for EVERY pipeline in your organization, so they are rarely needed, but nevertheless they are a nice tool to know because there are situation when they are useful. Moreover, in latest Sprint 194 update they are expanded to support new functionalities, like running before or after specific tasks.</description></item><item><title>Azure DevOps Pills: Pull request template</title><link>https://www.codewrecks.com/post/azdo/pills/pull-request-template/</link><pubDate>Sun, 14 Nov 2021 08:12:42 +0200</pubDate><guid>https://www.codewrecks.com/post/azdo/pills/pull-request-template/</guid><description>Azure DevOps is a really big product and sometimes there are really useful features that are poorly publicized and goes under the radar. One of these is Pull Request Templates, a really useful feature that allows you to specify markdown template for your pull requests.
I do not want to go into technical details, you can find all instructions in official documentation but I&amp;rsquo;d like to point out why this feature is so useful.</description></item><item><title>Azure DevOps Pills: View progress in backlog</title><link>https://www.codewrecks.com/post/azdo/pills/progress-by-item/</link><pubDate>Sun, 29 Nov 2020 08:12:42 +0200</pubDate><guid>https://www.codewrecks.com/post/azdo/pills/progress-by-item/</guid><description>If you start managing your backlog with Azure Boards, you probably will end having Epics-&amp;gt;Features-&amp;gt;User stories breakdown and as manager you have a usual question to answer where are we on this epics or feature and when you expect it to be finished.
While this is not a simple question to answer looking only at the tool, you need to know that Azure Boards can give you a quick help visualizing completed work in a dedicated column.</description></item><item><title>Pills: Invoke-WebRequest really Slow</title><link>https://www.codewrecks.com/post/azdo/pills/powershell-download/</link><pubDate>Tue, 03 Nov 2020 22:12:42 +0200</pubDate><guid>https://www.codewrecks.com/post/azdo/pills/powershell-download/</guid><description>There are times when using Invoke-WebRequest in PowerShell is really slow, especially compared to a direct download in a browser. The answer is as always on StackOverflow in this post but for some reason approved answer is not my favorite.
Approved solution uses WebClient, it is perfectly valid, but other answer are more correct (and have more votes). In my opinion the real solution is disabling progress.
$ProgressPreference = &amp;#39;SilentlyContinue&amp;#39; This usually is enough to speedup Invoke-WebRequest without changing every single call to use WebClient.</description></item><item><title>Azure DevOps Pills: Update java in agent machines if you use SonarCloud integration</title><link>https://www.codewrecks.com/post/azdo/pills/update-java-for-sonarcloud-agents/</link><pubDate>Sat, 12 Sep 2020 12:12:42 +0200</pubDate><guid>https://www.codewrecks.com/post/azdo/pills/update-java-for-sonarcloud-agents/</guid><description>If you have Azure DevOps pipelines that uses SonarCloud analyzer, you should update java version for your agents if you are using version 8 because support is going to drop.
Figure 1: Warning message for old java version installed
You have not many days left to solve this issue before your builds starts failing because Sonar Cloud analyzer will no longer work. The solution is simple, you can simply download an updated version of Open JDK in all agent machines.</description></item><item><title>Azure DevOps Pills: Integration with SonarCloud</title><link>https://www.codewrecks.com/post/azdo/pills/sonarcloud-integration/</link><pubDate>Thu, 20 Aug 2020 08:12:42 +0200</pubDate><guid>https://www.codewrecks.com/post/azdo/pills/sonarcloud-integration/</guid><description>I&amp;rsquo;ve dealt in the past on how to integrate SonarCloud analysis in a TFS/AzDo pipeline but today it is time to update that post with some interesting nice capabilities.
If you look in Figure 1 you can see that now SonarCloud has a direct integration with Azure DevOps pull requests, all you need to do is add a Personal Access Token with code access privilege and you are ready to go.</description></item><item><title>Azure DevOps Pills: Process rules for state transition</title><link>https://www.codewrecks.com/post/azdo/pills/state-rules/</link><pubDate>Wed, 19 Aug 2020 08:12:42 +0200</pubDate><guid>https://www.codewrecks.com/post/azdo/pills/state-rules/</guid><description>One of the most requested feature for Azure DevOps is the ability to restrict state transition for custom processes. Whenever a company starts creating its own process, Work Item States is always a big area of discussions. Which state we need? Who can change state from X to Y? Until few weeks ago, only if you have Azure DevOps server with old process model based on XML you can restrict transition between states.</description></item></channel></rss>
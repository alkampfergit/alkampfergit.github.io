<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Pills on Codewrecks</title><link>https://www.codewrecks.com/tags/pills/</link><description>Recent content in Pills on Codewrecks</description><generator>Hugo</generator><language>en</language><lastBuildDate>Tue, 11 Feb 2025 08:00:00 +0200</lastBuildDate><atom:link href="https://www.codewrecks.com/tags/pills/index.xml" rel="self" type="application/rss+xml"/><item><title>Understanding Azure DevOps Pipeline Statistics</title><link>https://www.codewrecks.com/post/azdo/pills/pipeline-statistics-dashboard/</link><pubDate>Tue, 11 Feb 2025 08:00:00 +0200</pubDate><guid>https://www.codewrecks.com/post/azdo/pills/pipeline-statistics-dashboard/</guid><description>&lt;p>Pipeline statistics in Azure DevOps provide a wealth of information that can help you understand the &lt;strong>performance and efficiency of your pipelines&lt;/strong>. Even with really basic informations you can have interesting information. Lets examine&lt;/p>
&lt;p>&lt;a target="_blank" href="../images/pipeline-statistics-dashboard.png"> &lt;img src="../images/pipeline-statistics-dashboard.png" alt="Pipeline statistics dashboard in Azure DevOps" />&lt;/a>&lt;/p>
&lt;p>&lt;em>&lt;strong>Figure 1&lt;/strong>&lt;/em>: &lt;em>Pipeline statistics dashboard in Azure DevOps&lt;/em>&lt;/p>
&lt;p>My favorite information (1) is the 80th percentile of pipeline duration, this indicates me &lt;strong>if for some reason some pipeline is becoming slower&lt;/strong>. Actually in &lt;strong>Figure 1&lt;/strong> I can see that seems to be an increase in pipeline duration. &lt;strong>With (2) you can immediately understand which is the step that predates the execution time&lt;/strong>. In this example it is not a mistery, the IN-PROCESS step is actually running a full suite of integration test that uses MongoDB, Elasticsearch, and a complex software end-to-end without the UI.&lt;/p></description></item><item><title>Azure DevOps Pills: Hide not used features from Team Projects</title><link>https://www.codewrecks.com/post/azdo/pills/hide-not-used-feature/</link><pubDate>Tue, 21 Jan 2025 08:12:42 +0200</pubDate><guid>https://www.codewrecks.com/post/azdo/pills/hide-not-used-feature/</guid><description>&lt;p>Azure DevOps is a really complete set of functionalities to manage your Development Team and more. As you can see from Figure 1, it has five main Macro Set of Features that you can use. All these features are visible in the &lt;strong>five icons in the lower right part of the card of each Team Project&lt;/strong>&lt;/p>
&lt;p>&lt;a target="_blank" href="../images/azdo-blocks.png"> &lt;img src="../images/azdo-blocks.png" alt="AzDo five main features blocks" />&lt;/a>&lt;/p>
&lt;p>&lt;em>&lt;strong>Figure 1:&lt;/strong>&lt;/em> &lt;em>AzDo five main features blocks&lt;/em>&lt;/p>
&lt;p>The very same five macro Feature set is visible on the left menu when you work with the detail of the Team Project. These part are, left to right&lt;/p></description></item><item><title>Azure DevOps Pills: Differences between old and new release pipeline</title><link>https://www.codewrecks.com/post/azdo/pills/release-new-and-old/</link><pubDate>Sun, 05 Jan 2025 08:12:42 +0200</pubDate><guid>https://www.codewrecks.com/post/azdo/pills/release-new-and-old/</guid><description>&lt;p>Happy New Year to everyone. Today I&amp;rsquo;ll deal with a common question I got from customer regarding Azure DevOps release pipeline. The problem arise because &lt;strong>we already had a GUI based pipeline in the past and then we had a fully YAML pipeline&lt;/strong> so people are somewhat puzzled on which one to use in their scenario.&lt;/p>
&lt;blockquote>
&lt;p>When you have two way to do the same thing you are often confused on which tool to use to reach your goal&lt;/p></description></item><item><title>Azure DevOps Pills: Cleanup on premise pipeline agents</title><link>https://www.codewrecks.com/post/azdo/pills/cleanup-build-agent/</link><pubDate>Mon, 02 Dec 2024 08:00:42 +0200</pubDate><guid>https://www.codewrecks.com/post/azdo/pills/cleanup-build-agent/</guid><description>&lt;p>Managing pipeline/build agents is something that &lt;strong>you should avoid if possible, preferring &lt;a href="https://www.codewrecks.com/post/old/2019/12/azure-devops-agent-with-docker-compose/">docker based agents&lt;/a> or Microsoft hosted agents&lt;/strong>. Sometimes this is not a viable options, especially if you have lots of integration tests, that runs on mongodb/elasticsearch/etc etc. While it &lt;strong>is quite simple to create a pipeline that uses docker to run these prerequisites&lt;/strong> speed is sometimes a problem that makes this solution not so feasible.&lt;/p>
&lt;p>Azure DevOps has a cost for pipeline that is based on concurrent execution, so it is quite &lt;strong>important that pipelines run fast to use less license but, more important, to give a quick feedback to the team&lt;/strong>. For this reason, we use physical machines, with quick NVMe Disks, RAM and Mongodb / Elastic / SQL installed on bare metal for maximum speed for integration tests.&lt;/p></description></item><item><title>Pills: Accessing your Git Repositories in Azure DevOps in Linux</title><link>https://www.codewrecks.com/post/azdo/pills/accessing-git-from-linux/</link><pubDate>Mon, 18 Nov 2024 08:10:42 +0200</pubDate><guid>https://www.codewrecks.com/post/azdo/pills/accessing-git-from-linux/</guid><description>&lt;p>When you need to access your Git Repositories hosted on Azure DevOps in Linux, you have basically two distinct options.&lt;/p>
&lt;p>The first one is the classic &lt;strong>ssh protocol, that is well know to everyone working with linux systems&lt;/strong>.&lt;/p>
&lt;p>&lt;a target="_blank" href="../images/ssh-clone.png"> &lt;img src="../images/ssh-clone.png" alt="Choosing SSH as protocol to clone from Azure DevOps" />&lt;/a>&lt;/p>
&lt;p>&lt;em>&lt;strong>Figure 1&lt;/strong>&lt;/em>: &lt;em>Choosing SSH as protocol to clone from Azure DevOps&lt;/em>&lt;/p>
&lt;p>This is the preferred way to access &lt;strong>from linux system&lt;/strong> but sadly, Azure DevOps still not support Hardware Key based SSh keys, so you are &lt;strong>limited to use standard RSA keys&lt;/strong> as you can see in &lt;strong>Figure 2&lt;/strong>. Actually this is quite a limitation for those used to Yubikeys or Google Titan keys.&lt;/p></description></item><item><title>Pills: Connect Azdo to external software</title><link>https://www.codewrecks.com/post/azdo/pills/connect-azdo-to-external-software/</link><pubDate>Mon, 21 Oct 2024 06:10:42 +0200</pubDate><guid>https://www.codewrecks.com/post/azdo/pills/connect-azdo-to-external-software/</guid><description>&lt;p>In our team, everything regarding developing is kept in Azure DevOps, but other informations are stored inside a custom software, so we &lt;strong>often have the need to jump between a system and the other one&lt;/strong>. The actual connection is, one element in our software is bound to one or more Work Items in Azure DevOps.&lt;/p>
&lt;blockquote>
&lt;p>Desired result is: Ability to easily create a connection between the two, reduce the need to jump between the two system to see key information.&lt;/p></description></item><item><title>Pills: Enhancing Azure DevOps WorkItems with Hyperlinking to External Documentation</title><link>https://www.codewrecks.com/post/azdo/pills/use-hyperlink-link-type/</link><pubDate>Tue, 12 Mar 2024 08:12:42 +0200</pubDate><guid>https://www.codewrecks.com/post/azdo/pills/use-hyperlink-link-type/</guid><description>&lt;p>A frequently overlooked feature that can significantly enhance functionality in Azure DevOps is the &lt;strong>ability to attach links to a WorkItem&lt;/strong>. A common question among users is: &amp;ldquo;Can I manage documentation in tools like SharePoint and then easily link it to my project in Azure DevOps?&amp;rdquo; This query arises because there&amp;rsquo;s often a limitation on how much text can be written directly into a WorkItem, and it&amp;rsquo;s convenient to attach documentation.&lt;/p></description></item><item><title>Pills: What to do when dotnet restore failed with 401 against an internal feed</title><link>https://www.codewrecks.com/post/azdo/pills/problem-using-internal-nuget-feed-by-powershell/</link><pubDate>Fri, 23 Feb 2024 08:10:42 +0200</pubDate><guid>https://www.codewrecks.com/post/azdo/pills/problem-using-internal-nuget-feed-by-powershell/</guid><description>&lt;p>This is an argument I&amp;rsquo;ve already discussed in the past in &lt;a href="https://www.codewrecks.com/post/azdo/pipeline/nuget-feed-authenticate/">A post about nuget authentication&lt;/a>. From a couple of days, in a project I&amp;rsquo;m working into the service started to return 401 even with the technique described in the aforementioned post.&lt;/p>
&lt;p>The sympthom is this error in the script that executed &lt;code>dotnet restore&lt;/code> command.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plaintext" data-lang="plaintext">&lt;span style="display:flex;">&lt;span> Unable to load the service index for source https://pkgs.dev.azure.com/organizaion/_packaging/FeedName@Local/nuget/v3/index.json.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Response status code does not indicate success: 401
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>In such a situation here is what you need to do to try to solve the problem.&lt;/p></description></item><item><title>Pills: Exploring Agent Options in Azure DevOps Pipelines: Managed vs. Self-Hosted</title><link>https://www.codewrecks.com/post/azdo/pills/do-i-need-to-deploy-my-agents/</link><pubDate>Thu, 01 Feb 2024 08:10:42 +0200</pubDate><guid>https://www.codewrecks.com/post/azdo/pills/do-i-need-to-deploy-my-agents/</guid><description>&lt;p>When configuring Azure DevOps pipelines, developers have a choice to make regarding the execution environment for their pipelines: they can either leverage &lt;strong>Microsoft-managed agents provided in Azure or opt to self-host agents on their own infrastructure&lt;/strong>, whether that be on-premises virtual machines or cloud-based instances. One of the first question that arise is: which I need to use for my organization? Let&amp;rsquo;s explore the pro and cons of each option.&lt;/p></description></item><item><title>Pills: Do not miss repository policies in Azure DevOps</title><link>https://www.codewrecks.com/post/azdo/pills/repository-policies-for-branches/</link><pubDate>Fri, 19 Jan 2024 08:10:42 +0200</pubDate><guid>https://www.codewrecks.com/post/azdo/pills/repository-policies-for-branches/</guid><description>&lt;p>If you use Azure DevOps, it&amp;rsquo;s worth &lt;strong>checking in repository settings page all the settings related to the policies of the repository itself&lt;/strong>. This is because often this type of setting is completely ignored, and you lose the opportunity to have very important controls on the repository itself.&lt;/p>
&lt;p>As you can see in Figure 1, there are many interesting policies that can help your team to keep a nice and healty repository.&lt;/p></description></item><item><title>Resolving .NET8 SDK Resolver Failure in Azure DevOps Pipelines</title><link>https://www.codewrecks.com/post/azdo/pills/strange-error-building-net8/</link><pubDate>Fri, 05 Jan 2024 07:10:42 +0200</pubDate><guid>https://www.codewrecks.com/post/azdo/pills/strange-error-building-net8/</guid><description>&lt;p>I encountered a problem with a simple pipeline designed for building a .NET Core project, which I had recently updated to .NET8. After updating the pipeline file to use the new version of the SDK, I faced an unexpected issue: &lt;strong>all builds started failing with this error&lt;/strong>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>##[error]src\Intranet\Jarvis.Common.Shared\Jarvis.Common.Shared.csproj(0,0): Error MSB4242: SDK Resolver Failure: &amp;#34;The SDK resolver &amp;#39;Microsoft.DotNet.MSBuildSdkResolver&amp;#39; failed while attempting to resolve the SDK &amp;#39;Microsoft.NET.Sdk&amp;#39;. Exception: &amp;#39;Microsoft.NET.Sdk.WorkloadManifestReader.WorkloadManifestCompositionException: Manifest provider Microsoft.NET.Sdk.WorkloadManifestReader.SdkDirectoryWorkloadManifestProvider returned a duplicate manifest ID &amp;#39;16.4.8968-net8-rc2&amp;#39;.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I was really puzzled because I had the same SDK directory on my computer, and it was workgin without any issues, &lt;strong>but failing on that build server&lt;/strong>.&lt;/p></description></item><item><title>Pills: Install release agent in ARM machines</title><link>https://www.codewrecks.com/post/azdo/pills/installing-release-agent-in-arm-machine/</link><pubDate>Fri, 27 Oct 2023 09:12:42 +0200</pubDate><guid>https://www.codewrecks.com/post/azdo/pills/installing-release-agent-in-arm-machine/</guid><description>&lt;p>With Azure Devops Environments you can register Virtual Machines with a dedicated agent that is capable of releasing your software. The procedure is simple, &lt;strong>just create an environment, and a VM resource, and you are greeted with a minimal UI that let you choose configuration&lt;/strong>.&lt;/p>
&lt;p>&lt;a target="_blank" href="../images/configure-agent.png"> &lt;img src="../images/configure-agent.png" alt="Configuring an agent for Azure DevOps environment" />&lt;/a>&lt;/p>
&lt;p>&lt;em>&lt;strong>Figure 1&lt;/strong>&lt;/em>: &lt;em>Configuring an agent for Azure DevOps environment&lt;/em>&lt;/p>
&lt;p>As you can see it just require you to select the operating system then you can &lt;strong>copy in clipboard a simple script that you can execute in all machines you want to add in an environment&lt;/strong>. You need to have sudo rights to execute the script but running on ARM machine I got this.&lt;/p></description></item><item><title>Pills: Identify nuget packages with vulnerabilities</title><link>https://www.codewrecks.com/post/azdo/pills/nuget-packages-with-vulnerabilities/</link><pubDate>Fri, 27 Oct 2023 08:10:42 +0200</pubDate><guid>https://www.codewrecks.com/post/azdo/pills/nuget-packages-with-vulnerabilities/</guid><description>&lt;p>Managing references is easy with Nuget, however, &lt;strong>from a security standpoint, it&amp;rsquo;s not straightforward to ensure your project&amp;rsquo;s security by upgrading vulnerable references&lt;/strong>. GitHub Dependabot does an excellent job flagging vulnerable references, and the entire GitHub ecosystem has a strong emphasis on security. This empowers developers to handle security in the packages they produce.&lt;/p>
&lt;p>Recently, &lt;strong>Visual Studio introduced a feature that immediately warns you if a package in your solution is insecure&lt;/strong>. You can also filter your installed packages to display only those with vulnerabilities.&lt;/p></description></item><item><title>Modifying Azure DevOps Pipeline Decorators with Bing Chatbot Assistance</title><link>https://www.codewrecks.com/post/azdo/pills/pipeline-decorators-on-different-os/</link><pubDate>Tue, 29 Aug 2023 16:12:42 +0200</pubDate><guid>https://www.codewrecks.com/post/azdo/pills/pipeline-decorators-on-different-os/</guid><description>&lt;p>In the past, I&amp;rsquo;ve discussed using pipeline decorators to clean up build folders. Recently, I faced a challenge where &lt;strong>I needed to modify my decorator to run only if there was a &lt;code>.git&lt;/code> folder&lt;/strong>. To save time, I used Bing Chatbot, which leverages GPT powerful LLM and can search the internet to find latest contents, making this kind of problem-solving a breeze.&lt;/p>
&lt;p>&lt;a target="_blank" href="../images/bing-question.png"> &lt;img src="../images/bing-question.png" alt="sample prompt asking to modify a piece of an Azure Devops pipeline" />&lt;/a>&lt;/p></description></item><item><title>Pills: Azure Devops auto agents update</title><link>https://www.codewrecks.com/post/azdo/pills/auto-update-agents/</link><pubDate>Tue, 18 Jul 2023 08:10:42 +0200</pubDate><guid>https://www.codewrecks.com/post/azdo/pills/auto-update-agents/</guid><description>&lt;p>The ability to update Azure DevOps pipelines is a compelling feature, especially if you manage numerous on-premise agents. This feature eliminates maintenance issues by &lt;strong>allowing all agents to be upgraded with just a single click&lt;/strong>.&lt;/p>
&lt;p>&lt;a target="_blank" href="../images/image1.png"> &lt;img src="../images/image1.png" alt="One click update button" />&lt;/a>
&lt;em>&lt;strong>Figure 1&lt;/strong>&lt;/em>: &lt;em>One click update button&lt;/em>&lt;/p>
&lt;p>I have an agent that runs only when needed, and it&amp;rsquo;s slightly outdated. By simply clicking a button, I can prompt the server to update all the agents, and I&amp;rsquo;m sure that &lt;strong>after seconds I&amp;rsquo;m running latest agent version&lt;/strong>.&lt;/p></description></item><item><title>Pills: npm private feeds and authentication</title><link>https://www.codewrecks.com/post/azdo/pills/vsts-npm-auth-problems/</link><pubDate>Wed, 17 May 2023 08:12:42 +0200</pubDate><guid>https://www.codewrecks.com/post/azdo/pills/vsts-npm-auth-problems/</guid><description>&lt;p>Have you ever encountered an issue obtaining an authentication token for your Azure DevOps npm package feed? Sometimes I got this&lt;/p>
&lt;div class="highlight">&lt;div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>vsts-npm-auth v0.42.1.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-----------------------
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Couldn&amp;#39;t get an authentication token for https://pkgs.dev.azure.com/prxm/_packaging/JarvisNpmGood/npm/registry/.&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;p>Private package feeds in Azure DevOps are incredibly useful, not just for Nuget packages, but for NPM as well. However &lt;strong>you must follow the given instructions on the site to connect to your feed, and there will be times when you have to renew credentials.&lt;/strong> The problem is that npm feed in Azure Devops are usually private and under authentication/authorization. For this reason you need to install a special package to allow authentication. &lt;a href="https://www.npmjs.com/package/vsts-npm-auth">You can download tool here&lt;/a>.&lt;/p></description></item><item><title>Pills: Maximizing the Power of Tags in Azure DevOps</title><link>https://www.codewrecks.com/post/azdo/pills/azdo-tags/</link><pubDate>Mon, 08 May 2023 08:10:42 +0200</pubDate><guid>https://www.codewrecks.com/post/azdo/pills/azdo-tags/</guid><description>&lt;p>In Azure DevOps, &lt;strong>using tags allows you to easily classify work items&lt;/strong>. Rather than using additional process fields, tags offer a high level of classification ease because any team member can add a label to a work item.&lt;/p>
&lt;p>In effect, the result &lt;strong>is the ability to create a horizontal taxonomy that&amp;rsquo;s common to all work items and likely common to all team projects&lt;/strong>, enabling efficient filtering and categorization of Work Items.&lt;/p></description></item><item><title>Pills: Conditional Pipeline decorators</title><link>https://www.codewrecks.com/post/azdo/pills/pipeline-decorators-conditional/</link><pubDate>Tue, 17 Jan 2023 00:12:42 +0200</pubDate><guid>https://www.codewrecks.com/post/azdo/pills/pipeline-decorators-conditional/</guid><description>&lt;p>&lt;a href="https://www.codewrecks.com/post/azdo/pills/pipeline-decorators/">Pipeline decorators&lt;/a> are a really peculiar feature of Azure DevOps, because they allow you to &lt;strong>specify a series of tasks that are run for EVERY pipeline in your organization&lt;/strong>, so they are rarely needed, but nevertheless they are a nice tool to know because there are situation when they are useful. Moreover, in latest &lt;a href="https://docs.microsoft.com/en-us/azure/devops/release-notes/2021/sprint-194-update">Sprint 194 update&lt;/a> they are expanded to support new functionalities, like running &lt;strong>before or after specific tasks&lt;/strong>.&lt;/p></description></item><item><title>Pills: Backup your Azure DevOps server</title><link>https://www.codewrecks.com/post/azdo/pills/backup-your-azure-devops-server/</link><pubDate>Sat, 31 Dec 2022 07:10:42 +0200</pubDate><guid>https://www.codewrecks.com/post/azdo/pills/backup-your-azure-devops-server/</guid><description>&lt;p>Some days ago I got a call from a friend at customer site that experiences some problems with Azure DevOps server. The symptoms are strange &lt;strong>server starts to become unresponsive, it is not possible even to login with Remote Desktop, it seems that there is some memory problem&lt;/strong>.&lt;/p>
&lt;p>Being unable to diagnose by telephone the problem I suggest them to disable search services, sometimes it can happen that elastic search services consumes too much ram, &lt;strong>since I did not have any other data, I suggests rebooting the machine forcibly from virtualization system and immediately connect with remote destop and disable elastic search service&lt;/strong> then try to better diagnose the problem.&lt;/p></description></item><item><title>Pills: Azure Devops pipeline Counters</title><link>https://www.codewrecks.com/post/azdo/pills/pipeline-counters/</link><pubDate>Wed, 21 Dec 2022 08:10:42 +0200</pubDate><guid>https://www.codewrecks.com/post/azdo/pills/pipeline-counters/</guid><description>&lt;p>Sometimes you need to have a unique number in your pipeline, usually this is needed to &lt;strong>generate a unique version number as an example for publishing NuGet packages and avoid conflict&lt;/strong>. If you use Git (and there is no need to not use it) you can use &lt;a href="https://gitversion.net/docs/">GitVersion&lt;/a> to generate &lt;strong>a unique semver version number that is unique for each build&lt;/strong>. But if you are not using Git and GitVersion, or if you need to rebuild the same commit and have a &lt;strong>unique version for each run, regardless of the commit&lt;/strong> you can use a Counter.&lt;/p></description></item><item><title>Pills: Azure Devops pipeline demands</title><link>https://www.codewrecks.com/post/azdo/pills/pipeline-demands/</link><pubDate>Mon, 19 Dec 2022 08:10:42 +0200</pubDate><guid>https://www.codewrecks.com/post/azdo/pills/pipeline-demands/</guid><description>&lt;p>Situation: You are waiting a pipeline to run, you view at the agent pool queue and notice that some of the agents are in idle, &lt;strong>they are not running any pipeline, yet you have run that are waiting in queue&lt;/strong>.&lt;/p>
&lt;p>You can have basically two reasons: the first one is you reached maximum number of parallel pipeline that can run on the pool, the second one is that &lt;strong>the pipeline has some demands that are not satisfied by idle agents&lt;/strong>. Troubleshooting demands can be annoying, but basically it is just matter of verifying the tasks that are present in the pipeline and check if all agents have required demands.&lt;/p></description></item><item><title>Azure DevOps Server: restart upgrade wizard</title><link>https://www.codewrecks.com/post/azdo/misc/restart-upgrade-wizard-azure-devops-server/</link><pubDate>Fri, 16 Dec 2022 06:00:00 +0200</pubDate><guid>https://www.codewrecks.com/post/azdo/misc/restart-upgrade-wizard-azure-devops-server/</guid><description>&lt;p>There are lots of reason why you have an &lt;strong>on-premise installation of Azure DevOps&lt;/strong>, and if you manage it, you must devote some time to keep it upgraded to the latest version.&lt;/p>
&lt;blockquote>
&lt;p>Keep your Azure DevOps server instance up to date constantly to avoid too big updates.&lt;/p>&lt;/blockquote>
&lt;p>Upgrade procedures are really simple, you just &lt;strong>launch the setup.exe from the latest version and follow the wizard&lt;/strong>. Actually not every person knows that the upgrade is basically a set of steps.&lt;/p></description></item><item><title>Pills: Visual Studio lost access to authenticated Nuget feed</title><link>https://www.codewrecks.com/post/azdo/pills/vs-lose-authentication-to-nuget-feed/</link><pubDate>Mon, 26 Sep 2022 08:12:42 +0200</pubDate><guid>https://www.codewrecks.com/post/azdo/pills/vs-lose-authentication-to-nuget-feed/</guid><description>&lt;p>The symptom is simple, you have a solution &lt;strong>that uses some authenticated Nuget feed&lt;/strong>, like those hosted on Azure DevOps, suddenly Visual Studio stops authenticating and get a 401 error, or simply does not show any version of packages.&lt;/p>
&lt;p>This is a problem that happens to some person recently and today was my turn. I have a build that published &lt;strong>another version of a package to a private Azure DevOps feed&lt;/strong> and after publishing a new version, I start searching for that new version Visual Studio &amp;ldquo;manage nuget packages&amp;rdquo; but have no result. The thing that makes you understand that you have a major problem is that VS &lt;strong>does not list any version except the one installed&lt;/strong>&lt;/p></description></item><item><title>Pills: Git command line failed to authenticate against Azure DevOps</title><link>https://www.codewrecks.com/post/azdo/pills/git-losing-credentials/</link><pubDate>Sat, 27 Aug 2022 07:10:42 +0200</pubDate><guid>https://www.codewrecks.com/post/azdo/pills/git-losing-credentials/</guid><description>&lt;p>Sometimes it just happens, you issue some Git command and you found that Azure DevOps deny Authentication, and it does not prompt for new credentials, so you are &lt;strong>just stuck not being able to access your account anymore&lt;/strong>.&lt;/p>
&lt;p>&lt;a target="_blank" href="../images/git-authentication-failed.png"> &lt;img src="../images/git-authentication-failed.png" alt="Git authentication failure" />&lt;/a>&lt;/p>
&lt;p>&lt;em>&lt;strong>Figure 1&lt;/strong>&lt;/em>: &lt;em>Git authentication failure&lt;/em>&lt;/p>
&lt;p>As you can see in Figure 1, you got an Authenticaiton Failed error, and you are not prompted for new credentials. &lt;strong>Azure DevOps uses Personal Access Token to give access to Git, and this is done with an automatic procedure triggered by command line&lt;/strong>. In Figure 2 you can see Credential Manager Windows that appears the first time you are connecting to an Azure DevOps server.&lt;/p></description></item><item><title>Pills: Azure Devops artifacts retention policy</title><link>https://www.codewrecks.com/post/azdo/pills/artifacts-retention-policy/</link><pubDate>Mon, 08 Aug 2022 08:10:42 +0200</pubDate><guid>https://www.codewrecks.com/post/azdo/pills/artifacts-retention-policy/</guid><description>&lt;p>When you use extensively Azure DevOps feeds, you will end with lots of small project that automatically publish packages at each build. I have projects where &lt;strong>each commit will publish a package thanks to GitVersion that generates a unique number for each build&lt;/strong>. This will end in a situation where thousands of packages are generated and uploaded to Azure DevOps.&lt;/p>
&lt;p>In Feed settings page you have a &lt;strong>retention policy&lt;/strong> that will automatically deletes old packages but keep those ones that are recently used, to avoid removing a package that is still in use.&lt;/p></description></item><item><title>Pills: Pipeline decorators</title><link>https://www.codewrecks.com/post/azdo/pills/pipeline-decorators/</link><pubDate>Sat, 20 Nov 2021 08:12:42 +0200</pubDate><guid>https://www.codewrecks.com/post/azdo/pills/pipeline-decorators/</guid><description>&lt;p>Pipeline decorators are a really peculiar feature of Azure DevOps, because they allow you to &lt;strong>specify a series of tasks that are run for EVERY pipeline in your organization&lt;/strong>, so they are rarely needed, but nevertheless they are a nice tool to know because there are situation when they are useful. Moreover, in latest &lt;a href="https://docs.microsoft.com/en-us/azure/devops/release-notes/2021/sprint-194-update">Sprint 194 update&lt;/a> they are expanded to support new functionalities, like running &lt;strong>before or after specific tasks&lt;/strong>.&lt;/p></description></item><item><title>Azure DevOps Pills: Pull request template</title><link>https://www.codewrecks.com/post/azdo/pills/pull-request-template/</link><pubDate>Sun, 14 Nov 2021 08:12:42 +0200</pubDate><guid>https://www.codewrecks.com/post/azdo/pills/pull-request-template/</guid><description>&lt;p>Azure DevOps is a really big product and sometimes there are really useful features that are poorly publicized and goes under the radar. One of these is &lt;a href="https://docs.microsoft.com/en-us/azure/devops/repos/git/pull-request-templates?view=azure-devops">Pull Request Templates&lt;/a>, a really useful feature that allows you &lt;strong>to specify markdown template for your pull requests&lt;/strong>.&lt;/p>
&lt;p>I do not want to go into technical details, you can find &lt;a href="https://docs.microsoft.com/en-us/azure/devops/repos/git/pull-request-templates?view=azure-devops">all instructions in official documentation&lt;/a> but I&amp;rsquo;d like to point out why this feature is so useful.&lt;/p></description></item><item><title>Azure DevOps Pills: View progress in backlog</title><link>https://www.codewrecks.com/post/azdo/pills/progress-by-item/</link><pubDate>Sun, 29 Nov 2020 08:12:42 +0200</pubDate><guid>https://www.codewrecks.com/post/azdo/pills/progress-by-item/</guid><description>&lt;p>If you start managing your backlog with Azure Boards, you probably will end having Epics-&amp;gt;Features-&amp;gt;User stories breakdown and as manager you have a usual question to answer &lt;strong>where are we on this epics or feature and when you expect it to be finished&lt;/strong>.&lt;/p>
&lt;p>While this is not a simple question to answer looking only at the tool, you need to know that Azure Boards can give you a &lt;strong>quick help visualizing completed work in a dedicated column&lt;/strong>.&lt;/p></description></item><item><title>Pills: Invoke-WebRequest really Slow</title><link>https://www.codewrecks.com/post/azdo/pills/powershell-download/</link><pubDate>Tue, 03 Nov 2020 22:12:42 +0200</pubDate><guid>https://www.codewrecks.com/post/azdo/pills/powershell-download/</guid><description>&lt;p>There are times when using Invoke-WebRequest in PowerShell is really slow, especially compared to a direct download in a browser. The answer is as always on &lt;a href="https://stackoverflow.com/questions/28682642/powershell-why-is-using-invoke-webrequest-much-slower-than-a-browser-download">StackOverflow in this post&lt;/a> but for some reason approved answer is not my favorite.&lt;/p>
&lt;p>Approved solution uses WebClient, &lt;strong>it is perfectly valid, but other answer are more correct&lt;/strong> (and have more votes). In my opinion the real solution is disabling progress.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>$ProgressPreference = &lt;span style="color:#e6db74">&amp;#39;SilentlyContinue&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This usually is enough to speedup Invoke-WebRequest without changing every single call to use WebClient.&lt;/p></description></item><item><title>Azure DevOps Pills: Update java in agent machines if you use SonarCloud integration</title><link>https://www.codewrecks.com/post/azdo/pills/update-java-for-sonarcloud-agents/</link><pubDate>Sat, 12 Sep 2020 12:12:42 +0200</pubDate><guid>https://www.codewrecks.com/post/azdo/pills/update-java-for-sonarcloud-agents/</guid><description>&lt;p>If you have Azure DevOps pipelines that uses SonarCloud analyzer, you should update java version for your agents if you are using version 8 because support is going to drop.&lt;/p>
&lt;p>&lt;a target="_blank" href="../images/java-out-to-datepng.png"> &lt;img src="../images/java-out-to-datepng.png" alt="Warning message for old java version installed" />&lt;/a>
&lt;em>&lt;strong>Figure 1&lt;/strong>&lt;/em>: &lt;em>Warning message for old java version installed&lt;/em>&lt;/p>
&lt;p>You have not many days left to solve this issue before your builds &lt;strong>starts failing because Sonar Cloud analyzer will no longer work&lt;/strong>. The solution is simple, you can simply download an updated version of Open JDK in all agent machines. To check actual java version used you can simply check the JAVA_HOME capability directly in agent administration page.&lt;/p></description></item><item><title>Azure DevOps Pills: Integration with SonarCloud</title><link>https://www.codewrecks.com/post/azdo/pills/sonarcloud-integration/</link><pubDate>Thu, 20 Aug 2020 08:12:42 +0200</pubDate><guid>https://www.codewrecks.com/post/azdo/pills/sonarcloud-integration/</guid><description>&lt;p>I&amp;rsquo;ve dealt in the past on &lt;a href="http://www.codewrecks.com/blog/index.php/2018/10/10/azure-devops-pipelines-and-sonar-cloud-gives-free-analysis-to-your-os-project/">how to integrate SonarCloud analysis in a TFS/AzDo pipeline&lt;/a> but today it is time to update that post with some interesting nice capabilities.&lt;/p>
&lt;p>If you look in Figure 1 you can see that &lt;strong>now SonarCloud has a direct integration with Azure DevOps pull requests&lt;/strong>, all you need to do is add a Personal Access Token with code access privilege and you are ready to go.&lt;/p></description></item><item><title>Azure DevOps Pills: Process rules for state transition</title><link>https://www.codewrecks.com/post/azdo/pills/state-rules/</link><pubDate>Wed, 19 Aug 2020 08:12:42 +0200</pubDate><guid>https://www.codewrecks.com/post/azdo/pills/state-rules/</guid><description>&lt;p>One of the most requested feature for Azure DevOps is the ability to restrict state transition for custom processes. Whenever a company starts creating its own process, Work Item States is always a big area of discussions. Which state we need? Who can change state from X to Y? &lt;strong>Until few weeks ago, only if you have Azure DevOps server with old process model based on XML you can restrict transition between states. Now this feature is available even for cloud version.&lt;/strong>&lt;/p></description></item></channel></rss>
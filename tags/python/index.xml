<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python on Codewrecks</title><link>https://www.codewrecks.com/tags/python/</link><description>Recent content in Python on Codewrecks</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sat, 10 Oct 2020 08:00:00 +0200</lastBuildDate><atom:link href="https://www.codewrecks.com/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>Pip and Python in Visual Studio Code</title><link>https://www.codewrecks.com/post/general/pip-and-python-in-vscode/</link><pubDate>Sat, 10 Oct 2020 08:00:00 +0200</pubDate><guid>https://www.codewrecks.com/post/general/pip-and-python-in-vscode/</guid><description>&lt;p>I&amp;rsquo;m not a Python expert, but I used it more often these days and I use Visual Studio Code with Python extension to author my scripts. One of the most annoying problem is &lt;strong>receiving a no module named xxx error when you already installed that module with pip&lt;/strong>.&lt;/p>
&lt;p>&lt;a target="_blank" href="../images/python-no-module-error.png"> &lt;img src="../images/python-no-module-error.png" alt="No module error when running Python code in Visual Studio Code" />&lt;/a>
&lt;em>&lt;strong>Figure 1:&lt;/strong>&lt;/em> &lt;em>No module error when running Python code in Visual Studio Code&lt;/em>&lt;/p></description></item><item><title>Sonar Analysis of Python with Azure DevOps pipeline</title><link>https://www.codewrecks.com/post/old/2019/01/sonar-analysis-of-python-with-azure-devops-pipeline/</link><pubDate>Sat, 05 Jan 2019 11:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2019/01/sonar-analysis-of-python-with-azure-devops-pipeline/</guid><description>&lt;p>Once you have &lt;a href="http://www.codewrecks.com/blog/index.php/2018/11/20/run-code-coverage-for-python-project-with-azure-devops/">test and Code Coverage&lt;/a> for your build of Python code, &lt;strong>last step for a good build is adding support for Code Analysis with Sonar/SonarCloud.&lt;/strong> SonarCloud is the best option if your code is open source, because it is free and you should not install anything except the &lt;a href="https://marketplace.visualstudio.com/items?itemName=SonarSource.sonarcloud">free addin in Azure Devops Marketplace&lt;/a>.&lt;/p>
&lt;p>From original build you need only to add two steps: PrepareAnalysis onSonarCloud and Run SonarCloud analysis, in the same way you do analysis for a.NET project.&lt;/p></description></item><item><title>Run code coverage for Python project with Azure DevOps</title><link>https://www.codewrecks.com/post/old/2018/11/run-code-coverage-for-python-project-with-azure-devops/</link><pubDate>Tue, 20 Nov 2018 17:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2018/11/run-code-coverage-for-python-project-with-azure-devops/</guid><description>&lt;p>Creating a &lt;a href="http://www.codewrecks.com/blog/index.php/2018/11/12/run-python-test-with-azure-devops-pipeline/">simple build that runs Python tests written with PyTest&lt;/a> framework is really simple, but now &lt;strong>the next step is trying to have code coverage&lt;/strong>. Even if I’m pretty new to Python, having code coverage in a build is really simple, thanks to a specific task that comes out-of-the-box with Azure DevOps: Publish Code Coverage.&lt;/p>
&lt;blockquote>
&lt;p>In Azure DevOps you can create build with Web Editor or with simple YAML file, I prefer YAML but since I’ve demonstrated in the old post YAML build for Python, now I’m creating a simple build with standard Web Editor&lt;/p></description></item></channel></rss>
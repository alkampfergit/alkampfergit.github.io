<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Codespaces on Codewrecks</title><link>https://www.codewrecks.com/tags/codespaces/</link><description>Recent content in Codespaces on Codewrecks</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sun, 31 Dec 2023 08:00:00 +0200</lastBuildDate><atom:link href="https://www.codewrecks.com/tags/codespaces/index.xml" rel="self" type="application/rss+xml"/><item><title>Allow easy source debugging for Nuget Packages and GitHub</title><link>https://www.codewrecks.com/post/github/allow-source-debugging-for-nuget-packages/</link><pubDate>Sun, 31 Dec 2023 08:00:00 +0200</pubDate><guid>https://www.codewrecks.com/post/github/allow-source-debugging-for-nuget-packages/</guid><description>&lt;p>In my previous blog posts, I&amp;rsquo;ve extensively discussed how to &lt;strong>publish symbol libraries for .NET in Azure DevOps / Team Foundation Server&lt;/strong>. Azure DevOps has supported symbol server functionalities for a considerable time, making it straightforward to add steps in your build process for indexing your source code. This capability enables you to &lt;strong>publish your .NET libraries to either an internal or public NuGet feed and facilitates stepping into the original source code for debugging directly within Visual Studio.&lt;/strong>&lt;/p></description></item><item><title>Develop locally with GitHub Codespaces and Hugo</title><link>https://www.codewrecks.com/post/github/codespaces-hugo-local/</link><pubDate>Thu, 12 Jan 2023 08:00:00 +0200</pubDate><guid>https://www.codewrecks.com/post/github/codespaces-hugo-local/</guid><description>&lt;p>I really love &lt;a href="https://www.codewrecks.com/post/github/codespaces-hugo/">Using Hugo and Codespaces to write blog posts&lt;/a>, I&amp;rsquo;ve a really better blogging experience &lt;strong>than wordpress, because I have a simple blog, quick to load, no frills no fuzzes, just a simple blog&lt;/strong>. Using Codespaces is really nice experience and I really never wrote a blog post in my Windows machine until yesterday.&lt;/p>
&lt;p>Yesterday I simply opened my blog repository inside a local instance of Visual Studio Code, but I had a &lt;strong>nasty surprise when I tried to start hugo server&lt;/strong>.&lt;/p></description></item><item><title>Configure Codespaces for Python projects</title><link>https://www.codewrecks.com/post/github/codespaces-python/</link><pubDate>Thu, 26 Aug 2021 08:00:00 +0200</pubDate><guid>https://www.codewrecks.com/post/github/codespaces-python/</guid><description>&lt;p>One of the great advantage of Codespaces is the ability &lt;a href="https://www.codewrecks.com/post/github/configuring-codespaces/">to preconfigure the environment&lt;/a> so you do not need to &lt;strong>waste time installing and configuring your toolchain&lt;/strong>. Python is a perfect example of this scenario, I&amp;rsquo;ve a small project &lt;a href="https://github.com/alkampfergit/GitGraphAutomation">to generate Git Graph Representation&lt;/a> and since I&amp;rsquo;m not a full time Python developer, I&amp;rsquo;ve not it installed and perfectly configured in all of my environment. Also I primarily work on Windows, so &lt;strong>Codespaces allows me to test everything on Linux with a single click&lt;/strong>.&lt;/p></description></item><item><title>Configure Codespaces for a real project</title><link>https://www.codewrecks.com/post/github/configuring-codespaces/</link><pubDate>Fri, 20 Aug 2021 08:00:00 +0200</pubDate><guid>https://www.codewrecks.com/post/github/configuring-codespaces/</guid><description>&lt;p>In &lt;a href="https://www.codewrecks.com/post/github/codespaces-hugo/">previous post&lt;/a> I explored the many advantages I&amp;rsquo;ve found &lt;strong>using GitHub codespaces to author blog posts directly in a browser&lt;/strong>. That example was surely too simple, after all a hugo blog is just markdown, but nevertheless Codespaces allows me to configure my environment with great easy.&lt;/p>
&lt;p>You can follow the guide &lt;a href="https://docs.github.com/en/codespaces/customizing-your-codespace/configuring-codespaces-for-your-project">on the official link&lt;/a> but here is a quick summary on how I configured my codespaces for my blog. First of all you can directly add a configuration file inside codespace&lt;/p></description></item><item><title>Use GitHub codespaces to author blog post</title><link>https://www.codewrecks.com/post/github/codespaces-hugo/</link><pubDate>Thu, 19 Aug 2021 08:00:00 +0200</pubDate><guid>https://www.codewrecks.com/post/github/codespaces-hugo/</guid><description>&lt;h2 id="the-scenario">The scenario&lt;/h2>
&lt;p>I played &lt;a href="https://www.codewrecks.com/post/general/github-codespaces-first-impression/">a little bit with GitHub Codespaces&lt;/a> when it was in preview, now it is time to try to use it real activities to &lt;strong>understand scenarios where it can be useful&lt;/strong>.&lt;/p>
&lt;p>To have a real test you need &lt;strong>to setup a goal to verify if the tool is capable of reaching that goal, and if it is an advantage over existing tool&lt;/strong>. My first goal is being able to write Blog Post in hugo with GitHub Codespaces and being able to determine if it is more productive than running a standalone local version of Visual Studio code.&lt;/p></description></item></channel></rss>
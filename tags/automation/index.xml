<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Automation on Codewrecks</title><link>https://www.codewrecks.com/tags/automation/</link><description>Recent content in Automation on Codewrecks</description><generator>Hugo</generator><language>en</language><lastBuildDate>Tue, 16 Jan 2024 08:00:00 +0200</lastBuildDate><atom:link href="https://www.codewrecks.com/tags/automation/index.xml" rel="self" type="application/rss+xml"/><item><title>Pill: Include files in your publish profile for C# projects</title><link>https://www.codewrecks.com/post/azdo/pills/msbuild-copy-file/</link><pubDate>Tue, 16 Jan 2024 08:00:00 +0200</pubDate><guid>https://www.codewrecks.com/post/azdo/pills/msbuild-copy-file/</guid><description>&lt;p>When publishing an ASP.NET core web project, it&amp;rsquo;s often necessary to include certain files &lt;strong>external to the Visual Studio solution but that are logical part of the project&lt;/strong>. A typical example is frontend build from angular projects. For web projects, it&amp;rsquo;s also common to include some static resources that might be outside of the web project, like images or files.&lt;/p>
&lt;p>At this point, we want the Azure DevOps pipeline to &lt;strong>correctly include all these external files in the final artifacts.&lt;/strong>&lt;/p></description></item><item><title>Pill: Enhancing DevOps with Automated Pull Requests</title><link>https://www.codewrecks.com/post/azdo/pills/automatic-pull-request-close/</link><pubDate>Fri, 12 Jan 2024 08:10:42 +0200</pubDate><guid>https://www.codewrecks.com/post/azdo/pills/automatic-pull-request-close/</guid><description>&lt;p>Pull requests are a cornerstone of collaborative software development, particularly with distributed version control systems like Git and platforms such as GitHub or Azure DevOps. However, managing pull requests can become cumbersome, particularly for &lt;strong>branches undergoing extensive modifications and receiving frequent feedback.&lt;/strong> This complexity is evident when preparing a pull request only to find it needs additional changes due to peer review, necessitating a complete retest of the code.&lt;/p>
&lt;p>Such workflows highlight the challenges in finalizing a branch. Developers often find themselves continuously switching to the branch in question to &lt;strong>change the code based on other members feedback&lt;/strong>, re test everything, signal to other members that the PR is updated then move to another branch and repeat. This is where a &lt;strong>comprehensive suite of automated tests, including end-to-end tests, becomes invaluable.&lt;/strong> These tests should cover the entire spectrum of the development process: building the solution, packaging artifacts, deploying to a test server, and conducting basic functionality checks.&lt;/p></description></item></channel></rss>
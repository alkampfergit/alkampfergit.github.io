<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Lucene on Codewrecks</title><link>https://www.codewrecks.com/tags/lucene/</link><description>Recent content in Lucene on Codewrecks</description><generator>Hugo</generator><language>en</language><lastBuildDate>Mon, 27 May 2013 07:00:37 +0200</lastBuildDate><atom:link href="https://www.codewrecks.com/tags/lucene/index.xml" rel="self" type="application/rss+xml"/><item><title>Hilight matched text inside documents indexed with Solr plus Tika</title><link>https://www.codewrecks.com/post/old/2013/05/hilight-matched-text-inside-documents-indexed-with-solr-plus-tika/</link><pubDate>Mon, 27 May 2013 07:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2013/05/hilight-matched-text-inside-documents-indexed-with-solr-plus-tika/</guid><description>&lt;p>I’ve already dealt on how to &lt;a href="http://www.codewrecks.com/blog/index.php/2013/05/25/import-folder-of-documents-with-apache-solr-4-0-and-tika/">index documents with Solr and Tika&lt;/a> and in this article I’ll explain how you can not only search for documents that match your query, but &lt;strong>returns even some text extract that shows where the document match the query&lt;/strong>. To achieve this, you should store the full content of the document inside your index, usually I create a couple of fields, one called Content that will contain the content of the file, and with a copyfield directive (  &amp;lt;copyField source=”content” dest=”text”/&amp;gt; ) automatically copy that value inside the catch all field called text.&lt;/p></description></item><item><title>Import folder of documents with Apache Solr 40 and tika</title><link>https://www.codewrecks.com/post/old/2013/05/import-folder-of-documents-with-apache-solr-4-0-and-tika/</link><pubDate>Sat, 25 May 2013 06:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2013/05/import-folder-of-documents-with-apache-solr-4-0-and-tika/</guid><description>&lt;p>In a previous article I showed how simple is to &lt;a href="http://www.codewrecks.com/blog/index.php/2013/04/29/loading-data-from-sql-server-to-solr-with-a-data-import-handler/">import data from a Sql database into Solr with a Data Import Handler&lt;/a>, in this article I’ll use a similar technique to &lt;strong>import documents stored inside a folder&lt;/strong>.&lt;/p>
&lt;p>This feature is exposed by the &lt;strong>integration with Tika, an open source document analyzer capable of extracting text by various formats of files&lt;/strong>. Thanks to this library solr is capable of crawling an entire directory, indexing every document inside it with really minimal configuration. Apache Tika is a standalone project, you can find all &lt;a href="https://tika.apache.org/1.3/formats.html">supported formats here&lt;/a> and you can use directly from your java (or.NET code) but thanks to Solr Integration setting everything up is a real breeze.&lt;/p></description></item><item><title>Index your blog using tags and lucenenet</title><link>https://www.codewrecks.com/post/old/2012/08/index-your-blog-using-tags-and-lucene-net/</link><pubDate>Sat, 25 Aug 2012 08:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2012/08/index-your-blog-using-tags-and-lucene-net/</guid><description>&lt;ul>
&lt;li>&lt;a href="http://www.codewrecks.com/blog/index.php/2012/06/20/getting-started-with-lucene-net/">Getting Started With Lucene.NET&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.codewrecks.com/blog/index.php/2012/06/21/getting-started-with-lucene-netsearching/">Searching and more detail on Documents Fields&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.codewrecks.com/blog/index.php/2012/07/03/advanced-queries-with-lucene-net/">Advanced Queries with Lucene.NET&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.codewrecks.com/blog/index.php/2012/07/05/case-sensitivity-in-lucene-search/">Case Sensitivity in Lucene.NET Searches&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.codewrecks.com/blog/index.php/2012/07/20/faceted-searches-with-lucene-net/">Faceted searches with Lucene.NET&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.codewrecks.com/blog/index.php/2012/08/21/assign-tag-to-lucene-documents/">Assign Tag To Lucene documents&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>In the last part of my series on Lucene &lt;strong>I show how simple is adding tags to document to do a simple tag based categorization&lt;/strong> , now it is time to explain how you can automate this process and how to use some advanced characteristic of lucene. First of all I write a specialized analyzer called TagSnowballAnalyzer, based on standard SnowballAnalyzer plus a series of keywords associated to various tags, here is how I construct it.&lt;/p></description></item><item><title>Assign 'tag' to lucene documents</title><link>https://www.codewrecks.com/post/old/2012/08/assign-tag-to-lucene-documents/</link><pubDate>Tue, 21 Aug 2012 20:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2012/08/assign-tag-to-lucene-documents/</guid><description>&lt;ul>
&lt;li>&lt;a href="http://www.codewrecks.com/blog/index.php/2012/06/20/getting-started-with-lucene-net/">Getting Started With Lucene.NET&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.codewrecks.com/blog/index.php/2012/06/21/getting-started-with-lucene-netsearching/">Searching and more detail on Documents Fields&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.codewrecks.com/blog/index.php/2012/07/03/advanced-queries-with-lucene-net/">Advanced Queries with Lucene.NET&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.codewrecks.com/blog/index.php/2012/07/05/case-sensitivity-in-lucene-search/">Case Sensitivity in Lucene.NET Searches&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.codewrecks.com/blog/index.php/2012/07/20/faceted-searches-with-lucene-net/">Faceted searches with Lucene.NET&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>One of the good aspect of working with lucene.NET is that &lt;strong>it is really similar to a NoSql database, because it permits you to store “document” where a document is a generic collection of fields&lt;/strong>. Lucene has the ability to store not only textual field, but also Numeric Fields to solve interesting scenarios because you are not limited in storing and searching only for text. &lt;strong>Suppose you want to categorize all posts of a blog where each post can have one or more Tag and a pertinence value associated to that Tag&lt;/strong>. The technique used to determine the Tags to associate to a Blog post is not the subject of this discussion, what I need is only a technical way in Lucene.NET to add tags with an integer value to a document and issue query on them. For the sake of this discussion we can say that blog user decide one or more tag word to associate to the post and give a value to 1 to 10 to determine how pertinent the tag is to the post. We can add tags to document that represent a post with this simple code.&lt;/p></description></item><item><title>Faceted searches with LuceneNET</title><link>https://www.codewrecks.com/post/old/2012/07/faceted-searches-with-lucene-net/</link><pubDate>Fri, 20 Jul 2012 20:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2012/07/faceted-searches-with-lucene-net/</guid><description>&lt;ul>
&lt;li>&lt;a href="http://www.codewrecks.com/blog/index.php/2012/06/20/getting-started-with-lucene-net/">Getting Started With Lucene.NET&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.codewrecks.com/blog/index.php/2012/06/21/getting-started-with-lucene-netsearching/">Searching and more detail on Documents Fields&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.codewrecks.com/blog/index.php/2012/07/03/advanced-queries-with-lucene-net/">Advanced Queries with Lucene.NET&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.codewrecks.com/blog/index.php/2012/07/05/case-sensitivity-in-lucene-search/">Case Sensitivity in Lucene.NET Searches&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>One of the coolest feature of Lucene.NET is the &lt;strong>ability to do&lt;/strong> &lt;a href="http://en.wikipedia.org/wiki/Faceted_classification">&lt;strong>faceted searches&lt;/strong>&lt;/a> &lt;strong>with really few lines of code&lt;/strong>. A faceted search &lt;strong>runs a query on an index and calculate the distribution of the results based on a property of the document&lt;/strong>. Let me show a sample result and then you probably will have a better understanding of this concept. Suppose I’m indexing product from the Microsoft Sample database AdventureWorks, each product has an Id a category and a description fields and I offered this simple UI for searching.&lt;/p></description></item><item><title>Case sensitivity in lucene search</title><link>https://www.codewrecks.com/post/old/2012/07/case-sensitivity-in-lucene-search/</link><pubDate>Thu, 05 Jul 2012 16:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2012/07/case-sensitivity-in-lucene-search/</guid><description>&lt;ul>
&lt;li>&lt;a href="http://www.codewrecks.com/blog/index.php/2012/06/20/getting-started-with-lucene-net/">Getting Started With Lucene.NET&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.codewrecks.com/blog/index.php/2012/06/21/getting-started-with-lucene-netsearching/">Searching and more detail on Documents Fields&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.codewrecks.com/blog/index.php/2012/07/03/advanced-queries-with-lucene-net/">Advanced Queries with Lucene.NET&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>We ended last post with a good knowledge of how to do complex searches in Lucene.NET indexes but a question remains unresolved, is Lucene.NET search &lt;strong>case insensitive or case insensitive?&lt;/strong>. Suppose you search for&lt;/p>
&lt;p>&lt;em>+mime + format&lt;/em>&lt;/p>
&lt;p>Here is the first result returned from the above query.&lt;/p>
&lt;p>&lt;a href="https://www.codewrecks.com/blog/wp-content/uploads/2012/07/image1.png">&lt;a target="_blank" href="https://www.codewrecks.com/blog/wp-content/uploads/2012/07/image_thumb1.png"> &lt;img src="https://www.codewrecks.com/blog/wp-content/uploads/2012/07/image_thumb1.png" alt="image" />&lt;/a>&lt;/a>&lt;/p>
&lt;p>&lt;em>&lt;strong>Figure 1&lt;/strong>&lt;/em>: &lt;em>Searching for +mime +format returns a document that contains MIME in uppercase.&lt;/em>&lt;/p></description></item><item><title>Advanced queries with LuceneNET</title><link>https://www.codewrecks.com/post/old/2012/07/advanced-queries-with-lucene-net/</link><pubDate>Tue, 03 Jul 2012 05:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2012/07/advanced-queries-with-lucene-net/</guid><description>&lt;p>Previous part of the series&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://www.codewrecks.com/blog/index.php/2012/06/20/getting-started-with-lucene-net/">Getting Started With Lucene.NET&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.codewrecks.com/blog/index.php/2012/06/21/getting-started-with-lucene-netsearching/">Searching and more detail on Documents Fields&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>In the previous parts I created a &lt;strong>lucene.NET index that contains information about StackOverflow posts content&lt;/strong> and I showed some basic searches. Suppose I create a new index where documents were created with these options&lt;/p>
&lt;div class="highlight">&lt;div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>luceneDocument.Add(&lt;span style="color:#66d9ef">new&lt;/span> Field(&lt;span style="color:#e6db74">&amp;#34;Id&amp;#34;&lt;/span>, reader.GetAttribute(&lt;span style="color:#e6db74">&amp;#34;Id&amp;#34;&lt;/span>), Field.Store.YES, Field.Index.NOT_ANALYZED));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>luceneDocument.Add(&lt;span style="color:#66d9ef">new&lt;/span> Field(&lt;span style="color:#e6db74">&amp;#34;content&amp;#34;&lt;/span>, reader.GetAttribute(&lt;span style="color:#e6db74">&amp;#34;Body&amp;#34;&lt;/span>), Field.Store.COMPRESS, Field.Index.ANALYZED));&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;p>With this document I’m able to retrieve the original content because I’ve specified lucene.NET to store original content inside the index in compressed format (Field.Store.COMPRESS), so I can write a stupid routine to search from a simple console application.&lt;/p></description></item><item><title>Getting started with LuceneNET-Searching</title><link>https://www.codewrecks.com/post/old/2012/06/getting-started-with-lucene-netsearching/</link><pubDate>Thu, 21 Jun 2012 16:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2012/06/getting-started-with-lucene-netsearching/</guid><description>&lt;p>Previous part of the series&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://www.codewrecks.com/blog/index.php/2012/06/20/getting-started-with-lucene-net/">Getting Started With Lucene.NET&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>In the previous part I’ve showed how easy is to create an index with lucene.net, but in this post I’ll start to explain how to search into it, first of all what I need is &lt;strong>a more interesting example, so I decided to download a &lt;a href="http://blog.stackoverflow.com/2009/06/stack-overflow-creative-commons-data-dump/">dump of stack overflow&lt;/a>&lt;/strong> , and I’ve extracted the Posts.Xml file (10 GB of XML file), then I wrote this &lt;strong>simple piece of text to create the lucene index&lt;/strong>.&lt;/p></description></item><item><title>Getting Started with Lucenenet</title><link>https://www.codewrecks.com/post/old/2012/06/getting-started-with-lucene-net/</link><pubDate>Wed, 20 Jun 2012 16:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2012/06/getting-started-with-lucene-net/</guid><description>&lt;p>I started working with &lt;a href="http://incubator.apache.org/lucene.net/">Lucene.Net&lt;/a> and I should admit that is a real powerful library, but it is really huge and needs a little bit of time to be mastered completely. Probably one of the best resource to keep in mind is the &lt;a href="http://wiki.apache.org/lucene-java/LuceneFAQ">FAQ&lt;/a>, because it contains really most of the more common question you can have on Lucene and it is a good place to start. Another good place is the &lt;a href="http://wiki.apache.org/lucene-java/FrontPage?action=show&amp;amp;amp;redirect=FrontPageEN">Wiki&lt;/a> that contains other useful information and many other link to relevant resources.&lt;/p></description></item></channel></rss>
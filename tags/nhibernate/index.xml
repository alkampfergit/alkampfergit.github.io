<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Nhibernate on Codewrecks</title><link>https://www.codewrecks.com/tags/nhibernate/</link><description>Recent content in Nhibernate on Codewrecks</description><generator>Hugo</generator><language>en</language><lastBuildDate>Fri, 20 Dec 2013 18:00:37 +0200</lastBuildDate><atom:link href="https://www.codewrecks.com/tags/nhibernate/index.xml" rel="self" type="application/rss+xml"/><item><title>Using SaveOrUpdate in Entity Framework</title><link>https://www.codewrecks.com/post/old/2013/12/using-saveorupdate-in-entity-framework/</link><pubDate>Fri, 20 Dec 2013 18:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2013/12/using-saveorupdate-in-entity-framework/</guid><description>This is a common question for people that used NHibernate before using EF. The problem is, I have an object and I do not want to care about if this is a new object that needs to be added for the first time to the database, or it is an object that needs update or if it was already attached to the context, etc. I want to call a single Upsert method called SaveOrUpdate and let the ORM takes care of the rest.</description></item><item><title>Relations with not-found'ignore' disable lazy load and impact on performances</title><link>https://www.codewrecks.com/post/old/2013/06/relations-with-not-foundignore-disable-lazy-load-and-impact-on-performances/</link><pubDate>Tue, 18 Jun 2013 12:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2013/06/relations-with-not-foundignore-disable-lazy-load-and-impact-on-performances/</guid><description>NHibernate has a lot of interesting and specific option for mapping entities that can really cover every scenario you have in mind, but you need to be aware of every implication each advanced option has on performances.
If you are in a legacy-database scenario where entity A reference Entity B, but someone outside the control of NHibernate can delete record from table used by Entity B, without setting the corresponding referencing field on Entity A.</description></item><item><title>NHibernate 32 and Mapping By Code</title><link>https://www.codewrecks.com/post/old/2012/06/nhibernate-3-2-and-mapping-by-code/</link><pubDate>Sat, 30 Jun 2012 08:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2012/06/nhibernate-3-2-and-mapping-by-code/</guid><description>In version 3.2 of NHibernate a new mapping capabilities was introduced to easy mapping of entities in your project. To understand how it works and how easy it is here it is all initialization code you need if you want to accept default mapping rules for all of your classes.
1 2 3 4 5 6 7 8 9 10 11 12 13 cfg = new Configuration(); var mapper = new ConventionModelMapper(); mapper.</description></item><item><title>Troubleshoot WCF The underlying connection was closed A connection that was expected to be kept alive was closed by the server</title><link>https://www.codewrecks.com/post/old/2012/05/troubleshoot-wcf-the-underlying-connection-was-closed-a-connection-that-was-expected-to-be-kept-alive-was-closed-by-the-server/</link><pubDate>Wed, 16 May 2012 19:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2012/05/troubleshoot-wcf-the-underlying-connection-was-closed-a-connection-that-was-expected-to-be-kept-alive-was-closed-by-the-server/</guid><description>I’ve already blogged in the past on how to easily troubleshoot WCF Exception and that suggestion is valid for every exception you encounter in WCF. Today I have a function that gave the error
System.ServiceModel.CommunicationException: The underlying connection was closed: A connection that was expected to be kept alive was closed by the server. —&amp;gt; System.Net.WebException: The underlying connection was closed: A connection that was expected to be kept alive was closed by the server.</description></item><item><title>Unit test NHibernate query to verify N1</title><link>https://www.codewrecks.com/post/old/2011/12/unit-test-nhibernate-query-to-verify-n1/</link><pubDate>Fri, 30 Dec 2011 15:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2011/12/unit-test-nhibernate-query-to-verify-n1/</guid><description>When you work with ORM like nhibernate, having a tool like nhprof is the key of success. But even with NHProfiler you could not prevent people of doing wrong stuff because they do not use it :). I have a simple scenario, a developer changed a method on the server lazily fetching a property of a large resultset. The effect is that the service call, that usually responded in milliseconds starts to respond in 10 seconds.</description></item><item><title>Custom XML Serialization</title><link>https://www.codewrecks.com/post/old/2011/12/custom-xml-serialization/</link><pubDate>Thu, 01 Dec 2011 08:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2011/12/custom-xml-serialization/</guid><description>Another advantage of storing properties of entities into a state object based on a Dictionary, is the ability to easily serialize objects in custom formats. As an example I create an XML serializer that is capable to serialize an entity in a custom XML format.
I used this simple serializer to create a NHibernate User Type that permits me to save a child entity in a single XML column of SQL Server, a feature useful when you need to save objects which schema changes quite often and you do not want to keep database schema updated, or you need to store dynamic data into the DB.</description></item><item><title>Use SQLite to test NH-DateAdd function</title><link>https://www.codewrecks.com/post/old/2011/08/use-sqlite-to-test-nhdatediff-function/</link><pubDate>Mon, 29 Aug 2011 14:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2011/08/use-sqlite-to-test-nhdatediff-function/</guid><description>1 DateAdd(dd, T.AnalysisFrequence, :refdate) Quite often I use SQLite to create Unit Tests of NH queries with a fast In-Memory database, and then run the queries against a standard Sql Server database.
Today I have this problem, an HQL query uses the DateAdd Sql Server function
1 DateDiff(dd, T.AnalysisFrequence, :refdate) In this query with the DateAdd function I want to obtain a date that is calculated adding an amount of days from a reference date.</description></item><item><title>Using schema with NHibernate and SqlLite</title><link>https://www.codewrecks.com/post/old/2011/08/using-schema-with-nhibernate-and-sqllite/</link><pubDate>Tue, 02 Aug 2011 17:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2011/08/using-schema-with-nhibernate-and-sqllite/</guid><description>Some time ago I blogged about a technique to use SqLite in Unit testing when you have nhibernate mapping that targets Sql Server tables in a schema different from dbo. The problem was: if you specify the schema name in the mapping of a class, then you are not able to execute the test in SqLite database.
Ex. if you have this mapping.
This is a mapping for a table called EngagementView in a schema called report and when u try to run some test on this entity with SqLite you got an error telling that there is no report database.</description></item><item><title>A strange bug in NHibernate 21</title><link>https://www.codewrecks.com/post/old/2011/07/a-strange-bug-in-nhibernate-2-1/</link><pubDate>Thu, 28 Jul 2011 11:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2011/07/a-strange-bug-in-nhibernate-2-1/</guid><description>In a previous post I described a technique to insert query hints into NHibernate query with the use of comments. Testing this code in a real project lead to a strange exception when I issue queries with ICriteria
The query should start with ‘SELECT’ or ‘SELECT DISTINCT’
This happens because ICriteria queries inserts comments inside the query and if you enable comments to flow into the query with the setting use_sql_comments something weird happens when you use SetMaxResults to issue a paginated query.</description></item><item><title>Use Sql Server Query Hints with NHibernate HQL and ICriteria</title><link>https://www.codewrecks.com/post/old/2011/07/use-sql-server-query-hints-with-nhibernate-hql-and-icriteria/</link><pubDate>Sat, 23 Jul 2011 08:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2011/07/use-sql-server-query-hints-with-nhibernate-hql-and-icriteria/</guid><description>When you work with Big databases with many records and not uniform distribution of data into columns used for join or where conditions, you can have really bad performance problem due to Query Plan caching. I do not want to give a deep explanation of this problem, you can find information here, but I want to outline the general problem to make clear what is happening.
We can argue a lot why this problem happens in a database engine, but basically I have a really bad situation where the db stores data of multiple customers with really non uniform distribution of data (some of them have ~1000 rows for each table, others have ~100.</description></item><item><title>Entity Framework a super dataset</title><link>https://www.codewrecks.com/post/old/2011/06/entity-framework-a-super-dataset/</link><pubDate>Thu, 09 Jun 2011 07:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2011/06/entity-framework-a-super-dataset/</guid><description>Entity Framework is quite a good product, but in my opinion still misses some point to be called an ORM. I must admit that I never used the 4.1 Code first in real project, but there are some stuff that still does not convince me when using EF.
When I decide to use EF (and not NH) Sometimes I need to access small legacy databases to do a small amount of operations and I must admit that adding a EF Model from Visual Studio is a matter of seconds and the LINQ provider of EF is quite good so it is a valuable alternative to create a quick DAL.</description></item><item><title>EntityLock implement a logic locking strategy in my domain</title><link>https://www.codewrecks.com/post/old/2011/05/entitylock-implement-a-logic-locking-strategy-in-my-domain/</link><pubDate>Wed, 25 May 2011 15:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2011/05/entitylock-implement-a-logic-locking-strategy-in-my-domain/</guid><description>I have a domain where one of the business operation consists of analysis of some entities, for each entity we need to do complex analysis involving external servers and until now we could live with a single server that sequentially analyze those entities one after another.
All works good, but we reach a point where the amount of work reached the capacity of the Analyzer server, so we need to change the analysis algorithm to parallelize the analysis.</description></item><item><title>Compress data in sql server 2008 standard thanks to FILESTREAM and NHibernate</title><link>https://www.codewrecks.com/post/old/2011/05/compress-data-in-sql-server-2008-standard-thanks-to-filestream-and-nhibernate/</link><pubDate>Tue, 24 May 2011 14:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2011/05/compress-data-in-sql-server-2008-standard-thanks-to-filestream-and-nhibernate/</guid><description>I have an entity that has a large Unicode string property actually persisted on a nvarchar(max) Sql server column type. After some months we verified that this column is consuming big amount of database space. Sql server enterprise supports data compression, but this software runs on a Sql Server standard, so we need some strategy to save space (compressing text data) but with minimum impact on the already existing code. Since this is text data we already know that it is possible to have a good compression ration, but adding compression in the domain is a solution I do not like.</description></item><item><title>Sequential GUID are Unique</title><link>https://www.codewrecks.com/post/old/2011/05/sequential-guid-are-unique/</link><pubDate>Tue, 17 May 2011 12:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2011/05/sequential-guid-are-unique/</guid><description>This post refers to the previous post, where liviu warns against the non uniqueness of T-SQL sequential guid. The technique used is based on the UuidCreateSequential API function of the operating system. This function generates unique guid unless there is no NetworkCard in the system, but this function warns you when the guid can be considered unique only on local machine, when it returns the value RPC_S_UUID_LOCAL_ONLY.
This happens when the machine has not network card, and this is not a problem in my scenario, but if this is something you fear, you can simply change the function in this way.</description></item><item><title>Using guid id in nhibernate index fragmentation</title><link>https://www.codewrecks.com/post/old/2011/05/using-guid-id-in-nhibernate-index-fragmentation/</link><pubDate>Mon, 16 May 2011 09:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2011/05/using-guid-id-in-nhibernate-index-fragmentation/</guid><description>This is a quick consideration about using id of type GUID in nhibernate. If in SQL server the cluster index is on the id (default choiche), if you use a simple guid generator you will end in high index fragmentation. This happens because if you insert a lot of objects into the table, since the physical ordering of the records (the clustered index) is on the Id field, inserting a sequence of objects with random id will insert these object randomly into the physical space of the DB.</description></item><item><title>Nhibernate BatchSize and massive insert</title><link>https://www.codewrecks.com/post/old/2011/05/nhibernate-batchsize-and-massive-insert/</link><pubDate>Fri, 13 May 2011 16:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2011/05/nhibernate-batchsize-and-massive-insert/</guid><description>I have an application that analyze some data and insert about 1000 objects for each cycle into the database. The insertion needs to be transactional , and I need to insert 500 instances of object A and 500 instances of object B, and each B have a reference to A.
When I launch the application I see this insert pattern, even if I enabled batch size in Nhibernate.
Figure 1: Each object has his own insert instruction A then B then A then B again.</description></item><item><title>Help NHibernate to better understand what U want</title><link>https://www.codewrecks.com/post/old/2011/01/help-nhibernate-to-better-understand-what-u-want/</link><pubDate>Fri, 14 Jan 2011 10:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2011/01/help-nhibernate-to-better-understand-what-u-want/</guid><description>Today I have to issue a quite complex condition in HQL, I have this piece of object model
The main problem is the composite Id, I need to issue a query on an object that actually has a property called LinkId (an id of the analyzedLink class) but no relation with AnalyzedLink, and I want to select only those objects that are correlated to a specific SearchUnitId thanks to the above object model.</description></item><item><title>How flexible is NHibernate configuration</title><link>https://www.codewrecks.com/post/old/2010/10/how-flexible-is-nhibernate-configuration/</link><pubDate>Thu, 14 Oct 2010 16:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2010/10/how-flexible-is-nhibernate-configuration/</guid><description>NHibernate is really a flexible product, and the configuration capabilities make no exception. In the example we used for NHDay, Guardian used ConfORM to configure NHibernate without XML mapping file, everything is good, but I encounter a little problem.
One of the examples shows how you can create Dto object directly from HQL Query:
Figure 1: A simple HQL to create a DTO directly from the query.
This test fails because AdultDtoSample is not known by nhibernate (Figure 2)</description></item><item><title>Load a Strongly Typed dataset from a stored with NHibernate</title><link>https://www.codewrecks.com/post/old/2010/10/load-a-strongly-typed-dataset-from-a-stored-with-nhibernate/</link><pubDate>Thu, 07 Oct 2010 14:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2010/10/load-a-strongly-typed-dataset-from-a-stored-with-nhibernate/</guid><description>Even if you work with NHibernate, sometimes you need to use Stored Procedure to create reports, and sometimes you still have to work with dataset if you work with legacy code. I have this need: call a stored procedure and populate a Strongly Typed Database in a project based on NHibernate because the report designer require a dataset to work.
The project is simple, so I do not want to establish a structure to access database and I prefer to use nhibernate, so I create the stored procedure, create a dataset, Drag&amp;amp;Drop the stored into the DatasetDesigner and obtain a StronglyTyped Dataset.</description></item><item><title>NHibernate Query Analyzer</title><link>https://www.codewrecks.com/post/old/2010/09/nhibernate-query-analyzer/</link><pubDate>Wed, 01 Sep 2010 07:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2010/09/nhibernate-query-analyzer/</guid><description>NHQueryAnalyzer is a tool originally written by Ayende, and now it is supported at this link. I think that it is really a good tool, very useful even to learn HQL query because gives you an immediate idea of what the query will looks like. Here is a screenshot. (‘I&amp;rsquo;ve hide some sensitive part because this is part of a project of a company I worked with).
Figure 1: A screenshot of Nhibernate Query Analyzer in action.</description></item><item><title>Nhibernate query only properties and many-to-one</title><link>https://www.codewrecks.com/post/old/2010/08/nhibernate-query-only-properties-and-many-to-one/</link><pubDate>Wed, 11 Aug 2010 09:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2010/08/nhibernate-query-only-properties-and-many-to-one/</guid><description>1 If you does not know Query only properties of NHibernate you better take a look to this post, I must admit that they are really useful to make simpler query without changing the object model. I&amp;rsquo;ve this object model
This is how the domain was build, we decided to set a IList&amp;lt;DomainRegistrations&amp;gt; in the NickName class, and make this relation unidirectional. Now I need to issue a query to recover only Id and Url of all NickNameDomainRegistration object belonging to a certain NickName.</description></item><item><title>When you use an ORM always use projection when needed</title><link>https://www.codewrecks.com/post/old/2010/08/when-you-use-an-orm-always-use-projection-when-needed/</link><pubDate>Thu, 05 Aug 2010 12:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2010/08/when-you-use-an-orm-always-use-projection-when-needed/</guid><description>I&amp;rsquo;m optimizing a little bit an application, it is a windows form client that communicates with a WCF service. A specific form is really slow to open, so I decided to measure with a profiler to understand if something could be optimized with a little effort.
It turns out to me that 99% of form starting time is spent in waiting communication with services. First of all I see 8 calls to 8 method of the service, and this could lead to a too fine grained interface for the service, but the real problem is due to a couple of calls.</description></item><item><title>Link an entity to a hierarchy with different Id type</title><link>https://www.codewrecks.com/post/old/2010/08/link-an-entity-to-a-hierarchy-with-different-id-type/</link><pubDate>Mon, 02 Aug 2010 15:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2010/08/link-an-entity-to-a-hierarchy-with-different-id-type/</guid><description>In a thread of Guisa (Italian language), a user poses a question, he works with a legacy db, he has Foo and Bar entities with id of different type, one is string and another one is Integer. The two entities implements a common interface (IItemContent), and he want to be able to create an entity of type Item, that is connected to only one IItem content (a Foo or a Bar), but the caller should only see a property of type IITemContent, he should be able to set this property with an object of type Foo or Bar and being sure that the Item entity cannot be related to two entity, a Foo and a Bar at the same time.</description></item><item><title>NHibernate HQL query with only date part of a datetimevalue</title><link>https://www.codewrecks.com/post/old/2010/06/nhibernate-hql-query-with-only-date-part-of-a-datetimevalue/</link><pubDate>Fri, 04 Jun 2010 11:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2010/06/nhibernate-hql-query-with-only-date-part-of-a-datetimevalue/</guid><description>DateTime values are one of the most feared type of data to store in database. Suppose you have an entity with a datetime Property, and you want to do a standard report finding the count of each entity for each day in a date range, if you groupBy the DateTime property, surely you will get wrong results, because you will end with a lot of entries with count = 1, because it is really difficult that two entities will have the very same datetime value.</description></item><item><title>Error log4netERROR NHibernateProfilerAppender Attempted to append to closed appender named NHibernateProfiler</title><link>https://www.codewrecks.com/post/old/2010/05/error-log4neterror-nhibernateprofilerappender-attempted-to-append-to-closed-appender-named-nhibernate-profiler/</link><pubDate>Mon, 24 May 2010 13:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2010/05/error-log4neterror-nhibernateprofilerappender-attempted-to-append-to-closed-appender-named-nhibernate-profiler/</guid><description>NHprofiler de facto is THE TOOL to work with NHibernate, :)
If you work with NHibernate you must have NHProf, if you use it for 1 minute you can never work without it in the future, period. :)
I started today to use NHProf even for unit testing, since I want to be able to look at generated sql during tests of entities. I have a base test infrastructure to work with helper, so I have this snippet of code in fixture setup.</description></item><item><title>Multiple bag with Fetch'join' in nhibernate</title><link>https://www.codewrecks.com/post/old/2010/04/multiple-bag-with-fetchjoin-in-nhibernate/</link><pubDate>Sat, 03 Apr 2010 15:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2010/04/multiple-bag-with-fetchjoin-in-nhibernate/</guid><description>Suppose you have an entity like this
your NickName class has two bags, one containing a list of DomainRegistrations, and the other containing a series of Attachments. Now suppose you map both of these with fetch=join, this can cause a really really really big problem.
As you can read in this bug in NHibernate jira, you should know that fetch join is not supported when there is more than one bag in the entity, because bag allows for duplicate items :).</description></item><item><title>Power of HQL - Condition on a collection</title><link>https://www.codewrecks.com/post/old/2010/03/power-of-hql-condition-on-a-collection/</link><pubDate>Tue, 09 Mar 2010 11:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2010/03/power-of-hql-condition-on-a-collection/</guid><description>I have this piece of domain model.
The LinkResult class has a property called Link that point to a AnalyzedLink class that in turn has a collection of AnalyzedLinkExtClass called ExtData. All the relation are unidirectional, this means that there is nothing that bring me from AnalyzedLink to a linkResult and nothing that bring me from AnalyzedLinkExtData to the AnalyzedLink. This is the typical situation where doing complex query can be tricky</description></item><item><title>Work with castle and NHibernate trunk</title><link>https://www.codewrecks.com/post/old/2010/02/work-with-castle-and-nhibernate-trunk/</link><pubDate>Fri, 26 Feb 2010 17:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2010/02/work-with-castle-and-nhibernate-trunk/</guid><description>Working with open source software is fun, but sometimes can be difficult. Take as example castle and Nhibernate, since castle references nh with the NHIntegration facility, and at the same time NH references castle for Dynamic Proxy.
A good way to survive this chaos, is working with the trunk, as I usually do, but compiling everything can be quite complex, but we are lucky because we have a project called Horn that does everything for you.</description></item><item><title>Show NHibernate query in the trace of aspnet pages</title><link>https://www.codewrecks.com/post/old/2009/10/show-nhibernate-query-in-the-trace-of-aspnet-pages/</link><pubDate>Tue, 13 Oct 2009 10:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2009/10/show-nhibernate-query-in-the-trace-of-aspnet-pages/</guid><description>When you use NHibernate and asp.net one of the most interesting stuff is looking at sql generated for each page call. While NHProf is the best tool to accomplish this task, it is interesting to trace issued sql queries using asp.net trace engine.
To accomplish this task is really straightforward thanks to log4net, first of all configure a suitable appender in log4net config file.
1 2 3 4 5 &amp;lt;appender name=&amp;#34;AspNetTraceAppender&amp;#34; type=&amp;#34;log4net.</description></item><item><title>NHibernate ICriteria and filters</title><link>https://www.codewrecks.com/post/old/2009/10/nhibernate-icriteria-and-filters/</link><pubDate>Tue, 13 Oct 2009 09:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2009/10/nhibernate-icriteria-and-filters/</guid><description>I have a project where I need to access tables with millions of rows, the project was born without nhibernate so the database was not designed with ORM in mind. I decided to improve performances with an Indexed view that materialized a join between five tables, wrapped with another view that does a left outer joins with other 3 tables. Then I created an entity called XXXDto, and mapped with nhibernate, with update=false to prevent updating and pointed it to this view.</description></item><item><title>Theta join in HQL - join with unrelated entities</title><link>https://www.codewrecks.com/post/old/2009/09/theta-join-in-hql-join-with-unrelated-entities/</link><pubDate>Fri, 04 Sep 2009 04:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2009/09/theta-join-in-hql-join-with-unrelated-entities/</guid><description>NHibernate HQL language is really powerful, and work in many scenario. Suppose you have those two classes.
Action is an object capable of executing something, while ActionLog stores the result of the execution of an action. There is no direct relation between the two, so in ActionLog we have not a reference to Action, but a simple field called ActionId that stores the id of the action. The reason for this choice is that Action objects can be deleted (and there is a special form of action called SpawnedAction that gets created, executed, and finally phisically deleted from the table); ActionLog must be retained even for deleted action, so we prefer not to store a direct relation.</description></item><item><title>Browse NHibernate metadata to validate property Length</title><link>https://www.codewrecks.com/post/old/2009/08/browse-nhibernate-metadata-to-validate-property-length/</link><pubDate>Sun, 23 Aug 2009 10:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2009/08/browse-nhibernate-metadata-to-validate-property-length/</guid><description>One of the most basic validation rule for Entities that are stored in databases, is to be sure that String Properties are not too long for the corresponding field in database. There are a lot of validation framework over there, most of them using attributes to specify constraints on properties or fields, but what happens if someone changes a mapping setting a different length for a field?
I&amp;rsquo;m a great fan of database generation with NHibernate, so here is a typical mapping of mine.</description></item><item><title>Manage Scope or Execution Context of Repository</title><link>https://www.codewrecks.com/post/old/2009/08/manage-scope-or-execution-context-of-repository/</link><pubDate>Fri, 07 Aug 2009 03:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2009/08/manage-scope-or-execution-context-of-repository/</guid><description>In a project I&amp;rsquo;m working with Guardian, we are using NHibernate behind a Repository Pattern. Despite the question if is good or not good to shield the session behind a Repository,we encountered a classic problem.
The software is structured as service, we use Castle Nhibernate Facility and Wcf Integration Facility plus a simple interceptor that manages the concept of Single session per service call. Now we are developing some interface in WPF, and this program can dialogate directly with database, without the need to access the db through wcf service.</description></item><item><title>Manage In memory nhibernate test with sqlite and database schema</title><link>https://www.codewrecks.com/post/old/2009/07/manage-in-memory-nhibernate-test-with-sqlite-and-database-schema/</link><pubDate>Fri, 24 Jul 2009 10:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2009/07/manage-in-memory-nhibernate-test-with-sqlite-and-database-schema/</guid><description>When you work with nhibernate you usually write a lot of tests that interact with your database, mainly to test your mapping but also when you do not want to shield the session behind a IRepository. To avoid Slow Test you should use some In Memory database like Sqlite, but it can be problematic when you use features of your real database (like Sql Server) that are not supported by the Sqlite engine.</description></item><item><title>Saving a generic Object property with nhibernate</title><link>https://www.codewrecks.com/post/old/2009/05/saving-a-generic-object-property-with-nhibernate/</link><pubDate>Thu, 21 May 2009 23:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2009/05/saving-a-generic-object-property-with-nhibernate/</guid><description>In a old post I explained how to save an object in XML format in database with a UserType. Since this technique worked well I decided to use it in another situation. Now I have an object that have a property of type Object, and I want to be able to save xml serialiation of it into database.
First of all I decided that it is better to use two columns, one will store the xml serialization, while the other will contain type name of the object, so I build a simple ICompositeUserType</description></item><item><title>Using ISQlQuery to load data with nhibernate</title><link>https://www.codewrecks.com/post/old/2009/05/using-isqlquery-to-load-data-with-nhibernate/</link><pubDate>Tue, 19 May 2009 05:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2009/05/using-isqlquery-to-load-data-with-nhibernate/</guid><description>I have a project that uses both nhibernate and StoredProcedures, based on a legacy project written without nhibernate. Today I need to load a lot of data from five tables. The problem is that all these tables are managed with nhibernate, but I have no relation between them. Moreover these tables have a lot of objects, and I need to retrieve only 10 objects at a time with pagination, but I cannot express pagination in nhibernate, because I have condition that must be satisfied on tables that are not mapped.</description></item><item><title>Use Xml field in SqlServer with nhibernate</title><link>https://www.codewrecks.com/post/old/2009/05/use-xml-field-in-sqlserver-with-nhibernate/</link><pubDate>Thu, 14 May 2009 07:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2009/05/use-xml-field-in-sqlserver-with-nhibernate/</guid><description>Xml fields in sql server are really useful, you can use xpath or xQuery to filter and impose condition on part of the xml fragment. Today we decided to store some data in an XML field of a table, and since this table was accessed both by nhibernate and both from T-Sql code, I begin to think on how to map this situation on NHibernate.
I immediately think to a usertype that is able to store data using XMLSerialization, here is the class, It took to me 10 minutes to create it,</description></item><item><title>Maintain integrity in NHibernate bidirectional association</title><link>https://www.codewrecks.com/post/old/2009/05/maintain-integrity-in-nhibernate-bidirectional-association/</link><pubDate>Tue, 05 May 2009 05:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2009/05/maintain-integrity-in-nhibernate-bidirectional-association/</guid><description>Using Bidirectional Associations in nhibernate can be tricky, the problem is that you need to manage associations for both ends. This is really important: suppose you have a class called Parent with a collection of childs called Childs, and a child class with a property called Parent; if you expose these two property to the user, you can write this
1 2 3 4 5 6 Parent John = new Parent(); Parent Mark = new Parent(); Child Bart = new Child(); John.</description></item><item><title>NHibernate ICriteria and composite-id with key-many-to-one</title><link>https://www.codewrecks.com/post/old/2009/04/nhibernate-icriteria-and-composite-id-with-key-many-to-one/</link><pubDate>Wed, 29 Apr 2009 09:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2009/04/nhibernate-icriteria-and-composite-id-with-key-many-to-one/</guid><description>Suppose you have a legacy database, and an entity called ViewOfBaseData that have this id.
1 2 3 4 &amp;lt;composite-id class=&amp;#34;ViewOfBaseDataId&amp;#34; name=&amp;#34;Id&amp;#34; &amp;gt; &amp;lt;key-many-to-one class=&amp;#34;LinkResult&amp;#34; name=&amp;#34;Link&amp;#34; column=&amp;#34;AnalysisId&amp;#34; lazy=&amp;#34;proxy&amp;#34; /&amp;gt; &amp;lt;key-property name=&amp;#34;AnalysisDate&amp;#34; type=&amp;#34;System.DateTime&amp;#34; column=&amp;#34;AnalysisDate&amp;#34; /&amp;gt; &amp;lt;/composite-id&amp;gt; Now suppose you need to retrieve all object ViewOfBaseData linked to a LinkResult object with a property KeyList equal to a certain value. In HQL is really simple
1 select v from ViewOfBaseData v where v.</description></item><item><title>NHibernate 'null identifier' error</title><link>https://www.codewrecks.com/post/old/2009/04/nhibernate-null-identifier-error/</link><pubDate>Thu, 02 Apr 2009 08:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2009/04/nhibernate-null-identifier-error/</guid><description>Today I received a strange null identifier error when saving an object to db with nhibernate. Immediatly I realize that this error is caused by a Trigger INSTEAD OF INSERT, that apperars to broke the SCOPE_IDENTITY() function. Since NHibernate uses SCOPE_IDENTITY() to retrieve the id of the generated object, when you use INSTEAD OF INSERT Trigger the SCOPE_IDENTITY() returns null, and nhibernate could not know the value of the inserted record.</description></item><item><title>Querying NHibernate user type with HQL or criteria</title><link>https://www.codewrecks.com/post/old/2009/03/querying-nhibernate-user-type-with-hql-or-criteria/</link><pubDate>Tue, 31 Mar 2009 04:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2009/03/querying-nhibernate-user-type-with-hql-or-criteria/</guid><description>Some time ago I posted a link about a user type to store list of strings in a single database field. In a project of mine I have another usertype very similar, that stores list of integers into a single string database field in a # separated value, like #1#8#23# (note that the character # appears at the begin and the end of the string). Now Suppose you need to made some query on it like *select all Domains where activeCustomerList is not empty and contains at least one id:</description></item><item><title>NHibernate and TooManyRowsAffectedException</title><link>https://www.codewrecks.com/post/old/2009/03/nhibernate-and-toomanyrowsaffectedexception/</link><pubDate>Wed, 25 Mar 2009 02:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2009/03/nhibernate-and-toomanyrowsaffectedexception/</guid><description>Today I received a log of an error in a windows service that runs some scheduled actions, the error was * TooManyRowsAffectedException *and it is thrown by nhibernate when a session is flushed. The exact message said * Unexpected row count: 2; expected: 1 *, after a little moment of confusion I immediately realize that the problem is due to a trigger.
I modified a table to keep a log of all modifications of every row, and I did this with a simple trigger that, for each update, saves the last value of each modified row in an history table.</description></item><item><title>Improving the WCF logger</title><link>https://www.codewrecks.com/post/old/2008/11/improving-the-wcf-logger/</link><pubDate>Thu, 06 Nov 2008 01:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2008/11/improving-the-wcf-logger/</guid><description>One of the first improvement to the WCF logger is the ability to choose the list of logger to monitor during registration. A real application can generate tons of logs, suppose you are interested only in looking at the NHibernate generated query. The solution is to add another registration method and internally use an object that keeps care of the registration and senting log progress. Here is the new interface</description></item><item><title>Inspecting NHibernate Metadata</title><link>https://www.codewrecks.com/post/old/2008/08/inspecting-nhibernate-metadata/</link><pubDate>Tue, 12 Aug 2008 04:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2008/08/inspecting-nhibernate-metadata/</guid><description>I have a little project based on NSK, it uses a query model to abstract the caller from nhibernate. Despite the reason for having or not a Query Model, I expanded the base translator to translate my Query object into a NHIbernate ICriteria.
To make this translation you need to create alias, if I you create a query for the order object and setup a constraint for Customer.Name, the ICriteria tells you that the Order object does not have a property called Customer.</description></item><item><title>NHibernate and deleting a group of objects</title><link>https://www.codewrecks.com/post/old/2008/06/nhibernate-and-deleting-a-group-of-objects/</link><pubDate>Thu, 19 Jun 2008 07:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2008/06/nhibernate-and-deleting-a-group-of-objects/</guid><description>If you do not mind to issue a delete for each object, you can delete multiple objects using an overload version of the ISession.Delete() Method, here is an example.
1 2 uow.Session.Delete(&amp;#34;select A from ActionSpawned A where A.ParentAction = :act&amp;#34;, ParentAction, NHibernateUtil.Entity(typeof(Action))); The code is quite concise, you specify the query to select a series of object, and pass it to the Delete method of the ISession, along with the parameters of the query.</description></item><item><title>Second IUserType of the day 8211 Store a list of string in database with NHIbernate</title><link>https://www.codewrecks.com/post/old/2008/05/second-iusertype-of-the-day-store-a-list-of-string-in-database-with-nhibernate/</link><pubDate>Fri, 30 May 2008 07:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2008/05/second-iusertype-of-the-day-store-a-list-of-string-in-database-with-nhibernate/</guid><description>I have an object that has 4 properties of IList&amp;lt;String&amp;gt; type. You can natively map these properties in a separate table with this simple mapping
1 2 3 4 &amp;lt;bag name=&amp;#34;keys&amp;#34; access=&amp;#34;field&amp;#34; cascade=&amp;#34;all-delete-orphan&amp;#34; table=&amp;#34;Keys&amp;#34; fetch=&amp;#34;join&amp;#34;&amp;gt; &amp;lt;key column=&amp;#34;deps_id&amp;#34; /&amp;gt; &amp;lt;element column=&amp;#34;deps_key&amp;#34; type=&amp;#34;String&amp;#34; /&amp;gt; &amp;lt;/bag&amp;gt; Ok, this is a simple mapping that store all the keys into another table with two columns, one is the foreign key to the main object, the other is a string column to store the data.</description></item><item><title>Today Menu NHibernate User Type</title><link>https://www.codewrecks.com/post/old/2008/05/today-menu-nhibernate-user-type/</link><pubDate>Fri, 30 May 2008 07:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2008/05/today-menu-nhibernate-user-type/</guid><description>Ok, today I faced a really simple problem, I have a domain class with a property of type uri, that seems to be not natively supported by NHibernate. Whenever you face a problem of this type the solution is IUserType, here is the full file, it is so simple to write a user type that I really does not check with google, after I write my class I found that other people had already created it, but it is worth to take a look to some particular piece of code.</description></item><item><title>NHIbernate and quotcollection was not an associationquot when using bag and composite-element</title><link>https://www.codewrecks.com/post/old/2008/05/nhibernate-and-collection-was-not-an-association-when-using-bag-and-composite-element/</link><pubDate>Tue, 20 May 2008 05:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2008/05/nhibernate-and-collection-was-not-an-association-when-using-bag-and-composite-element/</guid><description>Look at this mapping
1 2 3 4 5 6 7 &amp;lt;bag name=&amp;#34;searchDefinition&amp;#34; access=&amp;#34;field&amp;#34; cascade=&amp;#34;all-delete-orphan&amp;#34; table=&amp;#34;RawSearchDefinition&amp;#34; fetch=&amp;#34;join&amp;#34;&amp;gt; &amp;lt;key column=&amp;#34;ParentObjectId&amp;#34; /&amp;gt; &amp;lt;composite-element class=&amp;#34;RawSearchDefinition&amp;#34;&amp;gt; &amp;lt;property name=&amp;#34;ExcludeKeyword&amp;#34; column=&amp;#34;raws_excludeKeyword&amp;#34; type=&amp;#34;String&amp;#34; /&amp;gt; &amp;lt;property name=&amp;#34;IncludeKeyword&amp;#34; column=&amp;#34;raws_includeKeyword&amp;#34; type=&amp;#34;String&amp;#34; /&amp;gt; &amp;lt;/composite-element&amp;gt; &amp;lt;/bag&amp;gt; It seems ok but it has a subtle error, when you try to save the object, a “collection was not an association” error will arise. This error is derived from the cascade=”all-delete-orphan”, this attribute is used for real entity object not value ones.</description></item><item><title>Mapping a boolean field to char in nhibernate</title><link>https://www.codewrecks.com/post/old/2008/05/mapping-a-boolean-field-to-char-in-nhibernate/</link><pubDate>Thu, 08 May 2008 02:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2008/05/mapping-a-boolean-field-to-char-in-nhibernate/</guid><description>When you work with legacy database is not infrequent that boolean value are mapped to char(1) field in databse, with Y/N or 0/1 or some other chars. In the literature there are a lot of solution, you can find for example a discussion here. When you use a user type to handle this kind of situation when you build HQL query you cannot use true or false in condition, for example</description></item><item><title>NHibernate and batch update</title><link>https://www.codewrecks.com/post/old/2008/04/nhibernate-and-batch-update/</link><pubDate>Wed, 02 Apr 2008 04:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2008/04/nhibernate-and-batch-update/</guid><description>Today in a project I need to delete a lot of object from a table, the objects are instances of ActionLog and I want to delete all logs related to action when an action is deleted.
The problem is that nhibernate does not still support batch query as hibernate for java does (as explained in hibnernate in action). So I was forced to do a direct sql query.
1 2 3 4 uow.</description></item><item><title>NHibernate ICriteria Count and the missing quotHavingquot</title><link>https://www.codewrecks.com/post/old/2008/02/nhibernate-icriteria-count-and-the-missing-of-having-clause/</link><pubDate>Wed, 27 Feb 2008 12:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2008/02/nhibernate-icriteria-count-and-the-missing-of-having-clause/</guid><description>One of the most feared missing feature of the ICriteria API is the possibility to specify condition on projection with Having. Suppose you have this simple connection between a container and a contained object,
The EntityContainer class has a property called Test, is an IList&amp;lt;EntityTest&amp;gt; and EntityTest has a Container property to link back to the container. This is the classic bidirectional association. Now we want to express with ICriteria API the following query</description></item><item><title>Errata corrige</title><link>https://www.codewrecks.com/post/old/2007/08/errata-corrige/</link><pubDate>Mon, 06 Aug 2007 14:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2007/08/errata-corrige/</guid><description>Thanks to my friend Janky for notice that I made a mistake in a previous post. In that post I speak about a “conversation” but actually I was describing a UnitOfWork, that was my fault. The exact definition of a conversation is given in “Hibernate In Action” where Gavin King states that.
“We call a unit of work that completes in several client/server request and response cycles a conversation “.</description></item><item><title>Manage conversation to a database</title><link>https://www.codewrecks.com/post/old/2007/08/manage-conversation-to-a-database/</link><pubDate>Sat, 04 Aug 2007 01:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2007/08/manage-conversation-to-a-database/</guid><description>When you begin to work with an ORM you encounter the concept of conversation, a conversation is the analogous of a transaction for database code, in a conversation I must be able to make a dialog to the ORM using the same context. In database there is no such concept, but I like it, and since sometimes I need to share nhibernate code and standard sql code in the same project I wish to be able to create a “conversation” that spans direct database access and nhibernate code.</description></item><item><title>Writing a Custom Criteria in Nhibernate</title><link>https://www.codewrecks.com/post/old/2007/07/writing-a-custom-criteria-in-nhibernate/</link><pubDate>Thu, 26 Jul 2007 00:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2007/07/writing-a-custom-criteria-in-nhibernate/</guid><description>In the preceding post I showed you a simple class that store in database string or integer values, now I need to create a criteria to do searches in database. NHibernate Criteria API are really good and they are extendible, to create a new criteria simply create a class that inherits from AbstractCriterion. I need to create a Criteria that permits to specify an operator to use (lessthen, greater, equal, etc) specify the type of the data we want to search for, and the two properties of the entity that store respectively the RawData in string format or in integer format, and the type name of the data contained in database.</description></item><item><title>The simpliest thing that could possibly work</title><link>https://www.codewrecks.com/post/old/2007/07/the-simpliest-thing-that-could-possibly-work/</link><pubDate>Wed, 25 Jul 2007 10:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2007/07/the-simpliest-thing-that-could-possibly-work/</guid><description>I have a simple class in my domain to solve a particular problem, it must be able to store the value of a generic parameter, so it can contains actually everything. Without Domain Model and ORM the obvious solution can be a serialization in a ntext or a xml field in sql2005, but I really do not want to handle serialized field into the db from the beginning. For the first release of the project I need only to store String or Integer number in this class, so I decided to follow the principle of “the simpliest thing that could possibly work” , I was in the middle of a TDD session so I came out with a simple solution.</description></item><item><title>Importance of good mappings in nhibernate</title><link>https://www.codewrecks.com/post/old/2007/07/importance-of-good-mappings-in-nhibernate/</link><pubDate>Mon, 16 Jul 2007 23:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2007/07/importance-of-good-mappings-in-nhibernate/</guid><description>Suppose you have created some classes to access customer table in northwind database, a good mapping could be the following.
&amp;lt;?xmlversion=“1.0“encoding=“utf-8“ ?&amp;gt;
&amp;lt;hibernate-mappingxmlns=“urn:nhibernate-mapping-2.2“
namespace=“Nablasoft.NhibernateGen.Domain.Entities“
assembly=“Nablasoft.NhibernateGen.Domain“&amp;gt;
&amp;lt;classname=“Customer“table=“Customers“lazy=“true“ &amp;gt;
&amp;lt;idname=“Id“column=“CustomerId“&amp;gt;
&amp;lt;generatorclass=“identity“ /&amp;gt;
&amp;lt;/id&amp;gt;
&amp;lt;componentname=“AddressInfo“&amp;gt;
&amp;lt;propertyname=“Address“ /&amp;gt;
&amp;lt;propertyname=“City“ /&amp;gt;
&amp;lt;propertyname=“Region“ /&amp;gt;
&amp;lt;propertyname=“PostalCode“ /&amp;gt;
&amp;lt;propertyname=“Country“ /&amp;gt;
&amp;lt;/component&amp;gt;
&amp;amp;lt;componentname=“ContactInfo“&amp;amp;gt; &amp;amp;lt;propertyname=“ContactName“/&amp;amp;gt; &amp;amp;lt;propertyname=“ContactTitle“/&amp;amp;gt; &amp;amp;lt;/component&amp;amp;gt; &amp;amp;lt;propertyname=“CompanyName“/&amp;amp;gt; &amp;amp;lt;propertyname=“FaxNumber“column=“Fax“ /&amp;amp;gt; &amp;amp;lt;propertyname=“PhoneNumber“column=“Phone“/&amp;amp;gt; &amp;lt;/class&amp;gt;
&amp;lt;/hibernate-mapping&amp;gt;
Undoubtedly this mapping works well, but what happens when you use SchemaExport class to recreate the schema of the database from the mapping?</description></item><item><title>NHibernate session per request and HTTPSEssion</title><link>https://www.codewrecks.com/post/old/2007/07/nhibernate-session-per-request-and-httpsession/</link><pubDate>Thu, 12 Jul 2007 01:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2007/07/nhibernate-session-per-request-and-httpsession/</guid><description>In an old post I talked about a strange error I had in a web site. The last time I simply changed the logic not storing entities in httpsession anymore, now I face this error again and I decided to solve it. The problem is in the session per request pattern that I use to share nhibernate session for a whole request. My implementation of Session Per Request simply create a nhibernate session, start a transaction and commit or rollback the transaction with an HTTP Module that intercepts EndRequest Event.</description></item><item><title>A generic IComparerT that works with reflection</title><link>https://www.codewrecks.com/post/old/2007/07/a-generic-icomparer-that-works-with-reflection/</link><pubDate>Mon, 02 Jul 2007 06:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2007/07/a-generic-icomparer-that-works-with-reflection/</guid><description>Today I was speaking with a colleague about creating a generic IComparer&amp;lt;T&amp;gt; that is able to compare two object based on a property discovered through reflection. Such object will be very useful to sort or find object inside collection of objects when you work with a domain model. In a domain we usually have a lot of objects such as customer, order, and so on, and it happens to have an homogeneous collection of objects in memory that needs to be sorted.</description></item><item><title>Object does not match target type</title><link>https://www.codewrecks.com/post/old/2007/07/object-does-not-match-target-type-2/</link><pubDate>Mon, 02 Jul 2007 04:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2007/07/object-does-not-match-target-type-2/</guid><description>This error (Object does not match target type) sometimes happens when you bind a GridView to a list of object returned from a nhibernate Query. It is generated when the first object of the list is a Nhibernate proxy, and it is due to the fact that the GridView uses reflection to inspect the list of objects stored in his datasource to find propertyInfo suitable to access property values of the objects in the list</description></item><item><title>Localizable Entities With Nhibernate Part 3</title><link>https://www.codewrecks.com/post/old/2007/05/localize-entity-with-nhibernate-part-3/</link><pubDate>Tue, 22 May 2007 23:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2007/05/localize-entity-with-nhibernate-part-3/</guid><description>Now that the Entity object works as expected the only issue remaining is the integration with NHibernate. First Step is creating mapping file to store the object in the database. Database structure is very simple, just a table for the Entity class plus another table for localized resources.
Against this database schema we can map the Entity class with this mapping file.
&amp;lt;?xmlversion=“1.0“encoding=“utf-8“ ?&amp;gt;
&amp;lt;hibernate-mappingxmlns=“urn:nhibernate-mapping-2.2“
assembly=“Example1“
namespace=“Example1“
default-lazy=“false“&amp;gt;
&amp;lt;classname=“Entity“table=“Entity“&amp;gt;
&amp;lt;idname=“Id“unsaved-value=“0“&amp;gt;</description></item><item><title>Localizable entities with Nhibernate part 2</title><link>https://www.codewrecks.com/post/old/2007/05/localize-entity-with-nhibernate-part-2/</link><pubDate>Mon, 21 May 2007 23:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2007/05/localize-entity-with-nhibernate-part-2/</guid><description>After the creation of Registry pattern I need to create a localization scheme that will satisfy the remaining points of the list; first of all I write some tests following the best practices of Test Driven Development. The class under test will be called Entity, and has an integer property and two string properties that are to be localized. The scheme I used to localize the entity is to enclose all localizable properties in a different class called EntityResources, and storing all resources of an Entity instance through a simple IDictionary&amp;lt;LangCode, EntityResources&amp;gt;.</description></item><item><title>Localizable entities with Nhibernate Part 1</title><link>https://www.codewrecks.com/post/old/2007/05/localize-entity-with-nhibernate-part-1/</link><pubDate>Mon, 21 May 2007 10:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2007/05/localize-entity-with-nhibernate-part-1/</guid><description>In a recent project I face the need to localize some entity with nhibernate. First of all I found this interesting post of Ayende that show an interesting solution, but it does not fits well in my project. I need a localization scheme with these features.
Orthogonal to the user, and completely transparent The user should be able to change localization text The user can choose whathever language he desires, if no suitable localization exists the entity must returns a default localization The user can add a new localization language for the entity even if the language is not actually present.</description></item><item><title>Caution with disposing sessionTransaction</title><link>https://www.codewrecks.com/post/old/2007/05/caution-with-disposing-sessiontransaction/</link><pubDate>Mon, 07 May 2007 05:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2007/05/caution-with-disposing-sessiontransaction/</guid><description>In nhibernate 1.2.0 beta versions a similar code path works well without problem
ISession session = SessionHelper.GetSession();
session.BeginTransaction();
//do something
session.Transaction.Rollback();
session.Transaction.Dispose();
session.BeginTransaction();
//Do something
session.Transaction.Rollback();
But above code is not legal since a disposed transaction cannot be used anymore. Until version 1.2.0 beta 3 the Dispose method of the Transaction Object did not mark transaction as disposed, so it can be reused. Starting from NHibernate 1.2.0 GA the above code will throw a NullReferenceException.</description></item><item><title>Reassociated object has dirty collection</title><link>https://www.codewrecks.com/post/old/2007/04/reassociated-object-has-dirty-collection/</link><pubDate>Fri, 27 Apr 2007 08:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2007/04/reassociated-object-has-dirty-collection/</guid><description>Today I Hitted this exception working with NHibernate, after consulting some posts on the net I discovered that this exception is raised when a detached object is reattached to a session with lock and the object has a one-to-many relation that was changed. The strange thing is that the same code works perfectly on a test web site and throw this error in production site. Moreover I’m sure that the whole object graph is unchanged and that the collections is not changed</description></item><item><title>Nhibernate bug</title><link>https://www.codewrecks.com/post/old/2007/04/nhibernate-bug/</link><pubDate>Thu, 26 Apr 2007 10:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2007/04/nhibernate-bug/</guid><description>I replicated a bug in nhibernate. I have a simple mapping for a simple class
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 &amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;utf-8&amp;#34; ?&amp;gt; &amp;lt;hibernate-mapping xmlns=&amp;#34;urn:nhibernate-mapping-2.2&amp;#34; namespace=&amp;#34;Ca1&amp;#34; assembly=&amp;#34;Ca1&amp;#34; default-lazy=&amp;#34;false&amp;#34; default-access=&amp;#34;property&amp;#34;&amp;gt; &amp;lt;class name=&amp;#34;Ca1.Cliente&amp;#34; table=&amp;#34;Clienti&amp;#34; &amp;gt; &amp;lt;id name=&amp;#34;Id&amp;#34; column=&amp;#34;Id&amp;#34; type=&amp;#34;int&amp;#34; unsaved-value=&amp;#34;0&amp;#34;&amp;gt; &amp;lt;generator class=&amp;#34;identity&amp;#34; /&amp;gt; &amp;lt;/id&amp;gt; &amp;lt;property name=&amp;#34;Nome&amp;#34; type=&amp;#34;String&amp;#34; column=&amp;#34;Nome&amp;#34; insert=&amp;#34;true&amp;#34; update=&amp;#34;true&amp;#34; /&amp;gt; &amp;lt;property name=&amp;#34;Indirizzo&amp;#34; type=&amp;#34;String&amp;#34; column=&amp;#34;Indirizzo&amp;#34; not-null=&amp;#34;false&amp;#34; insert=&amp;#34;true&amp;#34; update=&amp;#34;true&amp;#34; /&amp;gt; &amp;lt;property name=&amp;#34;LocalizedData&amp;#34; type=&amp;#34;string&amp;#34; update=&amp;#34;false&amp;#34; formula=&amp;#39;(SELECT ClientiLoc.</description></item></channel></rss>
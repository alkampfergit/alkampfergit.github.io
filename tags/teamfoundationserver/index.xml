<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>TeamFoundationServer on Codewrecks</title><link>https://www.codewrecks.com/tags/teamfoundationserver/</link><description>Recent content in TeamFoundationServer on Codewrecks</description><generator>Hugo</generator><language>en</language><lastBuildDate>Mon, 07 Sep 2009 03:00:37 +0200</lastBuildDate><atom:link href="https://www.codewrecks.com/tags/teamfoundationserver/index.xml" rel="self" type="application/rss+xml"/><item><title>Again on assembly numbering during TFS Build</title><link>https://www.codewrecks.com/post/old/2009/09/again-on-assembly-numbering-during-tfs-build/</link><pubDate>Mon, 07 Sep 2009 03:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2009/09/again-on-assembly-numbering-during-tfs-build/</guid><description>&lt;p>If you read &lt;a href="http://www.codewrecks.com/blog/index.php/2009/08/21/take-control-of-assembly-numbering-during-a-tfs-build/">this post&lt;/a>, you can see how to customize a tfs build to modify versioning of the assembly. During that process to find the latest changeset of the repository, to use as &lt;em>revision Number&lt;/em> , I used a direct call to tf.exe tool and a custom Regex msbuild task to parse the result to find desired number. This approach have some weak points, first of all you need to know the location of tf.exe tool, moreover we are bound to the format output of the tool, now I want to show you a different way to obtain the same result.&lt;/p></description></item><item><title>Take control of assembly numbering during a tfs build</title><link>https://www.codewrecks.com/post/old/2009/08/take-control-of-assembly-numbering-during-a-tfs-build/</link><pubDate>Fri, 21 Aug 2009 06:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2009/08/take-control-of-assembly-numbering-during-a-tfs-build/</guid><description>&lt;p>One of the most important stuff in a project build, is &lt;em>the ability to mark the assemblies with unique numbers that permits us to reproduce the build&lt;/em>. Tfs does not have a standard way of doing this, but with a couple of MsBuild actions it is really simple to overcome this limitation. This is a good example that shows how you can extend build script to do complex task.&lt;/p>
&lt;p>First of all I want to change only &lt;a href="http://msdn.microsoft.com/en-us/library/system.reflection.assemblyfileversionattribute.aspx">AssemblyFileVersion&lt;/a> and not the AssemblyVersion, in this way all builds are compatible until someone manually changes AssemblyVersion. A standard technique I like very much is letting the programmers to &lt;em>manage major and minor number manually&lt;/em>, and &lt;em>letting my builds generates build and revision ones&lt;/em>. For build number I want to be able to generate a unique number each build, a sequential generator will be fine; but for revision number I want to use the changeset used to generate the build. To accomplish this we need essentially four macro steps.&lt;/p></description></item><item><title>Problem with TFS2010 Beta error TF31002</title><link>https://www.codewrecks.com/post/old/2009/08/problem-with-tfs2010-beta-error-tf31002/</link><pubDate>Tue, 18 Aug 2009 02:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2009/08/problem-with-tfs2010-beta-error-tf31002/</guid><description>&lt;p>I&amp;rsquo;have a virtual machine with TFS2010 Beta, everything was ok, I&amp;rsquo;ve not worked with it for the last month, this morning I fire the virtual machine again, open visual studio and found that the TFS is not working. It gave me error TF31002, so I begin to investigate the reason for failure.&lt;/p>
&lt;p>When TFS does not work the first thing you should try is to access it from the web interface &lt;a href="http://tfs2010/tfs/web" title="http://tfs2010/tfs/web">http://tfs2010/tfs/web&lt;/a> when I goes to this page it gave me this error.&lt;/p></description></item><item><title>Playing with label in TFS</title><link>https://www.codewrecks.com/post/old/2009/08/playing-with-label-in-tfs/</link><pubDate>Wed, 05 Aug 2009 01:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2009/08/playing-with-label-in-tfs/</guid><description>&lt;p>I just received a question in a &lt;a href="http://www.codewrecks.com/blog/index.php/2009/06/22/creating-a-build-with-tfs/">old post&lt;/a>, the question is if we can generate builds against any applied label on source code in TFS. Tfs build are configured to always retrieve by default the latest code from source control, but you can configure it with no problem.&lt;/p>
&lt;p>All you need is to override the BeforeGet target, and set the &lt;strong>SkipGet&lt;/strong> property to true, in this way you can have complete control on the process of getting the source to compile, you can even grab source from other type of repository, like subversion. With this technique you can rebuild a specific label whenever you want.&lt;/p></description></item></channel></rss>
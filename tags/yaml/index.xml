<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>YAML on Codewrecks</title><link>https://www.codewrecks.com/tags/yaml/</link><description>Recent content in YAML on Codewrecks</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sat, 16 Mar 2019 15:00:37 +0200</lastBuildDate><atom:link href="https://www.codewrecks.com/tags/yaml/index.xml" rel="self" type="application/rss+xml"/><item><title>YAML Build in Azure DevOps</title><link>https://www.codewrecks.com/post/old/2019/03/yaml-build-in-azure-devops/</link><pubDate>Sat, 16 Mar 2019 15:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2019/03/yaml-build-in-azure-devops/</guid><description>Iâ€™ve blogged in the past about YAML build in azure DevOps, but in that early days, that kind of build was a little bit rough and many people still preferred the old build based on visual editing in a browser. One of the main complaint was that the build was not easy to edit and there were some glitch, especially when it is time to access external services.
After months from the first version, the experience is really improved and I strongly suggest you to start trying to migrate existing build to this new system, to take advantage of having definition of build directly in the code, a practice that is more DevOps oriented and that allows you to have different build tasks for different branches.</description></item></channel></rss>
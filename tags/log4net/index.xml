<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>log4net on Codewrecks</title><link>https://www.codewrecks.com/tags/log4net/</link><description>Recent content in log4net on Codewrecks</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 27 Mar 2015 18:00:37 +0200</lastBuildDate><atom:link href="https://www.codewrecks.com/tags/log4net/index.xml" rel="self" type="application/rss+xml"/><item><title>BufferingAppenderSkeleton performance problem in log4net</title><link>https://www.codewrecks.com/post/old/2015/03/bufferingappenderskeleton-performance-problem-in-log4net/</link><pubDate>Fri, 27 Mar 2015 18:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2015/03/bufferingappenderskeleton-performance-problem-in-log4net/</guid><description>The problem Today I was working to Jarvis project and I got a warning from another developer telling me that MongoDbAppender for Log4net slows down the application during a full Rebuild of all projections. In that specific situation we have log level set to DEBUG and the rebuild generates 800k logs inside mongo database, so I’m expecting Mongo Appender to slow down a little bit. The problem is: using a standard FileAppender to verify difference in speed it results that the FileAppender was really faster than the MongoDbAppender.</description></item><item><title>Use Capped collection on MongoAppender for Log4Net</title><link>https://www.codewrecks.com/post/old/2012/05/use-capped-collection-on-mongoappender-for-log4net/</link><pubDate>Tue, 22 May 2012 17:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2012/05/use-capped-collection-on-mongoappender-for-log4net/</guid><description>One of the coolest feature of Mongo is the concept of Capped Collection , or “fixed size” collection. They are based on a FIFO queue where the first record to be discharded is the first inserted, and this is exceptional to create a log-collection that automatically purge all old logs without any user intervention.
To be able to automatically enable this feature on the Log4Net Mongo appender you need to do a little modification to the code, this is because the original code simply gets a reference to the collection with this code.</description></item><item><title>Using Mongo Database to store Log4Net logs</title><link>https://www.codewrecks.com/post/old/2012/03/using-mongo-database-to-store-log4net-logs/</link><pubDate>Mon, 19 Mar 2012 09:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2012/03/using-mongo-database-to-store-log4net-logs/</guid><description>One of the most simple and useful way to introduce a Documents Database like Mongo in your organization is to use as Log Storage. If you use log4Net you can download a Mongo appender capable of storing logs inside mongo with few lines of code and you are ready to go.
The original appender is really good but I’ve done a little modification to make it capable of storing complex item in extended properties, just locate the function LogginEventToBSON and modify the section that stores Composite Properties with following code</description></item><item><title>Managing remote logging with Log4net and WCF</title><link>https://www.codewrecks.com/post/old/2011/09/managing-remote-logging-with-log4net-and-wcf/</link><pubDate>Fri, 02 Sep 2011 14:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2011/09/managing-remote-logging-with-log4net-and-wcf/</guid><description>I&amp;rsquo;ve applications that can work in two distinct configuration, they are based on WPF and MVVM, where the VM communicates with the Domain / Business Logic through services like IXxxxService. All View Models depends from one or more services and thanks to Castle I can decide with configuration file which concrete class to use for each service.
When the software is used internally, it has direct access to the Database, so I configure castle to use the concrete class of the various services, but when the software is deployed to external users, who have no access to the intranet, all communication is done through WCF.</description></item><item><title>Intercept Log4Net message in a Windows application</title><link>https://www.codewrecks.com/post/old/2011/05/intercept-log4net-message-in-a-windows-application/</link><pubDate>Wed, 11 May 2011 06:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2011/05/intercept-log4net-message-in-a-windows-application/</guid><description>Scenario: I have some service that runs in the background, but I want the user to be able to launch interactively with a windows form application and I want to intercept all log4net messages issued by the various components that works in the background.
Thanks to the supereasy way to write an appender in log4net, obtaining this result is really simple..
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 public class Log4NetLogEventSourceAppender : AppenderSkeleton { private Object _syncRoot; public Log4NetLogEventSourceAppender() { _syncRoot = new object(); } /// &amp;lt;summary&amp;gt; /// Occurs when [on log].</description></item><item><title>Extremely slow operation and log4net</title><link>https://www.codewrecks.com/post/old/2010/07/extremely-slow-operation-and-log4net/</link><pubDate>Mon, 05 Jul 2010 10:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2010/07/extremely-slow-operation-and-log4net/</guid><description>I&amp;rsquo;m currently profiling a web application, and I noticed that for some combination of input, a specific search into the database is really really slow. After verifying that the query is not responsible for this problem I fire a profiler, load the page, issue the search and then verify with ant profiler the method that need more time to be executed. The result was that the method that needs more time to be executed is one called Send Alert, that simply logs with log4net to a specific logger called Alert.</description></item><item><title>Difference in log4net between threshold and evaluator</title><link>https://www.codewrecks.com/post/old/2009/10/difference-in-log4net-between-threshold-and-evaluator/</link><pubDate>Thu, 22 Oct 2009 09:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2009/10/difference-in-log4net-between-threshold-and-evaluator/</guid><description>In log4net configuration you can filter out event by level in almost any appender, since it is supported by the AppenderSkeleton, the base class for every appender.
1 2 3 4 5 6 7 &amp;lt;appender name=&amp;#34;GeneralLog&amp;#34; type=&amp;#34;log4net.Appender.RollingFileAppender&amp;#34;&amp;gt; &amp;lt;file value=&amp;#34;Logs/exception.txt&amp;#34; /&amp;gt; &amp;lt;appendToFile value=&amp;#34;true&amp;#34; /&amp;gt; &amp;lt;maximumFileSize value=&amp;#34;10000KB&amp;#34; /&amp;gt; &amp;lt;rollingStyle value=&amp;#34;Size&amp;#34; /&amp;gt; &amp;lt;maxSizeRollBackups value=&amp;#34;5&amp;#34; /&amp;gt; &amp;lt;threshold value=&amp;#34;ERROR&amp;#34;/&amp;gt; Sometimes I see different configuration that uses an evaluator.
1 2 3 &amp;lt;evaluator type=&amp;#34;log4net.</description></item></channel></rss>
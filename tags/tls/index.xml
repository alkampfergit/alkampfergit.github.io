<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>TLS on Codewrecks</title><link>https://www.codewrecks.com/tags/tls/</link><description>Recent content in TLS on Codewrecks</description><generator>Hugo</generator><language>en</language><lastBuildDate>Thu, 03 Nov 2022 16:00:30 +0200</lastBuildDate><atom:link href="https://www.codewrecks.com/tags/tls/index.xml" rel="self" type="application/rss+xml"/><item><title>Configure Data Protection API in .NET Core</title><link>https://www.codewrecks.com/post/security/asp-net-core-data-protection-api/</link><pubDate>Thu, 03 Nov 2022 16:00:30 +0200</pubDate><guid>https://www.codewrecks.com/post/security/asp-net-core-data-protection-api/</guid><description>&lt;p>Asp.NET core and .NET core comes with a nice interface to handle encryption, as &lt;a href="https://learn.microsoft.com/en-us/aspnet/core/security/data-protection/using-data-protection">documented here&lt;/a>. Now my goal is configuring data protection api for multiple instance of a software, so we need to &lt;strong>share keys in a shared location and at the same time keep them secret&lt;/strong>. Luckily enough .NET core already has everything we need.&lt;/p>
&lt;p>The overall solution will need two parameter to our program, &lt;strong>Folder where to store keys and a certificate thumbprint to protect the keys&lt;/strong>. In my scenario I want to use Self Signed Certificate, because I&amp;rsquo;m not using TLS or other form of server side encryption, I only need an extra layer of protection &lt;strong>to allow reading keys only from machines that have my certificate installed&lt;/strong>. First of all I need some code to generate a Self Sign Certificate, to simplify installation I simply want IT guy to use swagger interface to generate a self signed certificate and then install in all the machine he/she needs.&lt;/p></description></item><item><title>Developers and TLS what could possibly go wrong</title><link>https://www.codewrecks.com/post/security/developers-and-tls/</link><pubDate>Sat, 30 Apr 2022 08:13:30 +0200</pubDate><guid>https://www.codewrecks.com/post/security/developers-and-tls/</guid><description>&lt;h1 id="the-problem-of-not-using-tls-in-developer-machines">The problem of not using TLS in developer machines&lt;/h1>
&lt;p>Lots of time ago, at the time Windows Communication Foundation was a thing, there were good &lt;strong>automatic protections by Microsoft that prevent passing credentials in clear text over an unencrypted (non TLS) channel&lt;/strong>. I was amazed by the number of solution you can find in the internet that to solve the problem suggests to developer to create an &lt;strong>unsecure channel that does not perform this check, allowing for clear text credential to be sent in a standard HTTP channel&lt;/strong>.&lt;/p></description></item></channel></rss>
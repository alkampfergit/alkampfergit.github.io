<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>XAML on Codewrecks</title><link>https://www.codewrecks.com/tags/xaml/</link><description>Recent content in XAML on Codewrecks</description><generator>Hugo</generator><language>en</language><lastBuildDate>Fri, 16 Mar 2012 14:00:37 +0200</lastBuildDate><atom:link href="https://www.codewrecks.com/tags/xaml/index.xml" rel="self" type="application/rss+xml"/><item><title>VS11 gives you a fantastic XAML Editor</title><link>https://www.codewrecks.com/post/old/2012/03/vs11-gives-you-a-fantastic-xaml-editor/</link><pubDate>Fri, 16 Mar 2012 14:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2012/03/vs11-gives-you-a-fantastic-xaml-editor/</guid><description>&lt;p>XAML editing in Visual Studio 2010 is not one of the most exiting experience you can have, it works, but compared to Blend it is really poor. One of the thing I really do not like is the lack of information on design time data. Since I really develop every XAML application with MVVM or MVVM like approach, I always have design time data and Iâ€™d like Visual Studio to be able to use it during binding operation.&lt;/p></description></item><item><title>WPF binding a text with decoration</title><link>https://www.codewrecks.com/post/old/2011/04/wpf-binding-a-text-with-decoration/</link><pubDate>Tue, 19 Apr 2011 13:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2011/04/wpf-binding-a-text-with-decoration/</guid><description>&lt;p>Suppose you need to show some decorated text in a MVVM WPF application, something like&lt;/p>
&lt;p>2, &lt;strong>9&lt;/strong> , &lt;strike>16 &lt;/strike>Dicembre 2011&lt;/p>
&lt;p>And all the decorations are inserted by some business logic, for example bold if a value is greater than X, strikethrough if the value is less than Y, or similar logic. I want the interface as clean as possible, and moreover I do not know in advance how many numbers will be in the string.&lt;/p></description></item><item><title>Bind an Image to a property in WPF</title><link>https://www.codewrecks.com/post/old/2010/07/bind-an-image-to-a-property-in-wpf/</link><pubDate>Fri, 23 Jul 2010 11:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2010/07/bind-an-image-to-a-property-in-wpf/</guid><description>&lt;p>The situation is the following: I have a class that has a Status property of type SingleAnalysisStatus enum, and I want to show a different png image, based on the status of the object.&lt;/p>
&lt;p>The solution is to write a custom &lt;a href="http://msdn.microsoft.com/en-us/library/system.windows.data.ivalueconverter.aspx">IValueConverter&lt;/a> that convert from the enum to a valid resource file, but we need to pay specific attention. In WPF you can include images as resources in a very simple way, just include the images in the project and set the &lt;em>build Action&lt;/em> to Resource, as shown in &lt;strong>Figure 1&lt;/strong>.&lt;/p></description></item></channel></rss>
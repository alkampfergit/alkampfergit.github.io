<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Azure Devops on Codewrecks</title><link>https://www.codewrecks.com/tags/azure-devops/</link><description>Recent content in Azure Devops on Codewrecks</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sat, 04 Apr 2020 05:00:37 +0200</lastBuildDate><atom:link href="https://www.codewrecks.com/tags/azure-devops/index.xml" rel="self" type="application/rss+xml"/><item><title>Continuous Integration in GitHub Actions deploy in AzureDevops</title><link>https://www.codewrecks.com/post/old/2020/04/continuous-integration-in-github-actions-deploy-in-azuredevops/</link><pubDate>Sat, 04 Apr 2020 05:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2020/04/continuous-integration-in-github-actions-deploy-in-azuredevops/</guid><description>&lt;p>My dear friend Matteo just published an &lt;a href="https://mattvsts.github.io/2020/04/03/CI-on-github-actions-CD-on-Azure-Pipelines/">interesting article on integration between GitHub actions and Azure Devops Pipeline here&lt;/a>. I have a different scenario where &lt;a href="http://www.codewrecks.com/blog/index.php/2020/03/22/github-actions-plus-gitversion/">I’ve already published a GitHub release from a GitHub action&lt;/a>, but I have nothing ready in GitHub to release in my machines.&lt;/p>
&lt;blockquote>
&lt;p>While GitHub is really fantastic for source code and starts having a good support for CI with Actions, in the release part it still miss a solution. Usually this is not a problem, because we have Azure DevOps or other products that can fill the gap.&lt;/p></description></item><item><title>Azure DevOps pipeline template for build and release NET core project</title><link>https://www.codewrecks.com/post/old/2020/03/azure-devops-pipeline-template-for-build-and-release-net-core-project/</link><pubDate>Sun, 29 Mar 2020 09:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2020/03/azure-devops-pipeline-template-for-build-and-release-net-core-project/</guid><description>&lt;p>Some days ago I’ve blogged on how to release projects on GitHub with actions, now it is time to understand &lt;strong>how to do a similar thing in Azure DevOps to build / test / publish a.NET core library with nuget&lt;/strong>. The purpose is to create a generic template that can be reused on every general that needs to build an utility dll, run test and publish to a Nuget feed.&lt;/p></description></item><item><title>Sample report for Azure DevOps</title><link>https://www.codewrecks.com/post/old/2019/08/sample-report-for-azure-devops/</link><pubDate>Mon, 19 Aug 2019 06:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2019/08/sample-report-for-azure-devops/</guid><description>&lt;p>Reporting was always a pain point in Azure DevOps, because people used on SQL Server reporting Services for the on-premise version, missed a similar ability to create custom reports in Azure Dev Ops.&lt;/p>
&lt;p>Now you have a nice integration with Power BI and a &lt;a href="https://docs.microsoft.com/en-us/azure/devops/report/powerbi/sample-odata-overview?view=azure-devops">nice article here&lt;/a> that explains how to connect Power BI to your instance and create some basic query. &lt;strong>The nice part is that you can use a query that will connect directly with the OData feed, no need to install anything.&lt;/strong> &lt;a target="_blank" href="https://docs.microsoft.com/en-us/azure/devops/report/powerbi/_img/odatapowerbi-advancededitor-replaced.png?view=azure-devops"> &lt;img src="https://docs.microsoft.com/en-us/azure/devops/report/powerbi/_img/odatapowerbi-advancededitor-replaced.png?view=azure-devops" alt="Power BI - Advanced Editor - Replace strings in query" />&lt;/a>&lt;/p></description></item><item><title>Azure DevOps is now 150 sprints old</title><link>https://www.codewrecks.com/post/old/2019/04/azure-devops-is-now-150-sprints-old/</link><pubDate>Fri, 19 Apr 2019 20:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2019/04/azure-devops-is-now-150-sprints-old/</guid><description>&lt;p>I remember old days when Azure DevOps was still in private preview, and yet it was really a good product, &lt;strong>now 150 sprints passed, and the product is better than ever&lt;/strong>. Not everything is perfect, but, as users, we can expect new feature to being deployed each 3 weeks, the duration of Microsoft Sprint.&lt;/p>
&lt;p>This means that now the product is 450 Weeks old, and finally we got a little nice feature that shows up news in the front page.&lt;/p></description></item><item><title>Troubleshoot YAML Build first run</title><link>https://www.codewrecks.com/post/old/2019/04/troubleshoot-yaml-build-first-run/</link><pubDate>Sat, 13 Apr 2019 08:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2019/04/troubleshoot-yaml-build-first-run/</guid><description>&lt;p>&lt;strong>Scenario&lt;/strong> : You create a branch in your git repository to start with a new shiny YAML Build definition for Azure Devops, you create a yaml file, push the branch in Azure Devops and Create a new Build based on that YAML definition. Everything seems ok, but when you press the run button you got and error&lt;/p>
&lt;blockquote>
&lt;p>Could not find a pool with name Default. The pool does not exist or has not been authorized for use. For authorization details, refer to &lt;a href="https://aka.ms/yamlauthz">https://aka.ms/yamlauthz&lt;/a>.&lt;/p></description></item><item><title>YAML Build in Azure DevOps</title><link>https://www.codewrecks.com/post/old/2019/03/yaml-build-in-azure-devops/</link><pubDate>Sat, 16 Mar 2019 15:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2019/03/yaml-build-in-azure-devops/</guid><description>&lt;p>I’ve blogged in the past about &lt;strong>YAML build in azure DevOps, but in that early days, that kind of build was a little bit rough&lt;/strong> and many people still preferred the old build based on visual editing in a browser. One of the main complaint was that the build was not easy to edit and there were some glitch, especially when it is time to access external services.&lt;/p>
&lt;p>&lt;strong>After months from the first version, the experience is really improved and I strongly suggest you to start trying to migrate existing build to this new system,&lt;/strong> to take advantage of having definition of build directly in the code, a practice that is more DevOps oriented and that allows you to have different build tasks for different branches.&lt;/p></description></item><item><title>Find work Items in Azure DevOps was ever operator</title><link>https://www.codewrecks.com/post/old/2019/03/find-work-items-in-azure-devops-was-ever/</link><pubDate>Thu, 07 Mar 2019 12:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2019/03/find-work-items-in-azure-devops-was-ever/</guid><description>&lt;p>Query language in Azure DevOps is really rich and sometimes people really misses its power, struggling to find and manage all work item with the standard boards. &lt;strong>There are a lot of times in a complex project when you are not able to find a specific Work Item and you feel lost because you know that it is in the system, but you just does not know how to find id.&lt;/strong> &amp;gt; &lt;strong>When you have thousands or more Work Items in a TFS or AzDO instance, finding a specific Work Item can become difficult if you do not remember perfectly its title, but you remember only some general characteristics.&lt;/strong> One not so common criteria is is: “I &lt;strong>remember a certain work item that was assigned to me, but I cannot find anymore in my assigned work Items&lt;/strong>.”. This  can happens because it was reassigned to another member so you are not able to find it because you remember the general topic of the Work Item but you forgot the title.&lt;/p></description></item><item><title>Change Work Item Type in a fresh installation of Azure DevOps server</title><link>https://www.codewrecks.com/post/old/2019/01/change-work-item-type-in-a-fresh-installation-of-azure-devops-server/</link><pubDate>Sat, 26 Jan 2019 10:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2019/01/change-work-item-type-in-a-fresh-installation-of-azure-devops-server/</guid><description>&lt;p>If you want to use Azure DevOps I strongly suggest you to use cloud version &lt;a href="https://dev.azure.com">https://dev.azure.com&lt;/a>, but &lt;strong>if you really need to have it on premise, you can install Team Foundation Server, now renamed to Azure DevOps Server&lt;/strong>.&lt;/p>
&lt;p>One of the most waited feature for the on-premise version is the ability to change work item Type and to move work item between project, a feature present in Azure DevOps Server, but that needs a complete disable of Reporting Services to work, as I discussed &lt;a href="http://www.codewrecks.com/blog/index.php/2018/12/16/tfs-2019-change-work-item-type-and-move-between-team-project/">in an old Post&lt;/a>.&lt;/p></description></item><item><title>Sonar Analysis of Python with Azure DevOps pipeline</title><link>https://www.codewrecks.com/post/old/2019/01/sonar-analysis-of-python-with-azure-devops-pipeline/</link><pubDate>Sat, 05 Jan 2019 11:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2019/01/sonar-analysis-of-python-with-azure-devops-pipeline/</guid><description>&lt;p>Once you have &lt;a href="http://www.codewrecks.com/blog/index.php/2018/11/20/run-code-coverage-for-python-project-with-azure-devops/">test and Code Coverage&lt;/a> for your build of Python code, &lt;strong>last step for a good build is adding support for Code Analysis with Sonar/SonarCloud.&lt;/strong> SonarCloud is the best option if your code is open source, because it is free and you should not install anything except the &lt;a href="https://marketplace.visualstudio.com/items?itemName=SonarSource.sonarcloud">free addin in Azure Devops Marketplace&lt;/a>.&lt;/p>
&lt;p>From original build you need only to add two steps: PrepareAnalysis onSonarCloud and Run SonarCloud analysis, in the same way you do analysis for a.NET project.&lt;/p></description></item><item><title>Create Word document from Work Items</title><link>https://www.codewrecks.com/post/old/2018/12/create-word-document-from-work-items/</link><pubDate>Mon, 31 Dec 2018 11:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2018/12/create-word-document-from-work-items/</guid><description>&lt;p>Post in the series:&lt;/p>
&lt;ol>
&lt;li>API &lt;a href="http://www.codewrecks.com/blog/index.php/2018/12/28/azure-devops-api-connection/">Connection&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.codewrecks.com/blog/index.php/2018/12/28/azure-devops-api-retrieve-work-items-information/">Retrieve Work Items Information&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.codewrecks.com/blog/index.php/2018/12/31/azure-devops-api-embed-images-into-html/">Azure DevOps API, Embed images into  HTML&lt;/a>&lt;/li>
&lt;/ol>
&lt;p>Now we have all the prerequisites in place to connect to an Azure DevOps account, execute a query to grab all work items of a sprint and modifying HTML of Rich Edit fields to embed images. It is time to create a word document.&lt;/p>
&lt;p>To have a better look and feel of exported document, &lt;strong>the best approach is using the concept of Templates created by simple Word documents&lt;/strong>. With this technique we can use all the styles, formatting directly in Word, then use some placeholder to specify where you want to include fields of work Items.&lt;/p></description></item><item><title>Azure DevOps API Embed images into html</title><link>https://www.codewrecks.com/post/old/2018/12/azure-devops-api-embed-images-into-html/</link><pubDate>Mon, 31 Dec 2018 09:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2018/12/azure-devops-api-embed-images-into-html/</guid><description>&lt;p>Post in the series:&lt;/p>
&lt;ol>
&lt;li>API &lt;a href="http://www.codewrecks.com/blog/index.php/2018/12/28/azure-devops-api-connection/">Connection&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.codewrecks.com/blog/index.php/2018/12/28/azure-devops-api-retrieve-work-items-information/">Retrieve Work Items Information&lt;/a>&lt;/li>
&lt;/ol>
&lt;p>Before going to generate a Word File from Work Item Data we need to solve a little problem with HTML content in Work Item fields. As you know Azure DevOps has a rich web editor that allows you to create complex text in some fields, like Description, the problem is: &lt;strong>whenever you copy and paste images inside the Web Editor, those images were added as Work Item attachments and the real HTML content&lt;/strong> &lt;strong>is just a reference to the attachmen Url.&lt;/strong> If you want to generate a consistent Word or export to whatever destination you want, you should manipulate html to embed the image, or the html will be not consistent.&lt;/p></description></item><item><title>Run code coverage for Python project with Azure DevOps</title><link>https://www.codewrecks.com/post/old/2018/11/run-code-coverage-for-python-project-with-azure-devops/</link><pubDate>Tue, 20 Nov 2018 17:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2018/11/run-code-coverage-for-python-project-with-azure-devops/</guid><description>&lt;p>Creating a &lt;a href="http://www.codewrecks.com/blog/index.php/2018/11/12/run-python-test-with-azure-devops-pipeline/">simple build that runs Python tests written with PyTest&lt;/a> framework is really simple, but now &lt;strong>the next step is trying to have code coverage&lt;/strong>. Even if I’m pretty new to Python, having code coverage in a build is really simple, thanks to a specific task that comes out-of-the-box with Azure DevOps: Publish Code Coverage.&lt;/p>
&lt;blockquote>
&lt;p>In Azure DevOps you can create build with Web Editor or with simple YAML file, I prefer YAML but since I’ve demonstrated in the old post YAML build for Python, now I’m creating a simple build with standard Web Editor&lt;/p></description></item><item><title>Set new Azure DevOps url for your account</title><link>https://www.codewrecks.com/post/old/2018/11/set-new-azure-devops-url-for-your-account/</link><pubDate>Tue, 20 Nov 2018 08:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2018/11/set-new-azure-devops-url-for-your-account/</guid><description>&lt;p>Due to switching from the old url format organization.visualstudio.com to dev.azure.com/organization it &lt;strong>is a good practice to start transition to the new url as soon as possible&lt;/strong>. The old url will continue to function for a long time, but the new official domain is going to become the default.&lt;/p>
&lt;p>Every user can still use both the new or old domain name, but there is a settings in the general setting page of the account that globally enable the new url.&lt;/p></description></item><item><title>Analyze your GitHub project for free with Azure DevOps and SonarCloud</title><link>https://www.codewrecks.com/post/old/2018/11/analyze-your-github-project-for-free-with-azure-devops-and-sonarcloud/</link><pubDate>Sun, 04 Nov 2018 09:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2018/11/analyze-your-github-project-for-free-with-azure-devops-and-sonarcloud/</guid><description>&lt;p>I’ve blogged some weeks ago on how to &lt;a href="http://www.codewrecks.com/blog/index.php/2018/10/10/azure-devops-pipelines-and-sonar-cloud-gives-free-analysis-to-your-os-project/">analyze OS code with SonarCloud&lt;/a>, but it is time to update the post, because &lt;strong>if you want to use SonarCloud you have a dedicated extension in the marketplace&lt;/strong>.&lt;/p>
&lt;p>&lt;a href="https://www.codewrecks.com/blog/wp-content/uploads/2018/10/image-17.png">&lt;a target="_blank" href="https://www.codewrecks.com/blog/wp-content/uploads/2018/10/image_thumb-17.png"> &lt;img src="https://www.codewrecks.com/blog/wp-content/uploads/2018/10/image_thumb-17.png" alt="image" />&lt;/a>&lt;/a>&lt;/p>
&lt;p>&lt;em>&lt;strong>Figure 1&lt;/strong>&lt;/em>: &lt;em>Official SonarCloud extension in the marketplace.&lt;/em>&lt;/p>
&lt;p>One of the great feature of Azure DevOps is its extendibility, that allows people external to Microsoft to create extensions to expand the possibility of the tool. Once you’ve added the SonarCloud extension to your account, &lt;strong>you have a whole bunch new build templates you can use&lt;/strong> :&lt;/p></description></item><item><title>Welcome Azure DevOps</title><link>https://www.codewrecks.com/post/old/2018/09/welcome-azure-devops/</link><pubDate>Tue, 11 Sep 2018 16:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2018/09/welcome-azure-devops/</guid><description>&lt;p>&lt;strong>Yesterday Microsoft announced a change in naming for VSTS, now branded as Azure DevOps.&lt;/strong> You can read most of the details in &lt;a href="https://azure.microsoft.com/en-us/blog/introducing-azure-devops/">this blog post&lt;/a> and if you are using VSTS right now you will not have a big impact in the future. Event is this is just a rebranding of the service, there are a couple of suggestion I’d like to give you to have a smoother transition.&lt;/p>
&lt;blockquote>
&lt;p>Visual  Studio Team Services was rebranded in Azure DevOps, this will not impact your existing VSTS projects, but it is wise to start planning for a smooth transition.&lt;/p></description></item></channel></rss>
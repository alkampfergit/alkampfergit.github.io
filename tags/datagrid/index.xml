<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>DataGrid on Codewrecks</title><link>https://www.codewrecks.com/tags/datagrid/</link><description>Recent content in DataGrid on Codewrecks</description><generator>Hugo</generator><language>en</language><lastBuildDate>Fri, 23 Nov 2012 22:00:37 +0200</lastBuildDate><atom:link href="https://www.codewrecks.com/tags/datagrid/index.xml" rel="self" type="application/rss+xml"/><item><title>Survive binding of DataGrid in WPF</title><link>https://www.codewrecks.com/post/old/2012/11/survive-binding-of-datagrid-in-wpf/</link><pubDate>Fri, 23 Nov 2012 22:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2012/11/survive-binding-of-datagrid-in-wpf/</guid><description>DataGrid is one of the most annoying control in WPF because it sometimes has really different behaviors from other controls. The very first problem is that inside DataGridColumns the DataContext is not what you expect. Suppose you have this simple scenario in MVVM: an ObservableCollection of Objects, each one has IsSelected property and you want to bind that property to a DataGridCheckBox column with a CheckBox in the header that permits you to Select all and Unselect all.</description></item><item><title>Wpf DataGrid poor performance on sorting</title><link>https://www.codewrecks.com/post/old/2012/07/wpf-datagrid-poor-performance-on-sorting/</link><pubDate>Fri, 06 Jul 2012 08:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2012/07/wpf-datagrid-poor-performance-on-sorting/</guid><description>I’ve a WPF View where with a simple DataGrid that shows hundreds of rows , it all works fine until I added sorting capabilities; when I click on the header to sort content, it took almost 5 seconds to sort 500 elements, and this kind of performance is simply unacceptable. The first step was firing a profiler to understand where the code is slow, and I found this result.
Figure 1: Profiler shows me that almost all the time was spent in the UpdateLayout framework function</description></item></channel></rss>
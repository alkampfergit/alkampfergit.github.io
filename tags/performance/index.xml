<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Performance on Codewrecks</title><link>https://www.codewrecks.com/tags/performance/</link><description>Recent content in Performance on Codewrecks</description><generator>Hugo</generator><language>en</language><lastBuildDate>Wed, 13 May 2015 06:00:37 +0200</lastBuildDate><atom:link href="https://www.codewrecks.com/tags/performance/index.xml" rel="self" type="application/rss+xml"/><item><title>Limit maximum memory of SQL Server in TFS environment</title><link>https://www.codewrecks.com/post/old/2015/05/limit-maximum-memory-of-sql-server-in-tfs-environment/</link><pubDate>Wed, 13 May 2015 06:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2015/05/limit-maximum-memory-of-sql-server-in-tfs-environment/</guid><description>&lt;p>If you are a small shop using on-premise TFS, probably you’ll have a single machine installation for Data and App tier for your TFS. While installing a Build server on App or Data tier is highly discouraged, &lt;strong>using a single machine for Data and App tier is a viable solution for small and medium team&lt;/strong> , and with virtualization is quite easy to move machine to a more powerful hardware or give it more RAM if the usage or TFS increase performances starts to degrade.&lt;/p></description></item><item><title>BufferingAppenderSkeleton performance problem in log4net</title><link>https://www.codewrecks.com/post/old/2015/03/bufferingappenderskeleton-performance-problem-in-log4net/</link><pubDate>Fri, 27 Mar 2015 18:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2015/03/bufferingappenderskeleton-performance-problem-in-log4net/</guid><description>&lt;h2 id="the-problem">The problem&lt;/h2>
&lt;p>Today I was working to &lt;a href="http://www.ienumerable.it/">Jarvis&lt;/a> project and I got a warning from another developer telling me that MongoDbAppender for Log4net slows down the application during a full Rebuild of all projections. In that specific situation we have log level set to DEBUG and the rebuild generates 800k logs inside mongo database, so I’m expecting Mongo Appender to slow down a little bit. The problem is: &lt;strong>using a standard FileAppender to verify difference in speed it results that the FileAppender was really faster than the MongoDbAppender&lt;/strong>.&lt;/p></description></item><item><title>Wcf over HTTPS compression binary binding and some measurement</title><link>https://www.codewrecks.com/post/old/2012/09/wcf-over-https-compression-binary-binding-and-some-measurement/</link><pubDate>Tue, 11 Sep 2012 20:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2012/09/wcf-over-https-compression-binary-binding-and-some-measurement/</guid><description>&lt;p>I’ve an application that is composed by &lt;strong>WPF clients deployed over the internet and a central WCF service exposed over Https for security reason&lt;/strong> , everything works fine, but as the number of clients grows, performance starts to decrease a little. Since I have a great number of clients that operates behind a single standard ADSL 8 MBit (used for everything, mail, browsing, etc..), I measured and found that bandwidth is becoming a bottleneck, so &lt;strong>I need to reduce amount of traffic between clients and server&lt;/strong>.&lt;/p></description></item><item><title>Use Sql Server Query Hints with NHibernate HQL and ICriteria</title><link>https://www.codewrecks.com/post/old/2011/07/use-sql-server-query-hints-with-nhibernate-hql-and-icriteria/</link><pubDate>Sat, 23 Jul 2011 08:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2011/07/use-sql-server-query-hints-with-nhibernate-hql-and-icriteria/</guid><description>&lt;p>When you work with Big databases with many records and &lt;em>not uniform distribution of data into columns used for join or where conditions&lt;/em>, you can have really bad performance problem due to Query Plan caching. I do not want to give a deep explanation of this problem, you can find information &lt;a href="http://legeronline.blogspot.com/2009/03/evils-of-slow-paramaterized-query-plans.html">here&lt;/a>, but I want to outline the general problem to make clear what is happening.&lt;/p>
&lt;p>We can argue a lot why this problem happens in a database engine, but basically I have a really bad situation where the db stores data of multiple customers with really non uniform distribution of data (some of them have ~1000 rows for each table, others have ~100.000 rows in some of the tables).&lt;/p></description></item><item><title>Nhibernate BatchSize and massive insert</title><link>https://www.codewrecks.com/post/old/2011/05/nhibernate-batchsize-and-massive-insert/</link><pubDate>Fri, 13 May 2011 16:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2011/05/nhibernate-batchsize-and-massive-insert/</guid><description>&lt;p>I have an application that analyze some data and insert about 1000 objects for each cycle into the database. The insertion &lt;strong>needs to be transactional&lt;/strong> , and I need to insert 500 instances of object A and 500 instances of object B, and each B have a reference to A.&lt;/p>
&lt;p>When I launch the application I see this insert pattern, even if I enabled batch size in Nhibernate.&lt;/p>
&lt;p>&lt;a href="https://www.codewrecks.com/blog/wp-content/uploads/2011/05/image6.png">&lt;a target="_blank" href="https://www.codewrecks.com/blog/wp-content/uploads/2011/05/image_thumb6.png"> &lt;img src="https://www.codewrecks.com/blog/wp-content/uploads/2011/05/image_thumb6.png" alt="image" />&lt;/a>&lt;/a>&lt;/p></description></item><item><title>Performance of Lists</title><link>https://www.codewrecks.com/post/old/2011/01/performance-of-lists/</link><pubDate>Wed, 19 Jan 2011 09:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2011/01/performance-of-lists/</guid><description>&lt;p>In a &lt;a href="http://www.codewrecks.com/blog/index.php/2011/01/18/linq-distinct-with-lambda/">previous post&lt;/a> I explained how to create a simple LINQ extension method to use the Distinct() method with a lambda and not an IEqualityComparer. That solution uses a simple List&amp;lt;T&amp;gt; as temporary storage to implement the concept of &lt;em>distinct elements&lt;/em>. To verify if an object was already returned I simply searched into the temp List&amp;lt;T&amp;gt; looking if an element that satisfy the Predicate, this will permit me to return only distinct elements.&lt;/p></description></item></channel></rss>
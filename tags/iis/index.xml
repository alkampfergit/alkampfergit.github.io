<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>IIS on Codewrecks</title><link>https://www.codewrecks.com/tags/iis/</link><description>Recent content in IIS on Codewrecks</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sat, 20 Mar 2021 10:00:00 +0200</lastBuildDate><atom:link href="https://www.codewrecks.com/tags/iis/index.xml" rel="self" type="application/rss+xml"/><item><title>Avoid IIS to bind to every IP Address port and other amenities</title><link>https://www.codewrecks.com/post/general/iis-bind-ip/</link><pubDate>Sat, 20 Mar 2021 10:00:00 +0200</pubDate><guid>https://www.codewrecks.com/post/general/iis-bind-ip/</guid><description>&lt;p>Let&amp;rsquo;s suppose you have a Microservices based solution, you have many different processes and each process communicates with standard WebAPI. The usual developer solution is &lt;strong>using a different port for each different program&lt;/strong>, this lead to http://localhost:12345, http://localhost:12346 and so on. This is far from being optimal, because in production, probably, each service could potentially be exposed with a different hostname, something like &lt;a href="https://auth.mysoftware.com">https://auth.mysoftware.com&lt;/a>, &lt;a href="https://orders.mysoftware.com">https://orders.mysoftware.com&lt;/a> and so on. Another problem is that, in production, everything &lt;strong>must be exposed with https&lt;/strong> and too many times developer are not testing with TLS enabled.&lt;/p></description></item><item><title>How to test SSL based WCF services</title><link>https://www.codewrecks.com/post/old/2011/11/how-to-test-ssl-based-wcf-services/</link><pubDate>Mon, 21 Nov 2011 11:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2011/11/how-to-test-ssl-based-wcf-services/</guid><description>&lt;p>I usually work with WCF service that needs to be secured with Certificates or simply using HTTPS. The usual question from other dev in the team is “how can I simulate HTTPS to work with WCF?”&lt;/p>
&lt;p>The problem arise that to test https sites, people usually work with IIS self issued certificates.&lt;/p>
&lt;p>&lt;a href="https://www.codewrecks.com/blog/wp-content/uploads/2011/11/SNAGHTMLa82f3d.png">&lt;a target="_blank" href="https://www.codewrecks.com/blog/wp-content/uploads/2011/11/SNAGHTMLa82f3d_thumb.png"> &lt;img src="https://www.codewrecks.com/blog/wp-content/uploads/2011/11/SNAGHTMLa82f3d_thumb.png" alt="SNAGHTMLa82f3d" />&lt;/a>&lt;/a>&lt;/p>
&lt;p>&lt;em>&lt;strong>Figure 1&lt;/strong>&lt;/em>: &lt;em>Self-Signed certificate in IIS&lt;/em>&lt;/p>
&lt;p>This works great for sites, you can use the auto signed certificate in your sites in https binding, then when you navigate to the site you usually got an error because the certificate is not issued for the right site. What I need is usually to modifiy the hosts file in windows, creating an alias of &lt;a href="http://www.mydomain.com">www.mydomain.com&lt;/a> to 127.0.0.1, so I can directly point to the right address with WCF client application and can simply manage to use the local or remote service simply modifying the hosts file.&lt;/p></description></item><item><title>ASpNEt handlers locked down in Windows 7 IIS</title><link>https://www.codewrecks.com/post/old/2011/08/asp-net-handlers-locked-down-in-windows-7-iis/</link><pubDate>Thu, 04 Aug 2011 15:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2011/08/asp-net-handlers-locked-down-in-windows-7-iis/</guid><description>&lt;p>I&amp;rsquo;m configuring a site on a new virtual machine and when I browse to a site, IIS gives me this error&lt;/p>
&lt;blockquote>
&lt;p>This configuration section cannot be used at this path. This happens when the section is locked at a parent level. Locking is either by default (overrideModeDefault=&amp;ldquo;Deny&amp;rdquo;), or set explicitly by a location tag with overrideMode=&amp;ldquo;Deny&amp;rdquo; or the legacy allowOverride=&amp;ldquo;false&amp;rdquo;.&lt;/p>&lt;/blockquote>
&lt;p>I don&amp;rsquo;t know why, but on this Windows 7 virtual machine it seems that this section of the configuration is locked. If you find this error you can simply open an elevated permission command prompt, go to the &lt;em>C:\Windows\System32\inetsrv&lt;/em> directory and type the commands&lt;/p></description></item></channel></rss>
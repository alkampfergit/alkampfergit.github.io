<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CQRS on Codewrecks</title><link>https://www.codewrecks.com/tags/cqrs/</link><description>Recent content in CQRS on Codewrecks</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sat, 04 Aug 2012 08:00:37 +0200</lastBuildDate><atom:link href="https://www.codewrecks.com/tags/cqrs/index.xml" rel="self" type="application/rss+xml"/><item><title>Scan all assembly of the directory to find DomainEvent Handlers and command executors</title><link>https://www.codewrecks.com/post/old/2012/08/scan-all-assembly-of-the-directory-to-find-domainevent-handlers-and-command-executors/</link><pubDate>Sat, 04 Aug 2012 08:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2012/08/scan-all-assembly-of-the-directory-to-find-domainevent-handlers-and-command-executors/</guid><description>&lt;p>Structures based on &lt;a href="http://www.codewrecks.com/blog/index.php/2012/07/25/convention-over-configuration-domain-event-and-commanding/">Commands, Events and respective handle&lt;/a>r are really flexible and to maximize this flexibility &lt;strong>adopting a convention over configuration is the key of success&lt;/strong>. If you look at this simple &lt;a href="https://github.com/andreabalducci/Prxm.Cqrs">playground project&lt;/a> you can find that &lt;em>we adopted a convention where a domain handler is any object that implements the IDomainHandler marker interface and any public Method that returns void and accepts a single parameter that inherits from the base class DomainEvent is a method handler&lt;/em>. The code to discover handlers is really simple and primitive, but serves the purpose of showing the basic concepts.&lt;/p></description></item><item><title>SimpleCQRS appliers and convention over configuration</title><link>https://www.codewrecks.com/post/old/2012/06/simplecqrs-appliers-and-convention-over-configuration/</link><pubDate>Mon, 25 Jun 2012 14:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2012/06/simplecqrs-appliers-and-convention-over-configuration/</guid><description>&lt;p>I was playing around with &lt;a href="https://github.com/andreabalducci/SimpleCQRS">&lt;strong>SimpleCQRS&lt;/strong>&lt;/a>  &lt;strong>project&lt;/strong> because my friend &lt;a href="http://www.ienumerable.it/">Andrea&lt;/a> started to work on it recently. &lt;strong>We now have Mongo repository for the events&lt;/strong> so I forked the project to have a look on it and contribute to Andrea works. I’ve opened the solution, ran the program, created some InventoryItems, then I look into mongo database to verify if snapshot of objects are correctly taken but I found this.&lt;/p>
&lt;p>&lt;a href="https://www.codewrecks.com/blog/wp-content/uploads/2012/06/image5.png">&lt;a target="_blank" href="https://www.codewrecks.com/blog/wp-content/uploads/2012/06/image_thumb5.png"> &lt;img src="https://www.codewrecks.com/blog/wp-content/uploads/2012/06/image_thumb5.png" alt="image" />&lt;/a>&lt;/a>&lt;/p></description></item></channel></rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Workflow on Codewrecks</title><link>https://www.codewrecks.com/tags/workflow/</link><description>Recent content in Workflow on Codewrecks</description><generator>Hugo</generator><language>en</language><lastBuildDate>Mon, 18 Jan 2010 10:00:37 +0200</lastBuildDate><atom:link href="https://www.codewrecks.com/tags/workflow/index.xml" rel="self" type="application/rss+xml"/><item><title>Set verbosity of logging during Tfs 2010 build</title><link>https://www.codewrecks.com/post/old/2010/01/set-verbosity-of-logging-during-tfs-2010-build/</link><pubDate>Mon, 18 Jan 2010 10:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2010/01/set-verbosity-of-logging-during-tfs-2010-build/</guid><description>To test a little bit how you can log information during a TFS 2010 build you can create a simple activity , this activity simply has a Message property and log three messages, at different BuildMessageImportance level
The utility function is the following one
Really simple isn&amp;rsquo;t it? :). Now you need to insert this custom action inside a standard tfs build definition file, to make this happens I need to remind you that you need to include the xaml build definition file in a project included in a solution where your custom action is defined, if not you cannot use the designer and you need to manually edit xaml file.</description></item><item><title>Deploy a database project with tfs build 2010</title><link>https://www.codewrecks.com/post/old/2010/01/deploy-a-database-project-with-tfs-build-2010/</link><pubDate>Mon, 04 Jan 2010 15:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2010/01/deploy-a-database-project-with-tfs-build-2010/</guid><description>If you want to deploy a database project into a target sql server instance during a tfs 2010 build, you can use with success the basic MsBuildTask, similar to tfs2008.
I decided to deploy the database, only if the tests are ok and the build is ok, so I place a condition activity under the test phase and I set the condition to pass only if the test and build status are different from Failed</description></item><item><title>Using graphical editor with custom action in tfs2010 buils</title><link>https://www.codewrecks.com/post/old/2009/12/using-graphical-editor-with-custom-action-in-tfs2010-buils/</link><pubDate>Tue, 08 Dec 2009 17:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2009/12/using-graphical-editor-with-custom-action-in-tfs2010-buils/</guid><description>In last post I showed how to build a custom code activity to customize tfsbuild for beta2 of tfs2010. In that post I inserted custom action manually in the xaml file of the build definition, and I know that this can be a pain, if you want to insert a custom action in a specific part of the workflow.
A simple trick is the following, copy the build definition into a test project that belong to the solution where your custom action belong, then add to the project, and you will see that your custom action magically appears into the toolbox.</description></item><item><title>Custom Activities in TFS2010</title><link>https://www.codewrecks.com/post/old/2009/12/custom-activities-in-tfs2010/</link><pubDate>Mon, 07 Dec 2009 11:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2009/12/custom-activities-in-tfs2010/</guid><description>There is a good post on Jim Lamb&amp;rsquo;s blog on how to customize tfs2010 build, but I decided to blog my experience because I need some more time to make it work.
The steps to create a custom activities in tfs2010 are the following ones. First of all create an activity, like this simple TweetActivity one. Respect the example of Jim, I need to add also the BuildExtensionAttribute to make it run.</description></item></channel></rss>
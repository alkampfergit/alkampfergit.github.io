<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>VS2012 on Codewrecks</title><link>https://www.codewrecks.com/tags/vs2012/</link><description>Recent content in VS2012 on Codewrecks</description><generator>Hugo</generator><language>en</language><lastBuildDate>Thu, 14 Mar 2013 07:00:37 +0200</lastBuildDate><atom:link href="https://www.codewrecks.com/tags/vs2012/index.xml" rel="self" type="application/rss+xml"/><item><title>New Unit Test functionality in VS2012 Update 2 Test Playlist</title><link>https://www.codewrecks.com/post/old/2013/03/new-unit-test-functionality-in-vs2012-update-2-test-playlist/</link><pubDate>Thu, 14 Mar 2013 07:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2013/03/new-unit-test-functionality-in-vs2012-update-2-test-playlist/</guid><description>&lt;p>In VS2012 we have support for basically any Unit Test Framework, because the new test runner is plugin based, and everyone can write plugin to make it compatible with the framework of choice. From the original version that was released with Visual Studio 2012 RTM, in Update 1 and Update 2 the test runner gained a lot of new feature, really useful for everyday work.&lt;/p>
&lt;p>&lt;strong>Update 2 introduced the concept of “Test Playlist”&lt;/strong> : basically a simple tool to create a subset of Unit Tests that are meant to be managed together. Since Update 1 already introduced the concept of Traits to group tests, this feature can be seen as a duplicate, but traits and playlist have different meaning. Let’s see how to create a playlist.&lt;/p></description></item><item><title>Wpf Design Time Data part 3</title><link>https://www.codewrecks.com/post/old/2012/11/wpf-design-time-data-part-3/</link><pubDate>Fri, 30 Nov 2012 18:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2012/11/wpf-design-time-data-part-3/</guid><description>&lt;ul>
&lt;li>&lt;a href="http://www.codewrecks.com/blog/index.php/2012/10/22/wpf-design-time-data/">Wpf Design Time Data – An introduction&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.codewrecks.com/blog/index.php/2012/11/07/wpf-and-design-time-data-part-2use-a-concrete-class-2/">Wpf and Design data, Use a concrete class&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>If you followed the suggestion of my first couple of posts &lt;em>you should have a dedicated Design Time view model for each real View Model in your application so you can effectively use Design Time Data&lt;/em>. You should be aware that &lt;strong>Design Time data can be directly manipulated by the designer&lt;/strong>. In property windows you can see all properties of the Windows object (remember to select the windows), so you can locate the DataContext property and expand it to view its content.&lt;/p></description></item><item><title>Shim constructors to isolate 'Future Objects'</title><link>https://www.codewrecks.com/post/old/2012/06/shim-constructors-to-isolate-future-objects/</link><pubDate>Thu, 14 Jun 2012 15:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2012/06/shim-constructors-to-isolate-future-objects/</guid><description>&lt;p>I’ve already blogged previously about the new Shim Library of Visual Studio 2012&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://www.codewrecks.com/blog/index.php/2012/04/27/using-shims-in-visual-studio-11-to-test-untestable-code/">Using Shims in Visual Studio to test untestable code&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.codewrecks.com/blog/index.php/2012/05/10/shim-and-instancebehavior-fallthrough-to-isolate-part-of-the-sut/">Shim and InstanceBehavior fallthrough to isolate part of the SUT.&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Now it is time to explore another scenario where shim can save your life. Suppose you are working with Hardware, Es. a barcode reader and you have a class in your system wrote in this way.&lt;/p>
&lt;div class="highlight">&lt;div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">BarcodeReader&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> BarcodeReader() { 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//connect to the hardware, if the hardware is not there &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//throw an exception&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> String ReadCode() 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//dialogate with the hardware and get the Barcode&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;p>This class manage the &lt;strong>connection to a physical BarcodeReader in the constructor&lt;/strong> and if &lt;strong>something went wrong throws an exception&lt;/strong> and expose a ReadCode method that ask the Physical reader to read a Barcode. This class is used with the following pattern throughout all the software.&lt;/p></description></item><item><title>News in the TFS 2012 RC</title><link>https://www.codewrecks.com/post/old/2012/06/news-in-the-tfs-2012-rc/</link><pubDate>Wed, 06 Jun 2012 06:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2012/06/news-in-the-tfs-2012-rc/</guid><description>&lt;p>I heard many different reactions on the new Team Explorer in Visual Studio 2012, some people really likes it, some other still need to familiarize with it, &lt;strong>but most of them complained that they find difficult to associate a Work Item to a check in because the drop down list in VS 11 beta only permits you to specify the id of the work item&lt;/strong>. The only way in VS2012 to associate a WI to the Chec-in is dragging a Work Item from a Query result to the &lt;em>Related Work Items area of Pending Changes&lt;/em>&lt;/p></description></item><item><title>Visual Studio 2012 and TFS 2012 RC is finally out</title><link>https://www.codewrecks.com/post/old/2012/06/visual-studio-2012-and-tfs-2012-rc-is-finally-out/</link><pubDate>Fri, 01 Jun 2012 13:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2012/06/visual-studio-2012-and-tfs-2012-rc-is-finally-out/</guid><description>&lt;p>Yesterday &lt;strong>the Release Candidate of TFS2012 and Visual Studio 2012 were released by the Visual Studio team&lt;/strong> , you can download directly from Microsoft, and yes, the name is now officially Visual Studio 2012 and TFS 2012 :)&lt;/p>
&lt;p>&lt;strong>Visual Studio 2012 RC&lt;/strong> : &lt;a href="http://www.microsoft.com/visualstudio/11/en-us">http://www.microsoft.com/visualstudio/11/en-us&lt;/a>&lt;/p>
&lt;p>&lt;strong>Team Foundation Server 2012 RC&lt;/strong> : &lt;a href="http://www.microsoft.com/en-us/download/details.aspx?id=29918" title="http://www.microsoft.com/en-us/download/details.aspx?id=29918">http://www.microsoft.com/en-us/download/details.aspx?id=29918&lt;/a>&lt;/p>
&lt;p>If you are interested in the changes from the Beta you can &lt;a href="http://msdn.microsoft.com/en-us/library/bb386063%28v=vs.110%29">check this MSDN Page&lt;/a>, you can find also a lot of information from the Visual Studio ALM Rangers, that &lt;a href="http://blogs.msdn.com/b/visualstudioalm/archive/2012/05/31/welcome-to-visual-studio-2012-alm-rangers-readiness-rc-wave.aspx">released the Readiness RC Wave&lt;/a> full of important information. We have a good improvement on the upgrade process as &lt;a href="http://blogs.msdn.com/b/visualstudioalm/archive/2012/05/31/deep-dive-on-configure-features.aspx">described in This post,&lt;/a> that explains the new upgrade procedure and how the wizard can avoid breaking something if you have customized a standard TFS Process.&lt;/p></description></item></channel></rss>
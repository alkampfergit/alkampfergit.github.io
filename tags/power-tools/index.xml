<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Power Tools on Codewrecks</title><link>https://www.codewrecks.com/tags/power-tools/</link><description>Recent content in Power Tools on Codewrecks</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 21 Dec 2011 11:00:37 +0200</lastBuildDate><atom:link href="https://www.codewrecks.com/tags/power-tools/index.xml" rel="self" type="application/rss+xml"/><item><title>Search in Tfs Work Items never was so easy</title><link>https://www.codewrecks.com/post/old/2011/12/search-in-tfs-work-items-never-was-so-easy/</link><pubDate>Wed, 21 Dec 2011 11:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2011/12/search-in-tfs-work-items-never-was-so-easy/</guid><description>The search box functionality was introduced with the August release, but I see that some people still does not know it. This question arose during a talk about how to handle the lifecycle of a bug, and when it was time to deal with the “avoid duplication” issue, people told me that they want a simple way to search work item by text, because this is the fastest way to verify if a bug has some duplicate.</description></item><item><title>Team Foundation Server power tools December release</title><link>https://www.codewrecks.com/post/old/2011/12/team-foundation-server-power-tools-december-release/</link><pubDate>Sat, 17 Dec 2011 11:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2011/12/team-foundation-server-power-tools-december-release/</guid><description>You can read all the details Here, but basically it is a release mainly focused for “non visual studio developers”. This new release has a MSSCCI provider for 64 bit, and a version of Power Tools for eclipse, and it is available from the Eclipse update site.
For those ones interested in knowing the news for VS Power Tools, basically it add the capability to search for number in the “Work Item Search Box” and a bunch of rules in the Best Practice Analyzer to identify issues with Project Server interaction, so, for Visual Studio Users it is a minor release, and probably the last for Visual Studio 2010, as stated by Brian</description></item><item><title>TFS Pills merging conflicts during unshelve</title><link>https://www.codewrecks.com/post/old/2011/12/tfs-pills-merging-conflicts-during-unshelve/</link><pubDate>Fri, 02 Dec 2011 15:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2011/12/tfs-pills-merging-conflicts-during-unshelve/</guid><description>Shelvesets are a really useful concept in TFS, and you should be aware that thanks to Power Tools you can even do a Merge during an Unshelve in case of conflicts. As an example suppose this simple and stupid scenario, you have this code.
Figure 1 * : Original Code*
Now lets generate a conflict with Shelveset; simply typing some text.
Figure 2: Modified code, insertion of a simple comment.</description></item><item><title>Distributing Visual Studio addin for the team</title><link>https://www.codewrecks.com/post/old/2010/12/distributing-visual-studio-addin-for-the-team/</link><pubDate>Sat, 04 Dec 2010 09:00:37 +0200</pubDate><guid>https://www.codewrecks.com/post/old/2010/12/distributing-visual-studio-addin-for-the-team/</guid><description>One of the most requested feature for TFS is the ability to distribute automatically Visual Studio adding to team member. This needs is especially important for addin like Custom Check-in policies, because if developers do not install check-in policies they would not be run during a Check-in. Every time you show check-in policies to a customer, it immediately ask you how to distribute them to all developers pc automatically.
I found that some people are not aware that such a feature is already there, but is included in TFS power tools, so it is not available out of the box with a plain installation of Visual Studio and TFS.</description></item></channel></rss>